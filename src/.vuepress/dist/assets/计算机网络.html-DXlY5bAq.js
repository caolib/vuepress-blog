import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as g,c as e,b as t,a,f as s,w as r,d as p,e as i,o as l}from"./app-Bfcpmh6L.js";const c={},d=i('<h1 id="计算机网络" tabindex="-1"><a class="header-anchor" href="#计算机网络"><span>计算机网络</span></a></h1><p><a href="https://git.io/typing-svg"><img src="https://readme-typing-svg.demolab.com?font=Cascadia+Code&amp;weight=900&amp;size=60&amp;duration=2000&amp;pause=1000&amp;center=true&amp;vCenter=true&amp;random=false&amp;width=1000&amp;height=100&amp;lines=Computer+Network+" alt="Typing SVG"></a></p><h2 id="_1-计算机网络概述" tabindex="-1"><a class="header-anchor" href="#_1-计算机网络概述"><span>1. 计算机网络概述</span></a></h2><h3 id="_1-1-计网的组成" tabindex="-1"><a class="header-anchor" href="#_1-1-计网的组成"><span>1.1 计网的组成</span></a></h3><h4 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h4><p>简单定义：<strong>硬件</strong>(独立和连接)+<strong>软件</strong>(协议)+<strong>目的</strong>(共享和通信)</p><blockquote><p><strong>计算机网络就是以传输信息为基本目的,用通信线路和通信设备将多个计算机连接起来的计算机系统的集合</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/06/8bp2LLjc.png" alt="CopyQ.XjcbYs" tabindex="0" loading="lazy"><figcaption>CopyQ.XjcbYs</figcaption></figure><h4 id="分类" tabindex="-1"><a class="header-anchor" href="#分类"><span>分类</span></a></h4><blockquote><p>按网络<strong>覆盖范围</strong>进行分类</p></blockquote><ol><li><strong>局域网</strong>(Local Area Network,<code>LAN</code>,一个实验室、一幢楼、一个校园)</li><li><strong>城域网</strong>(Metropolitan Area Network,<code>MAN</code>,几个街区甚至整个城市,5-50 km)</li><li><strong>广域网</strong>(Wide Area Network,<code>WAN</code>,覆盖一个国家或地区甚至几个洲,也称为<strong>远程网</strong>)</li><li><strong>个人区域网</strong>(Personal Area Network,<code>PAN</code>,10 m以内)</li></ol><blockquote><p>按网络的<strong>使用者</strong>进行分类</p></blockquote><ol><li><strong>公用网</strong>(所有愿意缴纳费用的人都能使用)</li><li><strong>专用网</strong>(专门为本单位的特殊业务工作建造的,例如,军队、铁路、电力等系统)</li></ol><img src="https://img2.imgtp.com/2024/04/04/Nqa5DJOR.png" alt="计算机网络分类" title="计算机网络的分类"><h4 id="组成" tabindex="-1"><a class="header-anchor" href="#组成"><span>组成</span></a></h4><h5 id="组成部分" tabindex="-1"><a class="header-anchor" href="#组成部分"><span>组成部分</span></a></h5><blockquote><p>计算机网络主要由<strong>硬件</strong>、<strong>软件</strong>、<strong>协议</strong>组成</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/06/2ynHlxA5.png" alt="image-20240406104102808" tabindex="0" loading="lazy"><figcaption>image-20240406104102808</figcaption></figure><h5 id="工作方式" tabindex="-1"><a class="header-anchor" href="#工作方式"><span>工作方式</span></a></h5><p>从<strong>工作方式</strong>上看,计算机网络可分为：</p><ol><li><strong>边缘部分</strong>：用户直接使用的</li><li><strong>核心部分</strong>：为边缘部分提供服务的</li></ol><img src="https://img2.imgtp.com/2024/04/04/zI8FwGzp.png" title="woc,O" style="zoom:67%;"><h5 id="逻辑功能" tabindex="-1"><a class="header-anchor" href="#逻辑功能"><span>逻辑功能</span></a></h5><p>从逻辑功能上看,计算机网络由通信子网和资源子网组成</p><ul><li><strong>通信子网</strong>：由各种<strong>传输介质</strong>、<strong>通信设备</strong>和相应的<strong>网络协议</strong>组成</li><li><strong>资源子网</strong>：实现资源共享功能的<strong>设备</strong>及其<strong>软件</strong>的集合</li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/sT1JdhEz.png" alt="image-20240404154608008" tabindex="0" loading="lazy"><figcaption>image-20240404154608008</figcaption></figure><h3 id="_1-2-功能" tabindex="-1"><a class="header-anchor" href="#_1-2-功能"><span>1.2 功能</span></a></h3><figure><img src="https://img2.imgtp.com/2024/04/06/fIl3XYce.png" alt="image-20240406104955734" tabindex="0" loading="lazy"><figcaption>image-20240406104955734</figcaption></figure><h3 id="_1-3-互联网" tabindex="-1"><a class="header-anchor" href="#_1-3-互联网"><span>1.3 互联网</span></a></h3><h4 id="网络的网络" tabindex="-1"><a class="header-anchor" href="#网络的网络"><span>网络的网络</span></a></h4><ol><li>网络</li></ol><blockquote><p><strong>网络</strong>由若干<strong>节点</strong>(Node)和连接这些节点的<strong>链路</strong>(Link)组成</p><p>节点：可以是计算机、集线器、交换机、路由器</p></blockquote><img src="https://img2.imgtp.com/2024/04/04/84kZGy2h.png" title="网络" style="zoom:80%;"><ol start="2"><li><strong>互连网络</strong>(<code>internet</code>,通用名词,<span style="color:#ff6b6b;font-weight:bold;font-size:20px;">注意和 互联网Internet 区分</span>)</li></ol><blockquote><p>将网络用路由器连接起来就成了互连网络,因此互连网络是<strong>网络的网络</strong></p></blockquote><img src="https://img2.imgtp.com/2024/04/04/QuZM13pW.png" title="互连网络就是网络的网络" style="zoom:80%;"><blockquote><p>总结：<strong>网络把许多计算机连接在一起,而互连网络则把许多网络连接在一起</strong></p></blockquote><ol start="3"><li><strong>互联网</strong>(Internet,也称 因特网)</li></ol><blockquote><p>当前全球最大的、开放的、由众多网络相互连接而成的特定计算机网络,<strong>采用TCP/IP协议作为通信规则</strong>,前身是美国的阿帕网<code>ARPANet</code></p></blockquote><h4 id="互联网结构发展" tabindex="-1"><a class="header-anchor" href="#互联网结构发展"><span>互联网结构发展</span></a></h4><ol><li><p>第一阶段：从单个网络<code>ARPANET</code>向互连网络发展</p></li><li><p>第二阶段：逐步建成三级结构的互联网</p></li><li><p>第三阶段：逐渐形成多层次的[^ISP]结构的互联网</p></li></ol><img src="https://img2.imgtp.com/2024/04/04/2jKLXwuK.png" title="ISP结构的互联网" style="zoom:67%;"><h3 id="_1-4-电路、报文、分组交换" tabindex="-1"><a class="header-anchor" href="#_1-4-电路、报文、分组交换"><span>1.4 <a href="https://www.bilibili.com/video/BV19E411D78Q?t=0.0&amp;p=4" target="_blank" rel="noopener noreferrer">电路、报文、分组交换</a></span></a></h3><h4 id="电路交换" tabindex="-1"><a class="header-anchor" href="#电路交换"><span>电路交换</span></a></h4><blockquote><p>电路交换是指在通信开始之前,建立一条专用的<strong>物理连接</strong>,然后在通信过程中<strong>一直占用这条连接</strong>,直到通信结束。在这个过程中,数据被分成固定大小的数据包,每个数据包都被分配一个专用的物理通路,<strong>适用于低频次、大量地传输数据</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/6OxFTe0R.png" alt="电路交换" tabindex="0" loading="lazy"><figcaption>电路交换</figcaption></figure><blockquote><p>这种必须经过 1.<strong>建立连接</strong>(分配通信资源) 2.<strong>通信</strong>(一直占用通信资源) 3.<strong>释放连接</strong>(归还通信资源)三个步骤的交换方式称为电路交换</p><p>优点：通信<strong>时延小</strong>、<strong>有序传输</strong>、<strong>没有冲突</strong>、传输<strong>速度快</strong>、<strong>控制简单</strong>等</p><p>缺点：</p><ul><li><strong>建立/释放连接</strong>都需要<strong>额外的时间开销</strong></li><li><strong>线路</strong>被通信双方<span style="color:#ff6b6b;font-weight:bold;">独占</span>,<strong>利用率低</strong></li><li><strong>线路分配</strong>的<strong>灵活性差</strong>(某段线路出现错误时只能重新建立连接)</li><li>交换节点<strong>不支持“差错控制”</strong>(无法发现传输过程中的发生的数据错误)</li></ul><p><span style="color:#ff6b6b;font-weight:bold;font-size:18px;">总结</span>:计算机之间数据往往是“<strong>突发式</strong>”传输,即往往会<strong>高频次、少量</strong>地传输数据,所以电路交换并不适用于计算机网络</p></blockquote><h4 id="报文交换" tabindex="-1"><a class="header-anchor" href="#报文交换"><span>报文交换</span></a></h4><blockquote><p>我们通常把要发送的整块数据称为一个<strong>报文(Message)</strong>,<strong>用户数据</strong>加上<strong>源地址</strong>和<strong>目的地址</strong>等信息后封装成报文,报文交换采用<strong>存储转发</strong>技术,整个报文传送到相邻结点,全部存储下来后查找<strong>转发表</strong>,转发到下一个结点,直到到达目的地</p></blockquote><img src="https://img2.imgtp.com/2024/04/04/RQWjb8wd.png" alt="image-20240404145149676" style="zoom:80%;"><blockquote><p>优点：</p><ul><li>通信前<strong>无需建立连接</strong></li><li>数据以“<strong>报文</strong>”为单位被交换节点间“<strong>存储转发</strong>”,通信<strong>线路可以灵活分配</strong></li><li>在通信时间内,两个用户无需独占一整条物理线路。相比于电路交换,<strong>线路利用率高</strong></li><li>交换节点支持“<strong>差错控制</strong>”(通过校验技术)</li></ul><p>缺点：</p><ul><li>报文不定长,<span style="color:#ff6b6b;font-weight:bold;">不方便存储转发管理</span></li><li>长报文的<span style="color:#ff6b6b;font-weight:bold;">存储转发时间开销大、缓存开销大</span></li><li><span style="color:#ff6b6b;font-weight:bold;">长报文容易出错,重传代价高</span>(报文出错且校验技术无法修复时需要重传,报文越长越明显)</li></ul></blockquote><h4 id="分组交换" tabindex="-1"><a class="header-anchor" href="#分组交换"><span><strong>分组交换</strong></span></a></h4><blockquote><p>分组交换：发送报文之前,<strong>先将报文划分为一个个更小的等长的数据段</strong>,在数据段前面加上<strong>首部</strong>(又称为包头)就构成了<strong>分组</strong>(又称为包),每个分组都带有<strong>目标地址</strong>和<strong>源地址</strong>等信息,然后通过网络传输。在传输过程中,每个数据包都独立传输,<strong>可以通过不同的路径</strong>到达目的地</p></blockquote><img src="https://img2.imgtp.com/2024/04/04/8SrtXoUf.png" alt="分组交换" style="zoom:80%;"><blockquote><p>分组交换的优点：</p><ul><li>通信前<strong>无需建立连接</strong></li><li>数据以“<strong>分组</strong>”为单位被交换节点间“<strong>存储转发</strong>”,通信线路可以<strong>灵活分配</strong></li><li>在通信时间内,两个用户<strong>无需独占</strong>一整条物理线路。相比于电路交换,<strong>线路利用率高</strong></li><li>交换节点<strong>支持“差错控制”</strong>(通过校验技术)</li></ul><p>相比于报文交换,分组交换改进了如下问题：</p><ul><li><strong>分组定长,方便存储转发管理</strong></li><li>分组的<strong>存储转发时间开销小、缓存开销小</strong></li><li>分组<strong>不易出错,重传代价低</strong></li></ul><p>分组交换的缺点：</p><ul><li>相比于报文交换,<strong>控制信息占比增加</strong></li><li>相比于电路交换,<strong>依然存在存储转发时延</strong></li><li>报文被拆分为多个分组,传输过程中可能出现<strong>失序、丢失</strong>等问题,<strong>增加处理的复杂度</strong></li></ul></blockquote><p><strong>3种交换方式的对比</strong></p><figure><img src="https://img2.imgtp.com/2024/04/04/7G4LaEvx.png" alt="交换方式对比" tabindex="0" loading="lazy"><figcaption>交换方式对比</figcaption></figure><div style="text-align:center;"><span style="color:#ff6b6b;font-weight:bold;font-size:25px;">总结：现代计算机网络采用分组交换技术</span></div>',58),h=i(`<h4 id="_1-速率" tabindex="-1"><a class="header-anchor" href="#_1-速率"><span>1. 速率</span></a></h4><blockquote><ol><li><p>数据的传输速率,也称为数据率、比特率 1字节(byte)=8比特(bit)</p></li><li><p>单位是 <code>bit/s 或 bps</code> ,比特是数据量的单位,是一个二进制数字(0或1)</p></li><li><p>一般来说,表示<strong>速率</strong>时$K = 10^{3}$,表示<strong>存储容量或文件大小</strong>时$k = 2^{10}$</p></li></ol></blockquote><img src="https://img2.imgtp.com/2024/04/04/0oBrmEnl.png" alt="速率"><h4 id="_2-带宽" tabindex="-1"><a class="header-anchor" href="#_2-带宽"><span>2. 带宽</span></a></h4><ol><li><p>带宽本来是指某个信号具有的频带宽度,表示通信线路允许通过的信号频带范围,单位为赫兹</p></li><li><p>计算机网络中,带宽表示网络某通道传输能力,即最高数据率,单位为比特每秒(bit/s)</p><img src="https://img2.imgtp.com/2024/04/04/HNs5KlGu.png" alt="带宽"></li></ol><h4 id="_3-吞吐量" tabindex="-1"><a class="header-anchor" href="#_3-吞吐量"><span>3. 吞吐量</span></a></h4><blockquote><p>也称为吞吐率,表示单位时间内通过某个网络(或信道、接口)的数据量</p></blockquote><h4 id="_4-时延" tabindex="-1"><a class="header-anchor" href="#_4-时延"><span>4. 时延</span></a></h4><blockquote><p>时延是指数据从网络的一端传送到另外一端所需要的时间,也称为延迟或迟延</p><p>网络中的时延通常由以下几个不同的部分组成：</p><ol><li><p>发送时延：主机或路由器将整个分组的所有比特发送到通信线路上所需要的时间 $$ \\text{发送时延} = \\frac{\\text{分组长度}}{\\text{发送速率}} $$</p></li><li><p>传播时延：是电磁波在信道中传播一定距离所花费的时间 $$ \\text{传播时延} = \\frac{\\text{信道长度}}{\\text{电磁波在信道上的传播速度}} $$</p></li><li><p>处理时延：主机或路由器在收到分组时处理分组花费的时间(一般不方便计算)</p></li></ol></blockquote><img src="https://img2.imgtp.com/2024/04/04/3MPbeO6Z.png" alt="时延"><figure><img src="https://img2.imgtp.com/2024/04/04/ZdVAQDaU.png" alt="时延" tabindex="0" loading="lazy"><figcaption>时延</figcaption></figure><h4 id="_5-时延带宽积-往返时间-利用率-丢包率" tabindex="-1"><a class="header-anchor" href="#_5-时延带宽积-往返时间-利用率-丢包率"><span>5. 时延带宽积 往返时间 利用率 丢包率</span></a></h4><img src="https://img2.imgtp.com/2024/04/04/gJwUU2lk.png" alt="" style=""><h3 id="_1-6-计算机网络体系结构" tabindex="-1"><a class="header-anchor" href="#_1-6-计算机网络体系结构"><span>1.6 <strong>计算机网络体系结构</strong></span></a></h3><h4 id="_1-6-1-网络协议" tabindex="-1"><a class="header-anchor" href="#_1-6-1-网络协议"><span>1.6.1 网络协议</span></a></h4><p>网络协议主要由以下三要素组成：</p><ol><li><strong>语法</strong>：数据与控制信息的结构或格式(例如,地址字段多长以及它在分组的什么位置)</li><li><strong>语义</strong>：各个控制信息的具体含义(需要发出何种控制信息、完成何种动作及做出何种响应)</li><li><strong>同步(时序)</strong>：事件实现的顺序和时间的详细说明(数据何时发出以及以什么速率发出)</li></ol><h4 id="_1-6-2-分层体系结构" tabindex="-1"><a class="header-anchor" href="#_1-6-2-分层体系结构"><span>1.6.2 分层体系结构</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/k6fK6Fth.png" alt="常见的计算机网络分层体系结构" tabindex="0" loading="lazy"><figcaption>常见的计算机网络分层体系结构</figcaption></figure><h4 id="_1-6-3-原理体系结构" tabindex="-1"><a class="header-anchor" href="#_1-6-3-原理体系结构"><span>1.6.3 原理体系结构</span></a></h4><blockquote><p>我们学习的是具有五层协议的原理体系结构</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/aWnMqDAo.png" alt="原理体系结构" tabindex="0" loading="lazy"><figcaption>原理体系结构</figcaption></figure><h4 id="_1-6-4-实体、协议和服务" tabindex="-1"><a class="header-anchor" href="#_1-6-4-实体、协议和服务"><span>1.6.4 实体、协议和服务</span></a></h4><blockquote><p><strong>协议是水平的,服务是垂直的</strong></p><ol><li><mark>实体</mark>：任何可发送或接收信息的硬件或软件进程</li><li><mark>协议</mark>：<strong>控制两个或多个对等实体之间通信的规则的集合</strong></li><li><strong>下层通过层级接口向上层提供服务,下面的协议对上面的实体是”透明“的</strong></li><li>透明：某个实际存在的事物看起来好像不存在一样</li></ol></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/QxFzryw5.png" alt="实体、协议和服务" tabindex="0" loading="lazy"><figcaption>实体、协议和服务</figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/ZEjjP9Xe.png" alt="1" tabindex="0" loading="lazy"><figcaption>1</figcaption></figure><h3 id="_1-7-相关习题" tabindex="-1"><a class="header-anchor" href="#_1-7-相关习题"><span>1.7 相关习题</span></a></h3><figure><img src="https://img2.imgtp.com/2024/04/04/YMD1YO49.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/apY4UiGK.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-8-思维导图和习题" tabindex="-1"><a class="header-anchor" href="#_1-8-思维导图和习题"><span>1.8 思维导图和习题</span></a></h3><ol><li><a href="https://www.kdocs.cn/view/l/cqzI95zH7t6v" target="_blank" rel="noopener noreferrer">第1章 概述(思维导图)</a></li><li><a href="https://www.kdocs.cn/view/l/cmCC5Updax17" target="_blank" rel="noopener noreferrer">第1章 概述 习题 (kdocs.cn)</a></li></ol><hr><h2 id="_2-物理层" tabindex="-1"><a class="header-anchor" href="#_2-物理层"><span>2. 物理层</span></a></h2><blockquote><p><strong>任务：怎样在连接各种计算机的传输媒体上传输数据比特流</strong>(使数据链路层感觉不到各种传输媒体之间的差异,只需要使用物理层服务就能传输比特流,不必关心具体怎么实现)</p></blockquote><h3 id="_2-1-基本概念" tabindex="-1"><a class="header-anchor" href="#_2-1-基本概念"><span>2.1 基本概念</span></a></h3><figure><img src="https://img2.imgtp.com/2024/04/04/DwZwhVmK.png" alt="物理层的基本概念" tabindex="0" loading="lazy"><figcaption>物理层的基本概念</figcaption></figure><h3 id="_2-2-数据通信的基础知识" tabindex="-1"><a class="header-anchor" href="#_2-2-数据通信的基础知识"><span>2.2 数据通信的基础知识</span></a></h3><h4 id="通信系统模型" tabindex="-1"><a class="header-anchor" href="#通信系统模型"><span>通信系统模型</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/RxOxpZHA.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="编码与调制" tabindex="-1"><a class="header-anchor" href="#编码与调制"><span>编码与调制</span></a></h4><ol><li><p>定义</p><ul><li><p>模拟信号：消息的参数的取值是连续的</p></li><li><p>数字信号：消息的参数的取值是离散的</p></li><li><p>编码：将<strong>数字数据转换成数字信号</strong>的过程</p></li><li><p>调制：将<strong>数字数据转换成模拟信号</strong>的过程</p></li></ul></li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/ACtS6JxY.png" alt="编码与调制" tabindex="0" loading="lazy"><figcaption>编码与调制</figcaption></figure><ol start="2"><li><strong>常用编码方式</strong></li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/9MM2Ky5h.png" alt="常用编码方式" tabindex="0" loading="lazy"><figcaption>常用编码方式</figcaption></figure><ol start="3"><li>基本的调制方法</li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/vAkWNODU.png" alt="基本的调制方法" tabindex="0" loading="lazy"><figcaption>基本的调制方法</figcaption></figure><ol start="4"><li><strong>相位调制</strong></li></ol><blockquote><p><strong>8相位调制</strong>表示8种状态,只需要<strong>3个比特</strong>(二进制,$2^3=8$)即可,所以<strong>1个码元可以承载3个比特</strong>,<strong>数据传输率 = 3*波特率</strong>,以此类推</p></blockquote><h4 id="信道的极限容量" tabindex="-1"><a class="header-anchor" href="#信道的极限容量"><span>信道的极限容量</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/FXFhMUmi.png" alt="信号失真" tabindex="0" loading="lazy"><figcaption>信号失真</figcaption></figure><h5 id="奈式准则" tabindex="-1"><a class="header-anchor" href="#奈式准则"><span><strong>奈式准则</strong></span></a></h5><blockquote><p>也称[<strong>奈奎斯特定理</strong>|<strong>采样定理</strong>],理想低通信道的最高码元传输速率 = $2<em>W$ 波特 = $2</em>W*\\log_2{V}$​</p><p>V：一个码元可以表示的离散电平数目</p><p>W：频率带宽,最低和最高频率之差</p><p>理想低通信道：不考虑噪声</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/lU9RuLRg.png" alt="奈式准则" tabindex="0" loading="lazy"><figcaption>奈式准则</figcaption></figure><h5 id="香农公式" tabindex="-1"><a class="header-anchor" href="#香农公式"><span>香农公式</span></a></h5><blockquote><p><strong>香农公式</strong> $$ c = W \\cdot \\log_{2}(1 + \\frac{S}{N}) $$ 知道信噪比(dB)求S/N,假设信噪比为30dB</p><ol><li>$$30 = 10 \\cdot \\log_{10}(\\frac{S}{N})$$</li><li>$$3 = \\log_{10}(\\frac{S}{N})$$</li><li>$$\\frac{S}{N} = 10^3$$</li></ol></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/x9dHMH8w.png" alt="香农公式" tabindex="0" loading="lazy"><figcaption>香农公式</figcaption></figure><blockquote><ol><li>在信道带宽一定的情况下,根据奈氏准则和香农公式,要想提高信息的传输速率就必须采用多元制(更好的调制方法)和努力提高信道中的信噪比</li><li>自从香农公式发表后,各种新的信号处理和调制方法就不断出现,其目的都是为了尽可能地接近香农公式给出的传输速率极限</li><li>影响信号传输速率的因素： <ul><li><strong>信道带宽</strong></li><li><strong>信噪比</strong></li><li><strong>码元速率(调制速率)</strong></li></ul></li></ol></blockquote><h4 id="传输方式" tabindex="-1"><a class="header-anchor" href="#传输方式"><span>传输方式</span></a></h4><ol><li>并行传输和串行传输</li></ol><blockquote><ul><li>并行传输速度是串行传输的n倍,但是<span style="color:#ff6b6b;font-weight:bold;">成本高</span>所以<strong>长距离传输使用串行传输</strong></li><li>远距离传输使用串行传输,<strong>计算机内部使用并行传输</strong></li></ul></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/ObkVayAR.png" alt="并行传输和串行传输" tabindex="0" loading="lazy"><figcaption>并行传输和串行传输</figcaption></figure><ol start="2"><li>异步传输和同步传输</li></ol><blockquote><p>异步传输字节之间异步,但是要添加开始码和停止码作为引导</p></blockquote><img src="https://img2.imgtp.com/2024/04/04/60wDHc1z.png" alt="异步传输和同步传输"><ol start="3"><li>单工、半双工和全双工通信</li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/SnlGXRdp.png" alt="单工、半双工和全双工通信" tabindex="0" loading="lazy"><figcaption>单工、半双工和全双工通信</figcaption></figure><h3 id="_2-3-物理层传输介质" tabindex="-1"><a class="header-anchor" href="#_2-3-物理层传输介质"><span>2.3 物理层传输介质</span></a></h3><h4 id="导引型介质" tabindex="-1"><a class="header-anchor" href="#导引型介质"><span>导引型介质</span></a></h4><ol><li><strong>同轴电缆</strong></li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/UAaTjOr4.png" alt="同轴电缆" tabindex="0" loading="lazy"><figcaption>同轴电缆</figcaption></figure><ol start="2"><li><strong>双绞线</strong></li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/CGI4fSr6.png" alt="双绞线" tabindex="0" loading="lazy"><figcaption>双绞线</figcaption></figure><ol start="3"><li><strong>光纤</strong></li></ol><ul><li>多模光纤：利用光的<strong>全反射特性</strong>,光源使用<strong>发光二极管</strong>,适合<strong>近距离传输</strong></li><li>单模光纤：光纤直径减小到只有光的一个波长,可使光线<strong>直线传播</strong>,光源使用<strong>半导体激光器</strong>,适合<strong>远距离传输</strong>,但是<span style="color:#ff6b6b;font-weight:bold;">成本较高</span></li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/VE3yDe2c.png" alt="光纤" tabindex="0" loading="lazy"><figcaption>光纤</figcaption></figure><h4 id="非导引型介质" tabindex="-1"><a class="header-anchor" href="#非导引型介质"><span>非导引型介质</span></a></h4><ol><li><strong>微波</strong>:有很强的<strong>方向性</strong></li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/CkEx8Sjz.png" alt="微波" tabindex="0" loading="lazy"><figcaption>微波</figcaption></figure><ol start="2"><li><strong>无线电波</strong>:有较强的穿透能力,可以传输很长距离,<strong>信号向所有方向传播</strong>,广泛用于通信领域(<code>WLAN</code>)</li><li>红外线和可见光</li></ol><h4 id="物理层接口的特性" tabindex="-1"><a class="header-anchor" href="#物理层接口的特性"><span><strong>物理层接口的特性</strong></span></a></h4><ol><li>机械特性：指名接口所用接线器的<strong>形状</strong>和<strong>尺寸</strong>、<strong>引脚数目</strong>和<strong>排列</strong>、<strong>固定</strong>和<strong>锁定装置</strong>等</li><li>电气特性：指名在接口电缆的各条线上的<strong>电压范围</strong>、<strong>传输速率</strong>和<strong>距离限制</strong>等</li><li>功能特性：指名某条线上出现某一电平的<strong>电压的意义</strong>,以及<strong>每条线的功能</strong></li><li>过程特性：也称规程特性,指名对不同功能的各种可能事件的<strong>出现顺序</strong></li></ol><hr><h3 id="_2-5-物理层设备" tabindex="-1"><a class="header-anchor" href="#_2-5-物理层设备"><span>2.5 物理层设备</span></a></h3><h4 id="中继器" tabindex="-1"><a class="header-anchor" href="#中继器"><span><strong>中继器</strong></span></a></h4><ul><li><p><strong>功能</strong>:对信号进行<strong>再生和还原</strong>,<strong>对衰减的信号进行放大</strong>,保持与原数据相同(<strong>不能检测出信号是否错误</strong>),以增加信号传输的距离,延长网络的长度</p></li><li><p>中继器有<strong>2个端口</strong>,两端是网段而非子网,适用于**完全相同的两类网络(速率、协议等)**的互联</p></li><li><p><code>5-4-3</code>规则：网络标准中都对信号的延迟范围作了具体的规定,因而中继器只能在规定的范围内进行,否则会网络故障,下图中5段链路使用4个中继器连接,最多允许3台主机</p><figure><img src="https://img2.imgtp.com/2024/04/04/9JCU8e1K.png" alt="image-20240404212316193" tabindex="0" loading="lazy"><figcaption>image-20240404212316193</figcaption></figure></li></ul><h4 id="集线器" tabindex="-1"><a class="header-anchor" href="#集线器"><span><strong>集线器</strong></span></a></h4><blockquote><p><strong>集线器相当于多端口中继器</strong></p></blockquote><ul><li><strong>功能</strong>:对信号<strong>再生放大转发</strong></li><li>有<strong>1个输入</strong>端口和<strong>多个输出</strong>端口,<strong>不具备定向转发</strong>信号功能,是一个共享性设备,<strong>不能分割冲突域</strong></li><li>有多台设备共享时,带宽均分给各个设备</li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/Ac4qbmev.png" alt="image-20240404213049374" tabindex="0" loading="lazy"><figcaption>image-20240404213049374</figcaption></figure><h3 id="_2-6-相关习题和资料" tabindex="-1"><a class="header-anchor" href="#_2-6-相关习题和资料"><span>2.6 相关习题和资料</span></a></h3><ol><li><a href="https://www.kdocs.cn/view/l/cfixYkxNJ7Ep" target="_blank" rel="noopener noreferrer">第2章 物理层 习题</a></li><li><a href="https://www.kdocs.cn/view/l/ckmnMjp5UQvK" target="_blank" rel="noopener noreferrer">第2章 物理层(思维导图)</a></li></ol><hr><h2 id="_3-数据链路层" tabindex="-1"><a class="header-anchor" href="#_3-数据链路层"><span>3. 数据链路层</span></a></h2><figure><img src="https://img2.imgtp.com/2024/04/09/ecaBaiM8.png" alt="image-20240409202339726" tabindex="0" loading="lazy"><figcaption>image-20240409202339726</figcaption></figure><blockquote><p><strong>任务：解决数据包在一个网络或一段链路上传输的问题</strong></p><p><strong>功能</strong>：</p><ul><li>为网络层提供服务:1.无确认无连接服务2.有确认无连接服务3.有确认面向连接服务 (面向连接一定有确认!)</li><li>链路管理,即连接的建立、维持、释放(用于面向连接的服务)</li><li><strong>封装成帧</strong></li><li><strong>流量控制</strong>(限制发送方)</li><li><strong>差错控制</strong>(帧错/位错)</li></ul></blockquote><h3 id="_3-1-相关概念" tabindex="-1"><a class="header-anchor" href="#_3-1-相关概念"><span>3.1 相关概念</span></a></h3><blockquote><ul><li>**链路(Link)**网络中两个节点之间的<span style="color:#ff6b6b;font-weight:bold;">物理线路</span>,而中间没有任何其他的交换节点</li><li><strong>数据链路(Data Link)<strong>网络中两个节点之间的<span style="color:#ff6b6b;font-weight:bold;">逻辑线路</span>,把实现</strong>控制数据传输协议的硬件和软件</strong>加到链路上就构成数据链路</li><li>**网络适配器(俗称网卡)**和其相应的软件驱动程序就实现了这些协议,一般的网络适配器都包含了物理层和数据链路层这两层的功能</li><li><strong>帧(Frame)<strong>是</strong>数据链路层的协议数据单元</strong>,封装网络层数据报</li></ul></blockquote><h3 id="_3-2-封装成帧和透明传输" tabindex="-1"><a class="header-anchor" href="#_3-2-封装成帧和透明传输"><span>3.2 封装成帧和透明传输</span></a></h3><h4 id="_1-封装成帧" tabindex="-1"><a class="header-anchor" href="#_1-封装成帧"><span>1.封装成帧</span></a></h4><blockquote><ol><li><p><strong>封装成帧</strong>(组帧)就是在一段数据的前后部分<strong>添加首部和尾部</strong>,这样就构成了一个<strong>帧</strong>。</p></li><li><p>首部和尾部包含许多的控制信息,他们的一个重要作用：<strong>帧定界</strong>(确定帧的界限)。</p></li><li><p><strong>帧同步</strong>：接收方应当能从接收到的二进制比特流中<strong>区分出帧的起始和终止</strong></p></li><li><p><strong>组帧</strong>的四种方法：</p><ul><li>字符计数法</li><li><strong>字符(节)填充法</strong></li><li><strong>零比特填充法</strong></li><li><strong>违规编码法</strong></li></ul></li></ol></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/xbX4Jkku.png" alt="封装成帧" tabindex="0" loading="lazy"><figcaption>封装成帧</figcaption></figure><h4 id="_2-透明传输问题" tabindex="-1"><a class="header-anchor" href="#_2-透明传输问题"><span><span style="color:#ff6b6b;">2.透明传输问题</span></span></a></h4><blockquote><p><strong>透明传输</strong>：<span style="color:#ff6b6b;font-weight:bold;">数据链路层对上层交付的PDU的内容没有任何限制,就好像数据链路层不存在一样</span></p><p><strong>透明传输问题</strong>：上层应用交付的数据单元中可能含有<strong>和帧定界符相同的数据</strong>而被接收端<strong>误认为帧定界符</strong>从而导致错误</p></blockquote><img src="https://img2.imgtp.com/2024/04/04/7EkRy4M8.png" alt="透明传输问题"><h4 id="_3-组帧" tabindex="-1"><a class="header-anchor" href="#_3-组帧"><span>3.组帧</span></a></h4><blockquote><p>如果不解决透明传输问题,则数据链路层就会<strong>对上层交付的PDU的内容有所限制</strong>,即<span style="color:#ff6b6b;font-weight:bold;">PDU中不能包含帧定界符</span>。显然,这样的数据链路层没有什么应用价值</p></blockquote><ol><li>字符计数法</li></ol><blockquote><p>原理：在帧的首部用一个<strong>计数字段</strong>来记录<strong>当前帧的所含的字节数</strong>(包含自身的1个字节),接收方读取到帧的首部中的计数字段就能<strong>确定该帧的长度并定界</strong></p><p>问题：如果<span style="color:#ff6b6b;font-weight:bold;">计数字段错误</span>,会导致<span style="color:#ff6b6b;font-weight:bold;">当前帧的定界错误</span>,从而<span style="color:#ff6b6b;font-weight:bold;">导致下一个帧的定界也出错</span>,接受双方将<span style="color:#ff6b6b;font-weight:bold;">失去同步</span>,造成<span style="color:#ff6b6b;font-weight:bold;font-size:20px;">灾难性后果!</span></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/10/T1nEmnkf.png" alt="字符计数法" tabindex="0" loading="lazy"><figcaption>字符计数法</figcaption></figure><ol start="2"><li><strong>字符(节)填充法</strong></li></ol><blockquote><p>原理:发送方在发送数据前,如果待发送数据中<strong>含有和帧定界符相同的数据</strong>,在该数据<strong>前加一个转义字符ESC</strong>,如果数据中出现其他特殊字符(ESC字符)处理方式相同; 接收方在接收数据时如果<strong>读取到了ESC字符</strong>,则认为后面紧跟着的<strong>是数据</strong>而<strong>不是特殊字符</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/1iuGNypX.png" alt="字符填充" tabindex="0" loading="lazy"><figcaption>字符填充</figcaption></figure><p>对于字符填充,举个不恰当的例子,如果我们要输出的字符串中带有<code>“</code>,就必须使用<code>\\</code>进行转义,否则会出现语法错误</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot; \\&quot; &quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li><strong>零比特填充</strong></li></ol><blockquote><p>发送方：扫描要发送的信息,<span style="color:#ff6b6b;font-weight:bold;">如果有连续的5个1,立即插入1个0</span>,接收端逆操作即可(<code>01111110</code>为帧定界符)</p><p>接收方：在接收端收到一个帧时,先找到标志字段确定边界,再用硬件对比特流进行扫描,<strong>发现连续5个1时,就把后面的0删除</strong></p><p>总结：<strong>保证了透明传输,在传送的比特流中可以传送任意比特组合,而不会引起对帧边界的判断错误</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/Wc2JZvjx.png" alt="零比特填充" tabindex="0" loading="lazy"><figcaption>零比特填充</figcaption></figure><ol start="4"><li><strong>违规编码法</strong></li></ol><blockquote><p>以曼彻斯特编码为例,曼彻斯特编码<strong>中间时刻必定跳变</strong>(电平对为[高-低]或[低-高]),所以可以<strong>使用不跳变表示帧的界,使用[高-高]表示帧的开始,使用[低-低]表示帧的结束</strong></p><p>违规编码法<strong>不采用任何填充技术</strong>便能实现数据的透明传输,但只适用于采用<strong>冗余编码</strong>的特殊编码环境</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/09/H8LbiLki.png" alt="image-20240409222701713" tabindex="0" loading="lazy"><figcaption>image-20240409222701713</figcaption></figure><blockquote><p><span style="color:#ff6b6b;font-weight:bold;font-size:18px;">总结</span>:由于字节计数法中count字段的<strong>脆弱性</strong>(其值若有差错将导致灾难性后果)及字符填充实现上的复杂性和不兼容性(非<code>ASCII</code>字符不太适用),<strong>目前较普遍使用的帧同步法是比特填充法和违规编码法</strong></p></blockquote><h3 id="_3-3-差错控制" tabindex="-1"><a class="header-anchor" href="#_3-3-差错控制"><span>3.3 差错控制</span></a></h3><blockquote><p><strong>全局性</strong>：由于线路本身电气特性所产生的<strong>随机噪声</strong>(热噪声),是信道固有的,随机存在的。解决办法：提高信噪比来减少或避免干扰。(对传感器下手)</p><p><strong>局部性</strong>：外界特定的短暂原因所造成的<strong>冲击噪声</strong>,是产生差错的主要原因。解决办法：通常利用编码技术来解决。</p><p>差错：</p><ol><li><strong>位错</strong>：比特位出错,1变成0,0变成1</li><li><strong>帧错</strong>：丢失、重复、失序</li></ol></blockquote><h4 id="检错编码" tabindex="-1"><a class="header-anchor" href="#检错编码"><span>检错编码</span></a></h4><h5 id="奇偶校验码" tabindex="-1"><a class="header-anchor" href="#奇偶校验码"><span>奇偶校验码</span></a></h5><blockquote><p>奇偶校验码：是奇校验和偶校验的统称,在待发送<strong>数据后加一位校验码(0/1)</strong>,使整个数据中<code>1</code>的个数为奇数个(奇校验)或者偶数个(偶校验)</p><p>特点：<strong>只能检查出奇数个比特错误</strong>,但不知道哪些位错了,检错能力为50%</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/10/K7xxxKVB.png" alt="image-20240410090104759" tabindex="0" loading="lazy"><figcaption>image-20240410090104759</figcaption></figure><h5 id="循环冗余码" tabindex="-1"><a class="header-anchor" href="#循环冗余码"><span><strong>循环冗余码</strong></span></a></h5><blockquote><p>CRC检验广泛使用于数据链路层,<strong>CRC是具有纠错功能的</strong>,只是数据链路层仅仅使用了它的检错功能</p><p>收发双方需要约定一个<strong>生成多项式</strong>(最高位和最低位必须为1)</p><p>计算出的冗余码(<strong>帧检验序列FCS</strong>)加到数据最后一起传输</p><p>FCS生成和CRC检验都是<strong>由硬件完成</strong>,处理非常迅速</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/LqnKVXNU.png" alt="CRC" tabindex="0" loading="lazy"><figcaption>CRC</figcaption></figure><p><strong>发送方</strong></p><blockquote><p>下图生成多项式$x<sup>3+x</sup>2+1$ =&gt; <span style="color:#ff6b6b;font-weight:bold;">1</span>$ \\cdot x^3+$<span style="color:#ff6b6b;font-weight:bold;">1</span>$ \\cdot x^2+$<span style="color:#ff6b6b;font-weight:bold;">0</span>$ \\cdot x+$<span style="color:#ff6b6b;font-weight:bold;">1</span>$ \\cdot x^0$​ =&gt; 除数为<code>1101</code></p><p><strong>除法</strong>：此处指<strong>异或</strong>运算</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/yzlERye7.png" alt="CRC" tabindex="0" loading="lazy"><figcaption>CRC</figcaption></figure><p><strong>接收方</strong></p><figure><img src="https://img2.imgtp.com/2024/04/04/iEc5Y2da.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><span style="color:#ff6b6b;font-weight:bold;font-size:20px;">检错码总结</span></p><figure><img src="https://img2.imgtp.com/2024/04/04/kspkPie2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="纠错编码" tabindex="-1"><a class="header-anchor" href="#纠错编码"><span>纠错编码</span></a></h4><h5 id="汉明码" tabindex="-1"><a class="header-anchor" href="#汉明码"><span>汉明码</span></a></h5><blockquote><p><strong>汉明码</strong>(<code>Hamming Code</code>):又称为海明码,最常见的纠错编码</p></blockquote><ol><li><strong>确定校验位数</strong></li></ol><blockquote><p>n为信息位数,r为校验位数,取使得等式成立的最小的r,<strong>海明不等式</strong>: $$ 2^r \\geq n+r+1 $$ $\\text{海明码的位数} = \\text{信息位数} + \\text{校验位数}$</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/12/au4gBf7Q.png" alt="image-20240412151532196" tabindex="0" loading="lazy"><figcaption>image-20240412151532196</figcaption></figure><ol start="2"><li><strong>确定校验码和数据的位置</strong></li></ol><blockquote><p>校验码放在 $2^n$ 的位置上(第1、2、4、8……个)</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/12/vlACsIY3.png" alt="image-20240412151644361" tabindex="0" loading="lazy"><figcaption>image-20240412151644361</figcaption></figure><ol start="3"><li><strong>求出校验码的值</strong></li></ol><blockquote><p><strong>分组</strong>:第1个校验码中包括<strong>序号二进制末尾为1</strong>的数,第二个检验码中包括序号二进制为1的数,以此类推,同一个数可以分到多个组中,几个校验码就分几组</p><p><strong>求值</strong>:默认采用<strong>偶校验</strong>,保证每个组中1的个数为偶数个(如果1为奇数个,那么校验码为1,否则为0),也可以使用<strong>异或运算</strong>解决,校验码的值就是对应校验组所有数据异或运算的结果</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/12/aYNBsfJM.png" alt="image-20240412180239878" tabindex="0" loading="lazy"><figcaption>image-20240412180239878</figcaption></figure><ol start="4"><li><strong>检错并纠正</strong></li></ol><blockquote><p>检错：接收方接收到数据后将对应校验码和校验组所有数据进行异或运算,结果<strong>应全部为0(偶校验)</strong>,出现1说明出现了错误</p><p>纠错：各个组的异或结果应为000……,如果不全是0,<strong>假设是101,那么出错的为就是异或结果的二进制位,即5</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/27/QmxDzrEi.png" alt="image-20240412181429972" tabindex="0" loading="lazy"><figcaption>image-20240412181429972</figcaption></figure><hr><h3 id="_3-4-流量控制" tabindex="-1"><a class="header-anchor" href="#_3-4-流量控制"><span>3.4 流量控制</span></a></h3><h4 id="可靠传输" tabindex="-1"><a class="header-anchor" href="#可靠传输"><span>可靠传输</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/bl3iFcsr.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/9kptbtUg.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="停止-等待协议-sw" tabindex="-1"><a class="header-anchor" href="#停止-等待协议-sw"><span>停止-等待协议(SW)</span></a></h4><ol><li>基本原理</li></ol><blockquote><p>停止-等待协议(<code>S</code>top-and-<code>W</code>ait)</p><ul><li><p>发送一个数据分组<code>DATA0</code>然后<strong>等待</strong>接收方发来确认信息<code>ACK0</code>后再传输下一个数据分组<code>DATA1</code> (发送、接收窗口大小都为1)</p></li><li><p>如果<strong>超时</strong>未接收到接收方发送的确认信息<code>ACK0</code>或者<strong>接收到否认</strong>信息<code>NAK</code>就重传上一个分组数据分组(发送方发送一个分组后不会立即删除该分组,因为可能需要重传,接收到[^ACK]后才将分组从缓存删除)</p></li><li><p>数据分组和确认信息的<strong>编号</strong>都是用来<strong>区分</strong>和上一个分组或信息是否相同(SW协议编号只需要1个比特)</p></li></ul></blockquote><p><a href="https://www.bilibili.com/video/BV1c4411d7jb?t=48.2&amp;p=25"><img alt="bili" src="https://img.shields.io/badge/SW-white?logo=bilibili&amp;labelColor=white&amp;color=%23fb7299"></a></p><figure><img src="https://img2.imgtp.com/2024/04/04/kDCsZAbL.png" alt="SW" tabindex="0" loading="lazy"><figcaption>SW</figcaption></figure><ol start="2"><li><strong>停止等待协议的信道利用率</strong></li></ol><blockquote><p>$$ \\text{信道利用率}= \\frac{\\text{数据发送时延}}{\\text{数据发送时延}+\\text{2个传播时延}+\\text{确认信息发送时延}} $$</p><p><strong>确认信息的发送时延一般忽略不计</strong></p><p><strong>总结：当往返时间远大于数据帧的发送时延时,<span style="color:#ff6b6b;font-weight:bold;">信道利用率很低</span>,如果出现超时重传,信道利用率更低</strong>(卫星链路)</p></blockquote><h4 id="回退n帧协议-gbn" tabindex="-1"><a class="header-anchor" href="#回退n帧协议-gbn"><span>回退N帧协议(GBN)</span></a></h4><blockquote><p>回退N帧协议(<code>G</code>o-<code>B</code>ack-<code>N</code>)</p><p>发送方可以在<strong>未收到确认帧</strong>的情况下将<strong>发送窗口内的多个数据帧</strong>全部发送出去</p><p>回退N帧的含义：发送方发送了N个帧,如果这<strong>N个帧的前一个帧</strong>在超时的时候仍未接收到确认分组,则认为该帧<strong>出错或丢失</strong>,此时,发送方需要<strong>重传该出错帧及随后的N个帧</strong>,因为该协议中<span style="color:#ff6b6b;font-weight:bold;">接收方只能顺序接受帧</span></p><p>GBN采用<strong>累计确认</strong>,假设发送方发送了10个数据(0-9),随后收到接收方发来的确认分组编号为6,这表示0-6号数据全部接收了,而不是仅仅对6号数据的确认</p></blockquote><p><a href="https://www.bilibili.com/video/BV1c4411d7jb?t=81.1&amp;p=26"><img alt="bili" src="https://img.shields.io/badge/GBN-white?logo=bilibili&amp;labelColor=white&amp;color=%23fb7299"></a></p><figure><img src="https://img2.imgtp.com/2024/04/04/hB250oge.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/Ub9UUjBl.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><span style="color:#ff6b6b;font-weight:bold;">GBN重点</span>：</p><ul><li><p><strong>发送窗口</strong>：如果采用了n个比特进行编号,那么发送窗口$W_T$满足$1&lt;W_T&lt;2^n-1$​,太大会造成接收方无法分辨新旧数据帧</p></li><li><p><strong>接收窗口</strong>：$W_R = 1$​,可保证按序接收数据帧(<strong>只能按序接收</strong>)</p></li><li><p>接收方<strong>只按顺序接收帧</strong>,不按序无情丢弃</p></li><li><p><strong>累积确认</strong>(偶尔梢带确认),确认序列号最大的、按序到达的帧</p></li></ul></blockquote><h4 id="选择重传协议-sr" tabindex="-1"><a class="header-anchor" href="#选择重传协议-sr"><span>选择重传协议(SR)</span></a></h4><blockquote><p>选择重传协议(<code>S</code>elective <code>R</code>epeat):在GBN协议中,只要一个帧出错,该帧及其随后的所有帧都需要重传,这是对通信资源的极大浪费,为进一步提高信道利用率,可以<strong>只重传出错或计时器超时的帧</strong>,此时必须<strong>加大接收窗口以便收下失序但正确到达的帧</strong></p><p><span style="color:#ff6b6b;font-weight:bold;">重点</span>：</p><ul><li>SR接收方将确认一个正确接收的帧而不管其是否按序到达(失序的帧将被缓存)</li><li><strong>不能使用累计确认,对每个帧都进行确认</strong></li><li>接收方有缓存</li><li><strong>发送窗口$1&lt;W_T&lt;2^{n-1}$,接收窗口$1&lt;W_R&lt;W_T$</strong></li></ul></blockquote><p><a href="https://www.bilibili.com/video/BV1c4411d7jb?t=9.1&amp;p=27"><img alt="bili" src="https://img.shields.io/badge/SR-white?logo=bilibili&amp;labelColor=white&amp;color=%23fb7299"></a></p><figure><img src="https://img2.imgtp.com/2024/04/04/lTKxaOpK.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><blockquote><p>总结：ARQ(自动重传请求)协议包括三种：停止-等待(SW)协议、后退N帧(GBN)协议、选择重传(SR)协议。<strong>GBN、SR为连续ARQ协议</strong>,可以连续发送多个帧。</p><p><strong>连续ARQ的信道利用率</strong>,假设发送窗口为<code>n</code>,即发送方可以连续发送的帧的数量</p><p>信道利用率U为 $$ U = \\frac{nT_D}{T_D+RTT+T_A} $$ 信道实际数据传输速率 = 信道利用率 × 信道带宽</p></blockquote><hr><h3 id="_3-5-介质访问控制" tabindex="-1"><a class="header-anchor" href="#_3-5-介质访问控制"><span>3.5 介质访问控制</span></a></h3><h4 id="_1-通信方式" tabindex="-1"><a class="header-anchor" href="#_1-通信方式"><span>1.通信方式</span></a></h4><p>数据链路层的通信方式</p><figure><img src="https://img2.imgtp.com/2024/04/13/qREqa6zW.png" alt="image-20240413114302558" tabindex="0" loading="lazy"><figcaption>image-20240413114302558</figcaption></figure><h4 id="_2-介质访问控制" tabindex="-1"><a class="header-anchor" href="#_2-介质访问控制"><span>2.介质访问控制</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/20/YJFtawLv.png" alt="image-20240420110848013" tabindex="0" loading="lazy"><figcaption>image-20240420110848013</figcaption></figure><h4 id="_3-信道划分" tabindex="-1"><a class="header-anchor" href="#_3-信道划分"><span>3.信道划分</span></a></h4><blockquote><p>复用：当网络中传输媒体的传输容量大于多条单一信道传输的总通信量时,可利用复用技术<strong>在一条物理线路上建立多条通信信道来共享传输媒体的带宽</strong></p></blockquote><img src="https://img2.imgtp.com/2024/04/04/ClYKHJq5.png" alt="信道复用" style="zoom:80%;"><h5 id="_1-频分复用" tabindex="-1"><a class="header-anchor" href="#_1-频分复用"><span>1. 频分复用</span></a></h5><blockquote><p><strong>频分复用</strong>(Frequency-division multiplexing,<code>FDM</code>):将多路基带信号调制到不同频率载波上,再进行叠加形成一个复合信号,接收端的分用器通过滤波将各路信号滤出,将合成的复合信号恢复成原始的多路信号,<strong>信道利用率高</strong></p><p>实际应用中,为了防止信道之间相互干扰,相邻信道间还要加入“隔离频带”</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/13/9tcFG4HL.png" alt="image-20240413115640153" tabindex="0" loading="lazy"><figcaption>image-20240413115640153</figcaption></figure><h5 id="_2-时分复用" tabindex="-1"><a class="header-anchor" href="#_2-时分复用"><span>2. 时分复用</span></a></h5><blockquote><p>时分复用(Time Division Multiplexing,<code>TDM</code>)：将传输线路的带宽资源<strong>按时间轮流分配给不同的用户</strong>,用户只能在分配的时间里使用线路传输数据(类似于时间片轮转),<strong>同一时刻只有一个用户在使用</strong>,相当于多个用户并发使用</p><p>存在的<strong>不足</strong>：使用时分复用系统传送计算机数据时,由于计算机数据的突发性质,用户对分配到的<strong>子信道的利用率一般不高</strong>(如果B暂时不使用信道,其他用户正常使用,时分复用还是会给B分配时间,而且这段时间内其他用户也不能使用)</p><p><strong>图中第2个周期第2段时间中<span style="color:#e6e600;font-weight:bold;">黄色线</span>并没有使用信道,但还是会分配信道给他,而且该时间段内其他用户不能使用</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/13/GqvfdyNg.png" alt="image-20240413124732334" tabindex="0" loading="lazy"><figcaption>image-20240413124732334</figcaption></figure><blockquote><p><strong>统计时分复用</strong>(statistical time division multiplexing,<code>STDM</code>):动态地按需分配共用信道的时隙,<strong>只将需要传送数据的终端接入共用信道</strong>,可以提高信道的利用率</p><p>帧与帧之间留有<strong>空隙</strong>用来存储用户的地址信息,因为<strong>不是固定的分配给某个用户</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/13/3tBMGXBQ.png" alt="image-20240413131118032" tabindex="0" loading="lazy"><figcaption>image-20240413131118032</figcaption></figure><h5 id="_3-波分复用" tabindex="-1"><a class="header-anchor" href="#_3-波分复用"><span>3. 波分复用</span></a></h5><blockquote><p>波分复用(Wavelength Division Multiplexing,<code>WDM</code>)就是<strong>光的频分复用</strong>(专指<strong>光纤</strong>),使用一根光纤来同时传输多个光载波信号,现在已能做到在一根光纤上复用几十路或更多路数的光载波信号</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/wmz4xQ8u.png" alt="波分复用" tabindex="0" loading="lazy"><figcaption>波分复用</figcaption></figure><h5 id="_4-码分复用" tabindex="-1"><a class="header-anchor" href="#_4-码分复用"><span>4. 码分复用</span></a></h5><blockquote><ul><li><strong>码分多路复用</strong>(Code Division Multiplexing,<code>CDM</code>)：又叫<strong>码分多址</strong><code>CDMA</code>(Code Division Multiple Access),采用不同的编码(地址码)来区分各路原始信号的一种复用方式</li><li>它<strong>既共享信道的频率,又共享时间</strong>,是真正意义的动态复用技术</li><li>最初用于军事,因为这种系统发送的信号<strong>有很强的抗干扰能力</strong>,其频谱类似于白噪声,不易被敌人发现</li></ul></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/jr9xumaq.png" alt="码分复用" tabindex="0" loading="lazy"><figcaption>码分复用</figcaption></figure><blockquote><ol><li><p><strong>码片序列转为码片向量</strong>(0-&gt;-1,1-&gt;+1),例：码片序列为(1101) -&gt; 码片向量为(+1,+1,-1,+1)</p></li><li><p><strong>如果有多个站同时发送信号,将它们的码片向量线性相加</strong></p></li><li><p>接收方收到总信号,如果想知道A站发送的信息就可以<strong>用A站的码片向量与总信号规格化内积</strong> $\\text{规格化内积} = \\frac{\\text{向量相乘}}{\\text{向量个数}}$</p><ul><li><p><strong>内积为1 -&gt; A站发送信号1</strong> 发送的是自己的<strong>码片序列</strong></p></li><li><p><strong>内积为0 -&gt; A站未发送信号</strong> 未发送数据</p></li><li><p><strong>内积为-1 -&gt; A站发送信号0</strong> 发送的是自己的<strong>码片序列的二进制反码</strong></p></li></ul></li></ol></blockquote><hr><h4 id="_4-随机访问" tabindex="-1"><a class="header-anchor" href="#_4-随机访问"><span>4.随机访问</span></a></h4><h5 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h5><blockquote><p>在随机访问协议中,所有用户可以根据自己意愿发送信息,那么在总线型网络中,当有多个用户同时发送数据时,就会产生<strong>帧冲突</strong>(碰撞),导致所有冲突的用户的发送都以失败告终,<strong>随机访问介质访问控制协议</strong>(争用性协议)的核心思想是：<strong>胜利者通过争用获得信道</strong>,进而获得发送权</p></blockquote><h5 id="_1-aloha-协议" tabindex="-1"><a class="header-anchor" href="#_1-aloha-协议"><span>1. ALOHA 协议</span></a></h5><blockquote><p><strong>纯 [^ALOHA] 协议</strong>：<span style="color:#ff6b6b;font-weight:bold;">想发就发</span>,发生冲突等待<strong>随机时间</strong>后重传,容易出现冲突,<strong>效率较低</strong></p><p><strong>时隙 ALOHA 协议</strong>：将时间分成相同大小的<strong>时间片</strong>,只有在<span style="color:#ff6b6b;font-weight:bold;">时间片开始的时候</span>才能发送,<strong>发送一帧的时间不能超过一个时隙</strong>,一定程度上限制了发送方发送数据的随意性,降低了冲突的概率(依然很大),产生冲突后等待<strong>随机个时隙</strong>时间后重传</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/17/RtFprUL8.png" alt="image-20240417220719723" tabindex="0" loading="lazy"><figcaption>image-20240417220719723</figcaption></figure><h5 id="_2-csma-协议" tabindex="-1"><a class="header-anchor" href="#_2-csma-协议"><span>2. CSMA 协议</span></a></h5><blockquote><p><strong>CSMA(Carrier Sense Multiple Access)载波监听 多路访问</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/20/gCZW2TEK.png" alt="image-20240420091922904" tabindex="0" loading="lazy"><figcaption>image-20240420091922904</figcaption></figure><p><span style="color:#ff6b6b;font-weight:bold;">总结</span></p><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">1-坚持CSMA</th><th style="text-align:center;">非坚持CSMA</th><th style="text-align:center;">P-坚持CSMA</th></tr></thead><tbody><tr><td style="text-align:center;">空闲</td><td style="text-align:center;">立即发送</td><td style="text-align:center;">立即发送</td><td style="text-align:center;"><strong>p概率发送,1-p概率推迟到下一个时隙</strong></td></tr><tr><td style="text-align:center;">忙</td><td style="text-align:center;">持续监听</td><td style="text-align:center;"><span style="color:#ff6b6b;font-weight:bold;">放弃监听</span>,等待随机时间继续监听</td><td style="text-align:center;"><strong>持续监听(等到下一个时隙再监听)</strong></td></tr></tbody></table><blockquote><p>p-坚持CSMA只适用于<strong>时分信道</strong>,检测到<strong>信道空闲时以概率p发送数据</strong>,以概率1-p<strong>推迟到下一个时隙继续监听</strong></p><p>1-坚持CSMA监听到信道忙时会<strong>持续监听信道,出现冲突时才会等待随机时间后再监听</strong></p></blockquote><h5 id="_3-csma-cd-协议" tabindex="-1"><a class="header-anchor" href="#_3-csma-cd-协议"><span>3. <strong>CSMA/CD 协议</strong></span></a></h5><blockquote><p><strong>CSMA/CD(Carrier Sense Multiple Access/collision detection)载波监听 多路访问/碰撞检测</strong></p><p>在CSMA中<span style="color:#ff6b6b;font-weight:bold;">尽管发生冲突,数据还是会继续传输完毕</span>,这是不必要的(发生冲突后传输的数据已经无效)</p><p>CSMA/CD 的工作流程可以概括为“先听后发,<strong>边听边发,冲突停发</strong>,随机重发”,<strong>在发送数据时一边监听信道,如果发生冲突立即停止发送</strong>(主要区别)</p></blockquote><h6 id="工作流程" tabindex="-1"><a class="header-anchor" href="#工作流程"><span>工作流程</span></a></h6><figure><img src="https://img2.imgtp.com/2024/04/04/ED5B2K8l.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h6 id="争用期" tabindex="-1"><a class="header-anchor" href="#争用期"><span><strong>争用期</strong></span></a></h6><blockquote><p><strong>2τ</strong> ,即<strong>端到端传播时延的2倍</strong>,10BaseT以太网中规定争用期为51.2μs</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/pcp1O29f.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h6 id="最小帧长" tabindex="-1"><a class="header-anchor" href="#最小帧长"><span><strong>最小帧长</strong></span></a></h6><blockquote><p><strong>最小帧长 = 争用期 x 数据传输速率</strong> $$ l = 2τ * \\text{数据传输速率} = 2*\\frac{\\text{距离}}{\\text{传播速率}}*\\text{数据传输速率} $$</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/TctW8FkX.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h6 id="二进制指数退避算法" tabindex="-1"><a class="header-anchor" href="#二进制指数退避算法"><span><strong>二进制指数退避算法</strong></span></a></h6><blockquote><p>发生碰撞后进行重传,随着重传次数增加,退避时间也会逐渐增加,减小了碰撞的概率</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/vzrGh2uB.png" alt="image-20231103163318636" tabindex="0" loading="lazy"><figcaption>image-20231103163318636</figcaption></figure><h5 id="_4-csma-ca" tabindex="-1"><a class="header-anchor" href="#_4-csma-ca"><span>4. <strong>CSMA/CA</strong></span></a></h5><blockquote><p><strong>CSMA/CA(Carrier Sense Multiple Access with Collision Avoid)载波监听、多路访问/碰撞避免</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/CT1N67Ir.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>碰撞避免实现中涉及的的三种机制：</p><p>1.预约信道：通知其它站点，自己需要的时间长度</p><p>2.ACK帧：接收站点发回确认；发送端超时未接收ACK则重发</p><p>3.<code>RTS</code>(Request To Send) 帧与<code>CTS</code>(Clear To Send)帧(可选)：发送端发RTS，接收端响应CTS，发送端收到CTS则认为可以发送数据，<strong>CTS帧的目的：1.给源站明确的发送许可 2.指示其他站在预约期间不要发送</strong></p><p><strong>帧间间隔</strong>(InterFrame Space IFS):所有站发送一帧后必须等待一段很短的时间(帧间间隔)才能继续监听并发送数据，IFS的类型：</p><ul><li><code>SIFS</code>(短) 最短的IFS，用于分隔一次对话的各帧(ACK、CTS等)</li><li><code>PIFS</code>(点协调) 中等长度的IFS，在PCF操作中使用</li><li><code>DIFS</code>(分布式协调) 最长的IFS，用于异步帧竞争访问的时延</li></ul></blockquote><h4 id="_5-轮询访问" tabindex="-1"><a class="header-anchor" href="#_5-轮询访问"><span>5.轮询访问</span></a></h4><blockquote><p>用户不能随机发送数据，而是通过一个集中控制的监控站，以循环方式轮询访问每个结点，再决定信道的分配，典型的轮询访问控制协议是令牌传递协议</p></blockquote><h5 id="令牌传递协议" tabindex="-1"><a class="header-anchor" href="#令牌传递协议"><span>令牌传递协议</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/20/meVU77Xe.png" alt="image-20240420110009790" tabindex="0" loading="lazy"><figcaption>image-20240420110009790</figcaption></figure><blockquote><p>注意点：</p><ul><li>网络空闲时，只有<strong>令牌帧在循环传递</strong>(游荡)</li><li>源站点传输完数据后，<strong>重新生成一个令牌</strong>并传递给下一个站点</li><li>令牌传递协议适合<strong>负载较重、通信量较大</strong>的广播信道</li><li><span style="color:#ff6b6b;font-weight:bold;">单点故障会导致整个网络无法工作</span>(逻辑上环形)</li></ul></blockquote><h3 id="_3-6-局域网" tabindex="-1"><a class="header-anchor" href="#_3-6-局域网"><span>3.6 局域网</span></a></h3><h4 id="概述-1" tabindex="-1"><a class="header-anchor" href="#概述-1"><span>概述</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/20/ZLZC4JJA.png" alt="image-20240420113134042" tabindex="0" loading="lazy"><figcaption>image-20240420113134042</figcaption></figure><h4 id="拓扑结构" tabindex="-1"><a class="header-anchor" href="#拓扑结构"><span>拓扑结构</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/20/reb0noqv.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="分类-1" tabindex="-1"><a class="header-anchor" href="#分类-1"><span>分类</span></a></h4><blockquote><ol><li><p>以太网以太网是应用最为广泛的局域网，包括标准以太网（10Mbps）、快速以太网（100Mbps）千兆以太网（1000Mbps）和10G以太网，它们都符合IEEE802.3系列标准规范。<strong>逻辑拓扑总线型，物理拓扑是星型</strong>或拓展星型,使用CSMA/CD</p></li><li><p>令牌环网<strong>物理上采用了星形拓扑结构，逻辑上是环形拓扑结构</strong>。已是“明日黄花”</p></li><li><p>FDDl网 （Fiber Distriouted Data Interiace)<strong>物理上采用了双环拓扑结构，逻辑上是环形拓扑结构</strong></p></li><li><p>ATM网 (Asynchronous Transier Mode)较新型的单元交换技术，使用53字节固定长度的单元进行交换</p></li><li><p>无线局城网（WIrelessLocalAreaNetworkWLAN）采用IEEE802.11标准</p></li></ol></blockquote><figure><img src="https://img2.imgtp.com/2024/04/27/KUOQpahI.png" alt="局域网的分类" tabindex="0" loading="lazy"><figcaption>局域网的分类</figcaption></figure><blockquote><p>以太网支持全双工和半双工通信，<strong>全双工不使用CSMA/CD协议(无冲突)</strong>，半双工通信方式可能发生冲突，使用CSMA/CD协议 [<strong>10吉比特以太网只能全双工</strong>]</p></blockquote><p>100BaseT以太网</p><figure><img src="https://img2.imgtp.com/2024/04/20/51qnZW5A.png" alt="image-20240420125317777" tabindex="0" loading="lazy"><figcaption>image-20240420125317777</figcaption></figure><p>MAC子层</p><figure><img src="https://img2.imgtp.com/2024/04/20/gJBMwlkd.png" alt="image-20240420141212069" tabindex="0" loading="lazy"><figcaption>image-20240420141212069</figcaption></figure><h4 id="mac地址" tabindex="-1"><a class="header-anchor" href="#mac地址"><span>MAC地址</span></a></h4><ol><li><strong>MAC地址</strong>是对网络上<strong>各接口的唯一标识</strong>,而不是对网络上各设备的唯一标识(<strong>路由器有多个接口,所以有多个MAC地址</strong>)</li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/68avB7T3.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>MAC地址格式</li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/BNjnFpPt.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>MAC帧有三种：单播、广播、多播</li></ol><blockquote><p>单播帧：一对一</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/D6d0SVGo.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>广播帧：一对全体</p><p>广播地址：<strong>FF-FF-FF-FF-FF-FF</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/TfVVC54V.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>多播帧：一对多</p><p>多播地址：<strong>第二个数是奇数</strong>代表是多播地址</p></blockquote><h4 id="vlan" tabindex="-1"><a class="header-anchor" href="#vlan"><span>VLAN</span></a></h4><blockquote><p>虚拟局域网(<code>Virtual Local Area Network</code>,VLAN)是一种将局域网内的站点划分成与物理位置无关的逻辑组的技术,一个逻辑组就是一个VLAN,VLAN中的各站点具有某些共同的应用需求</p><p><strong>广播风暴</strong>：<span style="color:#ff6b6b;font-weight:bold;">广播风暴会浪费网络资源和各主机的CPU资源</span></p><ul><li>可以<strong>使用路由器切割广播域</strong>,防止广播风暴,但是成本较高</li><li>使用<strong>vlan技术划分广播域</strong></li></ul><p>注意点：</p><ul><li><p><code>A</code>发送广播帧,<code>Access</code>接口接收并<strong>打标签</strong>,<code>PVID</code>和<code>VID</code>相同的Access端口可以接收该帧,进行去标签转发</p></li><li><p><code>Trunk</code>端口的<code>PVID</code>如果等于该帧的<code>VID</code>,也会先去标签转发,然后再打标签,否则直接转发</p></li><li><p><strong>Trunk端口是连接两个交换机的</strong></p></li><li><p>插入VLAN标签的帧称为802.1Q帧，首部添加4字节，最大帧长增加为1522字节</p></li></ul></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/XkiEONEm.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h3 id="_3-7-广域网" tabindex="-1"><a class="header-anchor" href="#_3-7-广域网"><span>3.7 广域网</span></a></h3><h4 id="概述-2" tabindex="-1"><a class="header-anchor" href="#概述-2"><span>概述</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/20/V6rN5owV.png" alt="image-20240420131312782" tabindex="0" loading="lazy"><figcaption>image-20240420131312782</figcaption></figure><h4 id="ppp-协议" tabindex="-1"><a class="header-anchor" href="#ppp-协议"><span><strong>PPP 协议</strong></span></a></h4><ol><li>概述</li></ol><blockquote><p>点对点协议(<code>Point-to-Point Protocol</code>,PPP)是目前使用最广泛的<strong>点对点数据链路层协议</strong>,</p><p>PPP协议的3个组成部分：</p><ol><li>一个将IP数据报封装到串行链路的方法</li><li>网络控制协议NCP:PPP可支持多种网络层协议，每个不同的网络层协议都要一个相应的NCP来配置，为网络层协议建立和配置逻辑连接</li><li>链路控制协议LCP：建立并维护数据链路连接(身份验证)</li></ol></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/oEvbpogl.png" alt="PPP" tabindex="0" loading="lazy"><figcaption>PPP</figcaption></figure><ol start="2"><li>PPP的帧格式</li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/rpgHWbjQ.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>PPP的透明传输</li></ol><blockquote><p>异步传输：字符填充</p><p>同步传输：0比特填充</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/1bplHCdz.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>PPP的状态图</li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/gvFkscEH.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>PPP协议特点：</p><ol><li>不使用序号和确认机制，只保证无差错接收，因此是<span style="color:#ff6b6b;font-weight:bold;">不可靠服务</span></li><li>PPP<span style="color:#ff6b6b;font-weight:bold;">只支持全双工点对点链路，不支持多点线路</span></li><li>PPP的<strong>两端可以运行不同的网络层协议</strong>，但仍可使用同一个PPP进行通信</li><li>PPP是<strong>面向字节</strong>的，所有PPP帧的长度都是整数个字节</li></ol></blockquote><h3 id="_3-8-链路层设备" tabindex="-1"><a class="header-anchor" href="#_3-8-链路层设备"><span>3.8 链路层设备</span></a></h3><h4 id="网桥" tabindex="-1"><a class="header-anchor" href="#网桥"><span>网桥</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/20/55lQDblM.png" alt="image-20240420155806561" tabindex="0" loading="lazy"><figcaption>image-20240420155806561</figcaption></figure><blockquote><p>网桥可以<strong>连接两个不同的网络而不增大碰撞域</strong></p></blockquote><h4 id="交换机" tabindex="-1"><a class="header-anchor" href="#交换机"><span>交换机</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/20/IHx13ZvA.png" alt="image-20240420160645782" tabindex="0" loading="lazy"><figcaption>image-20240420160645782</figcaption></figure><h4 id="集线器vs交换机" tabindex="-1"><a class="header-anchor" href="#集线器vs交换机"><span>集线器vs交换机</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/SAdkZQI5.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/cH6i5koT.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><span style="color:#ff6b6b;font-weight:bold;">总结</span></p><blockquote><p>使用集线器的共享式以太网(10Mb/s)，如果有N个用户，每个用户的平均带宽为$\\frac{10}{N}Mb/s$,如果使用以太网交换机（全双工）连接，每个用户平均带宽为10Mb/s，所以有N个接口的交换机总容量为10N Mb/s(半双工则减小一半),这是交换机的最大优点</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/20/2SaXyedY.png" alt="image-20240420160932053" tabindex="0" loading="lazy"><figcaption>image-20240420160932053</figcaption></figure><h3 id="_3-9-stp" tabindex="-1"><a class="header-anchor" href="#_3-9-stp"><span>3.9 STP</span></a></h3><blockquote><p>透明网桥的生成树协议：</p><p>为了提高以太网的可靠性,有时需要在两个以太网之间使用多个透明网桥来提供冗余链路，为了避免广播帧在环路中永久兜圈,透明网桥使用生成树协议<code>Spanning Tree Protocol</code>,可以在增加冗余链路提高网络可靠性的同时,又避免环路带来的问题</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/F5cxDeoo.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-思维导图和习题" tabindex="-1"><a class="header-anchor" href="#_4-思维导图和习题"><span>4. 思维导图和习题</span></a></h3><p><a href="https://www.kdocs.cn/view/l/cgV0rfS0qZEA" target="_blank" rel="noopener noreferrer">第3章 数据链路层(思维导图)-1 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/ciOEeLV6ffuJ" target="_blank" rel="noopener noreferrer">第3章 数据链路层(思维导图)-2 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cnRBS8NFgTll" target="_blank" rel="noopener noreferrer">第3章 数据链路层(思维导图)-3 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cl60fYfO1qZe" target="_blank" rel="noopener noreferrer">第3章 数据链路层 习题(第1部分)</a></p><p><a href="https://www.kdocs.cn/view/l/cenjHDfYLe95" target="_blank" rel="noopener noreferrer">第3章 数据链路层 习题(第2部分)</a></p><hr><h2 id="_4-网络层" tabindex="-1"><a class="header-anchor" href="#_4-网络层"><span>4. 网络层</span></a></h2><h3 id="_4-1-概述" tabindex="-1"><a class="header-anchor" href="#_4-1-概述"><span>4.1 概述</span></a></h3><blockquote><p>网络层的主要任务：将分组从源主机经过多个网络和多段链路传输到目的主机,可以将该任务划分为分组转发和路由选择两种重要的功能</p></blockquote><h3 id="_4-2-网络层提供的两种服务" tabindex="-1"><a class="header-anchor" href="#_4-2-网络层提供的两种服务"><span>4.2 网络层提供的两种服务</span></a></h3><h4 id="_1-虚电路服务" tabindex="-1"><a class="header-anchor" href="#_1-虚电路服务"><span>1.虚电路服务</span></a></h4><blockquote><p>虚电路服务特点：</p><ol><li><p>虚电路提供的是<span style="color:#ff6b6b;font-weight:bold;">面向连接</span>的，<span style="color:#ff6b6b;font-weight:bold;">可靠的</span>服务</p></li><li><p><strong>虚</strong>表示这是一条<strong>逻辑上的连接，不是专用的</strong>,分组沿着这条逻辑连接按照<strong>存储转发方式传送</strong>,而不是真正建立了一条物理连接</p></li><li><p>建立连接和拆除都需要时间开销，<strong>不适用于突发式通信，但对长时间、频繁的数据交换效率较高</strong></p></li><li><p><span style="color:#ff6b6b;font-weight:bold;">致命弱点：虚电路上如果某个结点或链路出现故障(相当于电线被剪断了)，所有经过这个结点或链路的虚电路都会遭到破坏(需要重新建立连接)</span></p></li><li><p>分组的首部仅在连接建立阶段使用完整的目的主机地址,之后每个分组的首部只需要携带一条虚电路编号即可</p></li></ol></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/yW2dRsAm.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-数据报服务" tabindex="-1"><a class="header-anchor" href="#_2-数据报服务"><span>2.数据报服务</span></a></h4><blockquote><p>数据报服务特点：</p><ol><li><p>TCP/IP使用的就是这种<strong>简单灵活</strong>的、<span style="color:#ff6b6b;font-weight:bold;">无连接</span>的、<span style="color:#ff6b6b;font-weight:bold;">不可靠</span>的数据报服务</p></li><li><p>核心思想：<strong>可靠通信应由用户主机来保证</strong></p></li><li><p>由于网络自身不提供端到端的可靠传输服务,这就使得网络中的<strong>路由器可以做得比较简单,大大降低了网络造价</strong></p></li><li><p>这种设计思想的运行方式灵活、能够适应多种应用。因特网能够发展到今日的规模,充分证明了当初采取这种设计思想的正确性</p></li></ol></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/LojBc6xi.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-3-sdn" tabindex="-1"><a class="header-anchor" href="#_4-3-sdn"><span>4.3 SDN</span></a></h3><h4 id="结构" tabindex="-1"><a class="header-anchor" href="#结构"><span>结构</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/27/Su0B0dOx.png" alt="image-20240427114506132" tabindex="0" loading="lazy"><figcaption>image-20240427114506132</figcaption></figure><h4 id="区别" tabindex="-1"><a class="header-anchor" href="#区别"><span>区别</span></a></h4><blockquote><p>网络层可抽象划分为<strong>数据平面(转发)<strong>和</strong>控制平面(路由选择)</strong></p><p>传统：路由选择算法运行在每台路由器中，并且在<strong>每台路由器中都包含转发和路由选择两种功能</strong></p><p>(Software Defined Network，SDN)：控制平面从路由器物理上分离，<strong>路由器仅实现转发，远程控制器计算和分发转发表以供每台路由器所使用</strong></p></blockquote><h4 id="路由选择处理器" tabindex="-1"><a class="header-anchor" href="#路由选择处理器"><span>路由选择处理器</span></a></h4><img src="https://img2.imgtp.com/2024/04/27/qnHfAOU6.png" alt="image-20240427114357548" style="zoom:50%;"><h3 id="_4-4-ipv4" tabindex="-1"><a class="header-anchor" href="#_4-4-ipv4"><span>4.4 IPv4</span></a></h3><h4 id="概述-3" tabindex="-1"><a class="header-anchor" href="#概述-3"><span>概述</span></a></h4><blockquote><p>网际协议(<code>Internet Protocol</code>,<code>IP</code>)是<code>TCP/IP</code>体系结构网际层中的<strong>核心协议</strong></p><p><code>IPv4</code>地址就是给因特网(Internet)上的每一台主机(或路由器)的每一个接口分配一个在全世界范围内是唯一的32比特的标识符</p></blockquote><h4 id="首部格式" tabindex="-1"><a class="header-anchor" href="#首部格式"><span>首部格式</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/KOyDkDzX.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><span style="color:#ff6b6b;font-weight:bold;">各个字段及描述</span></p><table><thead><tr><th style="text-align:center;">字段</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">版本</td><td style="text-align:left;">长度为4个比特,用来表示IP协议的版本,<strong>通信双方使用的IP协议的版本必须一致</strong>,目前广泛使用的IP协议的版本号为4(即IPv4)</td></tr><tr><td style="text-align:center;"><strong>首部长度</strong></td><td style="text-align:left;">长度为4个比特,该字段的取值以<span style="color:#ff6b6b;font-weight:bold;">4B为单位</span>,用来表示IPV4数据报的首部长度(<strong>20+(0~40)</strong>)<br>最小取值为二进制的0101,即十进制的5,再乘以4字节单位,表示IPv4数据报首部只有20字节固定部分<br>最大取值为二进制的1111,即十进制的15,再乘以4字节单位,表示IPV4数据报首部包含20字节固定部分和最大40字节可变部分</td></tr><tr><td style="text-align:center;"><strong>总长度</strong></td><td style="text-align:left;">长度为16个比特,该字段的取值以<span style="color:#ff6b6b;font-weight:bold;">字节为单位</span>,用来表示IPv4数据报的长度(首部长度+数据载荷长度)<br>最大取值为二进制的16个比特1,即十进制的65535(很少传输这么长的IPv4数据报)</td></tr><tr><td style="text-align:center;"><strong>标识</strong></td><td style="text-align:left;">长度为16个比特,属于<strong>同一个IPv4数据报的各分片数据报应该具有相同的标识</strong></td></tr><tr><td style="text-align:center;"><strong>标志</strong></td><td style="text-align:left;">最低位(<code>More Fragment,MF</code>)<br> MF=1表示本分片后面还有分片<br> MF=0表示本分片后面没有分片<br>中间位(<code>Don&#39;t Fragment,DF</code>)<br> DF=1表示不允许分片<br> DF=0表示允许分片<br>最高位为保留位,必须设置为0</td></tr><tr><td style="text-align:center;"><strong>片偏移</strong></td><td style="text-align:left;">长度为16个比特,该字段的取值,以<span style="color:#ff6b6b;font-weight:bold;">8B为单位</span>,用来指出<strong>分片IPv4数据报的数据载荷偏移其在原IPv4数据报的位置有多远</strong>,只能为整数,否则必须调整前一个分片长度</td></tr><tr><td style="text-align:center;"><strong>生存时间</strong></td><td style="text-align:left;">长度为8个比特,最大取值为二进制的11111111,即十进制的255。该字段的取值最初以秒为单位。因此,IPv4数据报的最大生存时间最初为255秒。路由器转发IPv4数据报时,将其首部中该字段的值减去该数据报在路由器上所耗费的时间,若结果不为0就转发,否则就丢弃<br>生存时间字段后来改为<span style="color:#ff6b6b;font-weight:bold;">以“跳数”为单位</span>,路由器收到待转发的IPv4数据报时,将其首部中的该字段的值减1,若结果不为0就转发,否则就丢弃</td></tr><tr><td style="text-align:center;"><strong>协议</strong></td><td style="text-align:left;">长度为8个比特,用来指明IPv4数据报的数据载荷是何种协议数据单元PDU<br><img src="https://img2.imgtp.com/2024/04/04/xAa9ANsy.png" alt="" loading="lazy"></td></tr><tr><td style="text-align:center;"><strong>首部检验和</strong></td><td style="text-align:left;">长度为16个比特,用于<strong>检测IPv4数据报在传输过程中其首部是否出现了差错</strong><br>IPv4数据报每经过一个路由器,其首部中的某些字段的值(例如生存时间TTL、标志以及片偏移等)都可能发生变化,因此路由器都要重新计算一下首部检验和</td></tr><tr><td style="text-align:center;"><strong>源IP地址和目的IP地址</strong></td><td style="text-align:left;">长度都为32个比特,用来填写发送(接收)IPv4数据报的源(目的)主机的IPv4地址</td></tr></tbody></table><h4 id="mtu" tabindex="-1"><a class="header-anchor" href="#mtu"><span>MTU</span></a></h4><blockquote><p><code>MTU</code>：最大传送单元,超过最大传送单元的长度的IP数据报必须分片</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/L8hoyynm.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/al00y50P.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-5-ip编址方式" tabindex="-1"><a class="header-anchor" href="#_4-5-ip编址方式"><span>4.5 IP编址方式</span></a></h3><h4 id="_1-分类编址的ip" tabindex="-1"><a class="header-anchor" href="#_1-分类编址的ip"><span>1.分类编址的IP</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/qnNZ6ucM.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-划分子网的ip" tabindex="-1"><a class="header-anchor" href="#_2-划分子网的ip"><span>2.划分子网的IP</span></a></h4><blockquote><p><strong>分类编址方法不够灵活且容易造成大量地址浪费,划分子网编址方法对其进行改进(“打补丁”)</strong></p></blockquote><img src="https://img2.imgtp.com/2024/04/04/q2ONHMZl.png" style="zoom:80%;"><blockquote><p><strong>划分子网案例</strong></p></blockquote><img src="https://img2.imgtp.com/2024/04/04/kwonYEUW.png" style="zoom:67%;"><h4 id="_3-cidr" tabindex="-1"><a class="header-anchor" href="#_3-cidr"><span>3.CIDR</span></a></h4><img src="https://img2.imgtp.com/2024/04/04/IFbL2L2v.png" style="zoom:67%;"><blockquote><p><strong>无分类</strong>域间路由选择(<code>C</code>lassless <code>I</code>nter-<code>D</code>omain <code>R</code>outing,<code>CIDR</code> )</p></blockquote><img src="https://img2.imgtp.com/2024/04/04/2tRrZdhS.png" style="zoom:67%;"><blockquote><p><strong>练习</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/2qpJoDAK.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-路由聚合" tabindex="-1"><a class="header-anchor" href="#_4-路由聚合"><span>4.路由聚合</span></a></h4><blockquote><p><strong>找出共同前缀,其余位取0</strong></p></blockquote><img src="https://img2.imgtp.com/2024/04/04/A51cUVpL.png" style="zoom:67%;"><h3 id="_4-6-ip数据报的发送和转发过程" tabindex="-1"><a class="header-anchor" href="#_4-6-ip数据报的发送和转发过程"><span>4.6 IP数据报的发送和转发过程</span></a></h3><blockquote><p><strong>IP数据报的发送和转发过程</strong></p><ul><li><p><strong>主机发送IP数据报</strong></p><ul><li>判断目的主机是否与自己在同一个网络： <ul><li>若在同一个网络,则属于直接交付,直接发送给目的主机</li><li>若不在同一个网络,则属于间接交付,传输给主机所在网络的默认网关(路由器),由默认网关帮忙转发)</li></ul></li></ul></li><li><p><strong>路由器转发IP数据报</strong></p><ul><li>检查IP数据报首部是否出错： <ul><li>若出错,则直接丢弃该IP数据报并通告源主机</li><li>若没有出错,则进行转发</li></ul></li><li>根据IP数据报的目的地址在路由表中查找匹配的条目： <ul><li>若找到匹配的条目,则转发给条目中指示的下一跳；</li><li>若找不到,则丢弃该IP数据报并通告源主机；</li></ul></li></ul></li></ul></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/Bn4bmj1L.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>路由器不转发广播IP数据报,即<strong>路由器隔离广播域</strong>,如果因特网中数量巨大的路由器收到广播IP数据报后都进行转发,则会造成巨大的广播风暴,严重浪费因特网资源</p><ul><li>中继器和集线器工作在物理层,<strong>既不隔离冲突域也不隔离广播域</strong></li><li>网桥和交换机(多端口网桥)工作在数据链路层,<strong>可以隔离冲突域,不能隔离广播域</strong></li><li>路由器工作在网络层,<strong>既隔离冲突域,也隔离广播域</strong></li></ul></blockquote><h3 id="_4-7-arp" tabindex="-1"><a class="header-anchor" href="#_4-7-arp"><span>4.7 ARP</span></a></h3><blockquote><p>ARP（Address Resolution Protocol），是<strong>根据IP地址获取MAC地址</strong>的一个TCP/IP协议</p><p>主机中保存了一个高速缓存表，<mark>记录了IP和MAC的对应关系</mark></p></blockquote><img src="https://gitee.com/clibin/image-bed/raw/master/image-20231109221234731.png" style="zoom:67%;"><blockquote><p>ARP协议动态获取MAC地址</p></blockquote><figure><img src="https://gitee.com/clibin/image-bed/raw/master/image-20231109221003126.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>总结：<code>ARP</code>协议只能逐链路（相邻）使用，不能跨网络使用</strong>**</p></blockquote><h3 id="_4-8-静态路由配置" tabindex="-1"><a class="header-anchor" href="#_4-8-静态路由配置"><span>4.8 静态路由配置</span></a></h3><h4 id="_1-静态路由的配置" tabindex="-1"><a class="header-anchor" href="#_1-静态路由的配置"><span>1. 静态路由的配置</span></a></h4><img src="https://img2.imgtp.com/2024/04/04/CtaIyZQk.png" style="zoom:67%;"><h4 id="_2-默认路由" tabindex="-1"><a class="header-anchor" href="#_2-默认路由"><span>2. 默认路由</span></a></h4><ol><li><p>默认路由：默认路由条目中的目的网络<code>0.0.0.0/0</code>,其中<code>0.0.0.0</code>表示任意网络,而网络前缀“/0”(相应的地址掩码为<code>0.0.0.0</code>)是最短的网络前缀</p></li><li><p>特定主机路由：特定主机路由条目中的目的网络<code>192.168.2.1/32</code>,其中<code>192.168.2.1</code>是特定主机的IP地址,而网络前缀“/32”(相应地址掩码为<code>255.255.255.255</code>)是最长的网络前缀</p></li><li><p>路由器在查找转发表转发IP数据报时,遵循“最长前缀匹配”的原则,因此默认路由匹配优先级最低,特定主机路由条目的匹配优先级最高</p></li></ol><img src="https://img2.imgtp.com/2024/04/04/ZV9GFitH.png" style="zoom:67%;"><h4 id="_3-路由环路" tabindex="-1"><a class="header-anchor" href="#_3-路由环路"><span>3. 路由环路</span></a></h4><ul><li>错误配置静态路由有可能导致路由环路问题</li><li>为了防止IP数据报在环路中永久兜圈,在IP数据报首部设有生存时间TTL,TTL为0时会被丢弃</li></ul><p><strong>路由环路问题产生原因：</strong></p><ol><li><strong>路由配置错误</strong></li></ol><img src="https://img2.imgtp.com/2024/04/04/ae9r7c4U.png" style="zoom:67%;"><ol start="2"><li><strong>聚合了不存在的IP地址</strong></li></ol><blockquote><p>需要给不存在的IP地址配置黑洞路由,防止IP数据报转发到其他路由器</p></blockquote><img src="https://img2.imgtp.com/2024/04/04/agvaYwYw.png" style="zoom:67%;"><ol start="3"><li><strong>网络故障</strong></li></ol><blockquote><p>可以在网络发生故障时添加一条针对该IP的黑洞路由,待网络正常后又将其设置为失效状态</p></blockquote><img src="https://img2.imgtp.com/2024/04/04/4SIsCein.png" style="zoom:67%;"><h3 id="_4-9-dhcp" tabindex="-1"><a class="header-anchor" href="#_4-9-dhcp"><span>4.9 DHCP</span></a></h3><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述"><span>1. 概述</span></a></h4><blockquote><p>动态主机配置协议(<code>D</code>ynamic <code>h</code>ost <code>c</code>onfiguration <code>p</code>rotocol)</p><p>作用：</p><ul><li><code>DHCP</code>可为计算机自动配置网络参数,包括： <ul><li>IP地址</li><li>子网掩码</li><li>默认网关</li><li>DNS服务器</li></ul></li></ul></blockquote><h4 id="_2-工作过程" tabindex="-1"><a class="header-anchor" href="#_2-工作过程"><span>2. 工作过程</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/ICGzRKfp.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-dhcp中继代理" tabindex="-1"><a class="header-anchor" href="#_3-dhcp中继代理"><span>3. DHCP中继代理</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/Q6Dzgeuh.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h3 id="_4-10-路由选择协议" tabindex="-1"><a class="header-anchor" href="#_4-10-路由选择协议"><span>4.10 路由选择协议</span></a></h3><ol><li>路由选择分为两类</li></ol><table><thead><tr><th style="text-align:left;">静态路由选择</th><th style="text-align:left;">动态路由选择</th></tr></thead><tbody><tr><td style="text-align:left;">采用<strong>人工配置</strong>的方式给路由器添加网络路由、默认路由和特定主机路由等路由条目</td><td style="text-align:left;">路由器通过路由选择协议<strong>自动获取</strong>路由信息</td></tr><tr><td style="text-align:left;">静态路由选择<strong>简单、开销小</strong>,但不能及时适应网络状态(流量、拓扑等)的变化</td><td style="text-align:left;">动态路由选择比较<strong>复杂、开销比较大</strong>,但能较好地适<strong>应网络状态</strong>的变化</td></tr><tr><td style="text-align:left;">静态路由选择一般只在<strong>小规模网络</strong>中采用</td><td style="text-align:left;">动态路由选择适用于<strong>大规模网络</strong></td></tr></tbody></table><ol start="2"><li>因特网采用分层次的路由选择协议</li></ol><p>因特网是全球最大的互联网,它所采取的路由选择协议具有以下三个主要特点：</p><ul><li>自适应：因特网采用动态路由选择,能较好地适应网络状态的变化。</li><li>分布式：因特网中的各路由器通过相互间的信息交互,共同完成路由信息的获取和更新。</li><li>分层次：将整个因特网划分为许多较小的自治系统(<code>Autonomous System,AS</code>),在自治系统内部和外部采用不同类别的路由选择协议,分别进行路由选择</li></ul><img src="https://img2.imgtp.com/2024/04/04/abaIPV0E.png" style="zoom:67%;"><h3 id="_4-11-rip" tabindex="-1"><a class="header-anchor" href="#_4-11-rip"><span>4.11 RIP</span></a></h3><p>路由信息协议(<code>Routing Information Protocol,RIP</code>)是内部网关协议中最先得到广泛使用的协议之一</p><h4 id="概述-4" tabindex="-1"><a class="header-anchor" href="#概述-4"><span>概述</span></a></h4><ul><li><p>RIP使用跳数(<code>Hop Count</code>)作为度量(<code>Metric</code>)来衡量到达目的网络的距离(<strong>距离向量</strong>)</p><ul><li><p>RIP将路由器到直连网络的距离定义为1</p></li><li><p>RIP将路由器到非直连网络的距离定义为所经过的路由器数加1</p></li><li><p>RIP允许一条路径最多只能包含15个路由器,<span style="color:#ff6b6b;font-weight:bold;">距离等于16时相当于不可达</span>,因此RIP只适用于小型互 联网</p></li></ul></li></ul><img src="https://img2.imgtp.com/2024/04/04/SdAYuRNl.png" style="zoom:50%;"><ol start="2"><li><p>RIP认为<strong>好的路由就是“距离短”的路由</strong>,也就是所通过路由器数量最少的路由,和传输速率和物理距离等无关</p></li><li><p>RIP的3个重要特点</p></li></ol><img src="https://img2.imgtp.com/2024/04/04/5Eskdf9i.png" style="zoom:67%;"><h4 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理"><span>工作原理</span></a></h4><ol><li><strong>基本流程</strong></li></ol><img src="https://img2.imgtp.com/2024/04/04/bH69GgoT.png" style="zoom:67%;"><ol start="2"><li><strong>更新规则</strong></li></ol><img src="https://img2.imgtp.com/2024/04/04/Fp83R5QM.png" style="zoom:80%;"><ol start="3"><li><p><strong>坏消息传播的慢</strong></p><figure><img src="https://img2.imgtp.com/2024/04/04/X8Q0gotf.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p><strong>优缺点</strong></p></li></ol><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>实现简单,路由器开销小</td><td>RIP限制了最大RIP距离为<code>15</code>这就限制了使用RIP的自治系统AS的规模</td></tr><tr><td>如果一个路由器发现了RIP距离更短的路由,那么这种更新信息就传播得很快,即“好消息传播得快”</td><td>相邻路由器之间交换的路由信息是路由器中的完整路由表,因而随着网络规模的扩大,开销也随之增大</td></tr><tr><td></td><td>“<strong>坏消息传播得慢</strong>”,使更新过程的收敛时间过长。因此,对于规模较大的自治系统AS,应当使用<code>OSPF</code>协议</td></tr></tbody></table><h3 id="_4-12-ospf" tabindex="-1"><a class="header-anchor" href="#_4-12-ospf"><span>4.12 <code>OSPF</code></span></a></h3><h4 id="_1-基本概念" tabindex="-1"><a class="header-anchor" href="#_1-基本概念"><span>1. 基本概念</span></a></h4><blockquote><p>开放最短路径优先(<code>Open Shortest Path First,OSPF</code>)协议是为了克服路由信息协议RIP的缺点在1989年开发出来的</p><ul><li>“开放”表明<code>OSPF</code>协议不是受某一厂商控制,而是公开发表的</li><li>“最短路径优先”是因为使用了Dijkstra提出的最短路径算法(<code>Shortest Path First,SPF</code>)</li></ul></blockquote><h4 id="_2-特点" tabindex="-1"><a class="header-anchor" href="#_2-特点"><span>2. 特点</span></a></h4><blockquote><ul><li><code>OSPF</code>是基于<strong>链路状态</strong>的,而不像<code>RIP</code>是基于距离向量的</li><li><code>OSPF</code>基于链路状态并采用最短路径算法计算路由,从算法上保证了不会产生路由环路</li><li><code>OSPF</code>不限制网络规模,更新效率高,收敛速度快</li></ul></blockquote><h4 id="_3-相关概念" tabindex="-1"><a class="header-anchor" href="#_3-相关概念"><span>3. 相关概念</span></a></h4><ol><li><p>链路状态(<code>Link State,LS</code>)是指本路由器都和哪些路由器相邻,以及相应链路的“代价(cost)”,类似RIP中的距离</p><blockquote><p>“代价”用来表示费用、距离、时延和带宽等,这些都由网络管理人员来决定</p></blockquote></li></ol><img src="https://img2.imgtp.com/2024/04/04/RT6StboJ.png" style="zoom:80%;" alt="举例-思科路由器的代价计算标准"><ol start="2"><li><strong><code>OSPF</code>路由器邻居关系的建立和维护</strong><ul><li><strong>如果在死亡倒计时为0时还未收到邻居的问候分组,则认为该邻居不可达,</strong></li><li><strong>在接受到邻居的问候分组后,刷新死亡倒计时为40s</strong></li><li><strong>路由器每10s会向邻居发送问候分组</strong></li></ul></li></ol><img src="https://img2.imgtp.com/2024/04/04/8vMlgEEu.png" style="zoom:67%;"><ol start="3"><li><strong>链路状态数据库</strong>(<code>Link State Database,LSDB</code>)</li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/EeKgSYgV.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>使用<code>OSPF</code>的各路由器,基于链路状态数据库LSDB进行最短路径优先计算,构建出各自到达其他各路由器的最短路径,即构建各自的路由表(根据链路状态数据库得出全局带权有向图,使用Dijkstra算法得出个路由器的最短路径)</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/5UrNfzxP.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li><strong><code>OSPF</code>的五种分组类型</strong><ul><li>类型1,问候(<code>Hello</code>)分组：用来发现和维护邻居路由器的可达性。</li><li>类型2,数据库描述(<code>Database Description</code>)分组：向邻居路由器给出自己的链路状态数据库中的所有链路状态项目的摘要信息</li><li>类型3,链路状态请求(<code>Link State Request</code>)分组：向邻居路由器请求发送某些链路状态项目的详细信息。</li><li>类型4,链路状态更新(<code>Link State Update</code>)分组：路由器使用这种分组将其链路状态进行洪泛发送,即用洪泛法对全网更新链路状态</li><li>类型5,链路状态确认(<code>Link State Acknowledgment</code>)分组：这是对链路状态更新分组的确认分组。</li></ul></li></ol><h4 id="_4-基本工作原理" tabindex="-1"><a class="header-anchor" href="#_4-基本工作原理"><span>4. 基本工作原理</span></a></h4><img src="https://img2.imgtp.com/2024/04/04/BIoaiRjA.png" style="zoom:67%;"><blockquote><p>采用划分区域的方法,虽然使交换信息的种类增多了,同时也使OSPF协议更加复杂了,但这样做能使每一个区域内部交换路由信息的通信量大大减小,因而使OSPF协议能够用于规模更大的自治系统AS</p></blockquote><img src="https://img2.imgtp.com/2024/04/04/taHfWwBu.png" style="zoom:67%;"><h3 id="_4-13-bgp" tabindex="-1"><a class="header-anchor" href="#_4-13-bgp"><span>4.13 <code>BGP</code></span></a></h3><h4 id="_1-基本概念-1" tabindex="-1"><a class="header-anchor" href="#_1-基本概念-1"><span>1. 基本概念</span></a></h4><blockquote><ul><li><strong>边界网关协议</strong>(<code>Border Gateway Protocol,BGP</code>)属于外部网关协议<code>EGP</code>这个类别,用于自治系统<code>AS</code>之间的路由选择协议</li><li>由于在不同AS内度量路由的“代价”(距离、带宽、费用等)可能不同,因此对于AS之间的路由选择,使用统一的“代价”作为度量来寻找最佳路由是不行的</li><li>AS之间的路由选择还必须考虑相关策略(政治、经济、安全等)</li></ul><p><strong>总结：<code>BGP</code>只能是力求寻找一条能够到达目的网络且比较好的路由(即不能兜圈子),而并非要寻找一条最佳路由</strong></p></blockquote><img src="https://img2.imgtp.com/2024/04/04/kc7UmfJ1.png" style="zoom:80%;"><blockquote><ul><li><p>在配置BGP时,每个AS的管理员要选择至少一个路由器作为该AS的“BGP发言人”</p></li><li><p>一般来说,两个BGP发言人都是通过一个共享网络连接在一起的,而BGP发言人往往就是BGP边界路由器</p></li><li><p>使用<code>TCP</code>连接交换路由信息的两个BGP发言人,彼此称为对方的邻站(neighbor)或对等站(peer)</p></li><li><p>BGP发言人除了运行BGP协议外,还必须运行自己所在AS所使用的内部网关协议IGP,例如RIP或OSPF</p></li><li><p>BGP发言人交换网络可达性的信息,也就是要到达某个网络所要经过的一系列自治系统</p></li><li><p>当BGP发言人相互交换了网络可达性的信息后,各BGP发言人就根据所采用的策略,从收到的路由信息中找出到达各自治系统的较好的路由,也就是构造出树形结构且不存在环路的自治系统连通图</p></li></ul></blockquote><h4 id="_2-四种报文" tabindex="-1"><a class="header-anchor" href="#_2-四种报文"><span>2. 四种报文</span></a></h4><img src="https://img2.imgtp.com/2024/04/04/JlA83rKF.png"><img src="https://img2.imgtp.com/2024/04/04/1hHeU3jo.png"><h3 id="_4-14-icmp" tabindex="-1"><a class="header-anchor" href="#_4-14-icmp"><span>4.14 <code>ICMP</code></span></a></h3><h4 id="_1-基本概念-2" tabindex="-1"><a class="header-anchor" href="#_1-基本概念-2"><span>1. 基本概念</span></a></h4><blockquote><ul><li>为了更有效地转发IP数据报以及提高IP数据报交付成功的机会,TCP/IP体系结构的网际层使用了网际控制报文协议(<code>Internet Control Message Protocol,ICMP</code>)</li><li>主机或路由器使用ICMP来发送差错报告报文和询问报文</li><li>ICMP报文被封装在IP数据报中作为数据载荷发送</li></ul></blockquote><h4 id="_2-icmp报文数据类型" tabindex="-1"><a class="header-anchor" href="#_2-icmp报文数据类型"><span>2. ICMP报文数据类型</span></a></h4><ul><li><p><strong>差错报告报文</strong>：用来向主机或路由器报告差错情况</p><ul><li><p><strong>终点不可达</strong>：当路由器或主机不能交付IP数据报时,就向源点发送终点不可达报文,具体可再根据ICMP的代码字段细分为目的网络不可达、目的主机不可达、目的协议不可达、目的端口不可达、目的网络未知、目的主机未知等13种</p><figure><img src="https://img2.imgtp.com/2024/04/04/xmyVOhJp.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p><strong>源点抑制</strong>：当路由器或主机由于拥塞而丢弃IP数据报时,就向发送该IP数据报的源点发送源点抑制报文,使源点知道应当把IP数据报的发送速率放慢</p><img src="https://img2.imgtp.com/2024/04/04/ImvUYf3I.png"></li><li><p><strong>超时</strong>：</p><ul><li>当路由器收到一个目的IP地址不是自己的IP数据报时,会将其首部中生存时间TTL字段的值减1。若结果不为0,则路由器将该数据报转发出去；若结果为0,路由器不但要丢弃该数据报,还要向发送该IP数据报的源点发送时间超过(超时)报文</li><li>另外,当终点在预先规定的时间内未能收到一个数据报的全部数据报分片时,就把已收到的数据报片都丢弃,也会向源点发送时间超过(超时)报文</li></ul><img src="https://img2.imgtp.com/2024/04/04/7q3jrjnI.png"></li><li><p><strong>参数问题</strong>：当路由器或目的主机收到IP数据报后,根据其首部中的检验和字段的值发现首部在传送过程中出现了误码,就丢弃该数据报,并向发送该数据报的源点发送参数问题报文</p><figure><img src="https://img2.imgtp.com/2024/04/04/OJVARiNr.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p><strong>改变路由(重定向)</strong>：路由器把改变路由报文发送给主机,让主机知道下次应将IP数据报发送给另外的路由器,这样可以通过更好的路由到达目的主机</p><figure><img src="https://img2.imgtp.com/2024/04/04/iebrHMN6.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ul></li><li><p><strong>以下情况不应发送ICMP差错报告报文</strong>：</p><ul><li>对ICMP差错报告报文不再发送ICMP差错报告报文</li><li>对第一个分片的IP数据报片的所有后续数据报片都不发送ICMP差错报告报文</li><li>对具有多播地址的IP数据报都不发送ICMP差错报告报文</li><li>对具有特殊地址(例如<code>127.0.0.0</code>或<code>0.0.0.0</code>)的IP数据报不发送ICMP差错报告报文。</li></ul></li><li><p><strong>询问报文</strong>：用来向主机或路由器询问情况</p><ul><li><p><strong>回送请求和回答</strong>：</p><p>由主机或路由器向一个特定的目的主机或路由器发出。收到此报文的主机或路由器必须给发送该报文的源主机或路由器发送ICMP回送回答报文。这种询问报文用来测试目的站是否可达以及了解其有关状态</p></li><li><p><strong>时间戳请求和回答</strong>：</p><p>用来请求某个主机或路由器回答当前的日期和时间。在ICMP时间戳回答报文中有一个32比特的字段,其中写入的整数代表从1900年1月1日起到当前时刻一共有多少秒。这种询问报文用来进行时钟同步和测量时间</p></li></ul></li></ul><h4 id="_3-icmp的典型应用" tabindex="-1"><a class="header-anchor" href="#_3-icmp的典型应用"><span>3. ICMP的典型应用</span></a></h4><h5 id="_1-ping" tabindex="-1"><a class="header-anchor" href="#_1-ping"><span>1. <code>PING</code></span></a></h5><blockquote><p>分组网间探测(Packet InterNet Groper,<code>PING</code>)</p><p>在命令行中使用ping命令用来测试主机或路由器之间的连通性</p><ul><li>PING是TCP/IP体系结构的应用层直接使用网际层ICMP的一个例子,它并不使用运输层的TCP或UDP</li><li>PING应用所使用的ICMP报文类型为回送请求和回答</li></ul></blockquote><h5 id="_2-traceroute" tabindex="-1"><a class="header-anchor" href="#_2-traceroute"><span>2. <code>traceroute</code></span></a></h5><blockquote><p>跟踪路由应用traceroute,用于探测IP数据报从源主机到达目的主机要经过哪些路由器</p><p>在不同操作系统中,traceroute应用的命令和实现机制有所不同：</p><ul><li>在UNIX版本中,具体命令为<code>traceroute</code>,其在运输层使用UDP协议,在网络层使用ICMP报文类型只有差错报告报文</li><li>在Windows版本中,具体命令为<code>tracert</code>,其应用层直接使用网际层的ICMP协议,所使用的ICMP报文类型有回送请求和回答报文以及差错报告报文</li></ul><p><strong>原理</strong>：设置IP数据报TTL为1,经过第一个路由器时,TTL减为0,IP数据报被丢弃,路由器向源主机发送超时差错报告报文,这样就知道了经过的第一个路由器的IP地址,以此类推依次设置TTL为2,3,4,……,直到接收到目的主机的回送请求回答报文</p></blockquote><h3 id="_4-15-vpn" tabindex="-1"><a class="header-anchor" href="#_4-15-vpn"><span>4.15 <code>VPN</code></span></a></h3><blockquote><p>虚拟专用网(<code>Virtual Private Network,VPN</code>)：<strong>利用公用的因特网作为本机构各专用网之间的通信载体,这样形成的网络又称为虚拟专用网</strong></p></blockquote><p><strong>专用地址</strong>：</p><ul><li><code>10.0.0.0-10.255.255.255</code>(CIDR地址块10/8)</li><li><code>172.16.0.0-172.31.255.255</code>(ClDR地址块172.16/12)</li><li><code>192.168.0.0-192.168.255.255</code>(CIDR地址块192.168/16)</li></ul><blockquote><p>很显然,全世界可能有很多不同机构的专用网具有相同的专用IP地址,但这并不会引起麻烦,因为这些专用地址仅在机构内部使用</p><p><strong>注意</strong>：在因特网中的所有路由器,对目的地址是专用地址的IP数据报一律不进行转发,这需要由因特网服务提供者ISP对其拥有的因特网路由器进行设置来实现(需要自己对路由器额外配置)</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/x4VahylJ.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-16-nat" tabindex="-1"><a class="header-anchor" href="#_4-16-nat"><span>4.16 <code>NAT</code></span></a></h3><h4 id="_1-概述-1" tabindex="-1"><a class="header-anchor" href="#_1-概述-1"><span>1. 概述</span></a></h4><blockquote><ul><li><p><strong>背景</strong>：尽管因特网采用了无分类编址方法来减缓IPv4地址空间耗尽的速度,但由于因特网用户数量的急剧增长,特别是大量小型办公室和家庭网络接入因特网的需求不断增加,IPv4地址空间即将耗尽的危险然仍没有解除(实际上,因特网号码分配管理局IANN于2011年2月3日宣布,IPv4地址已经分配完毕)</p></li><li><p><strong>网络地址转换</strong>(<code>Network Address Translation,NAT</code>)技术于1994年被提出,用来缓解IPv4地址空间即将耗尽的问题</p><ul><li>NAT能使大量使用内部专用地址的专用网络用户共享少量外部全球地址来访问因特网上的主机和资源</li><li>这种方法需要在专用网络连接到因特网的路由器上安装NAT软件。装有NAT软件的路由器称为NAT路由器,它至少要有一个有效的外部全球地址IPG。这样,所有使用内部专用地址的主机在和外部因特网通信时,都要在NAT路由器上将其内部专用地址转换成IPG</li></ul></li></ul></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/jGM9Vzo8.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-napt" tabindex="-1"><a class="header-anchor" href="#_2-napt"><span>2. <code>NAPT</code></span></a></h4><blockquote><p><strong>网络地址与端口号转换方法</strong>:将NAT和运输层端口号结合使用,称为网络地址与端口号转换(<code>Network Address and Port Translation,NAPT</code>)</p><ul><li>由于目前绝大多数基于TCP/IP协议栈的网络应用,都使用运输层的传输控制协议TCP或用户数据报协议UDP,为了更加有效地利用NAT路由器中的全球IP地址,现在常将NAT转换和运输层端口号结合使用 <ul><li>这样就可以使内部专用网中使用专用地址的大量主机,共用NAT路由器上的1个全球IP地址,因而可以同时与因特网中的不同主机进行通信</li><li>现在很多家用路由器将家中各种智能设备(手机、平板、笔记本电脑、台式电脑、物联网设备等)接入因特网,这种路由器实际上就是一个NAPT路由器,但往往并不运行路由选择协议</li></ul></li></ul></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/pXcz3mVQ.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>由于NAT对外网屏蔽了内网主机的网络地址,能为内网的主机提供一定的安全保护</p></blockquote><h3 id="_5-思维导图和习题" tabindex="-1"><a class="header-anchor" href="#_5-思维导图和习题"><span>5. 思维导图和习题</span></a></h3><p><a href="https://www.kdocs.cn/view/l/ceLxGZ0br8Gy" target="_blank" rel="noopener noreferrer">第4章 网络层(思维导图)-1 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cu2tek1gzIPq" target="_blank" rel="noopener noreferrer">第4章 网络层(思维导图)-2 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cjXVALCjxr0X" target="_blank" rel="noopener noreferrer">第4章 网络层(思维导图)-3 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cbSlBNdR8CSr" target="_blank" rel="noopener noreferrer">第4章 网络层(思维导图)-4 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/ccu9ATsOpoZf" target="_blank" rel="noopener noreferrer">第4章 网络层 习题(第1部分)</a></p><p><a href="https://www.kdocs.cn/view/l/cqBldcygudFg" target="_blank" rel="noopener noreferrer">第4章 网络层 习题(第2部分)</a></p><hr><h2 id="_5-运输层" tabindex="-1"><a class="header-anchor" href="#_5-运输层"><span>5. 运输层</span></a></h2><h3 id="_1-概述-2" tabindex="-1"><a class="header-anchor" href="#_1-概述-2"><span>1. 概述</span></a></h3><ul><li>第2~4章依次介绍了计算机网络体系结构中的物理层、数据链路层和网络层,它们共同解决了将主机通过异构网络互联起来所面临的问题,实现了主机到主机的通信</li><li>然而在计算机网络中实际进行通信的真正实体,是位于通信两端主机中的进程</li><li>如何<strong>为运行在不同主机上的应用进程提供直接的逻辑通信服务</strong>,就是运输层的主要任务,运输层协议又称为端到端协议</li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/D2rQouVM.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-端口号-复用和分用" tabindex="-1"><a class="header-anchor" href="#_2-端口号-复用和分用"><span>2. 端口号,复用和分用</span></a></h3><h4 id="_1-运输层端口号" tabindex="-1"><a class="header-anchor" href="#_1-运输层端口号"><span>1. 运输层端口号</span></a></h4><ul><li>运行在计算机上的进程是使用进程标识符(<code>P</code>rocess <code>ld</code>entification,<code>PID</code>)来标识的。 <ul><li>然而,因特网上的计算机并不是使用统一的操作系统,而不同操作系统(Windows、Linux、.MacOS) 又使用不同格式的进程标识符</li><li>为了使运行不同操作系统的计算机的应用进程之间能够基于网络进行通信,就必须使用统一的方法 对TCPP体系的应用进程进行标识</li></ul></li><li><code>TCP/IP</code>体系结构的运输层使用端口号来标识和区分应用层的不同应用进程。端口号的长度为6比特,取 值范围是0~65535</li></ul><img src="https://img2.imgtp.com/2024/04/04/LEoAKn42.png" style="zoom:100%;"><blockquote><p><strong>端口号只具有本地意义,即端口号只是为了标识本计算机网络协议栈应用层中的各应用进程。在因特网中,不同计算机中的相同端口号是没有关系的,即相互独立。另外,<code>TCP</code>和<code>UDP</code>端口号之间也是没有关系的</strong></p></blockquote><h4 id="_2-发送方的复用和接收方的分用" tabindex="-1"><a class="header-anchor" href="#_2-发送方的复用和接收方的分用"><span>2. 发送方的复用和接收方的分用</span></a></h4><ol><li><strong>复用(Multiplexing)：</strong><ul><li><strong>定义：</strong> 复用是指将多个应用程序的数据流合并到一个共享的通信通道上</li><li><strong>TCP中的复用：</strong> 在TCP中,复用通过源端口号来实现。TCP连接的两端使用IP地址和端口号来唯一标识。源端口号表示发送端的应用程序,目的端口号表示接收端的应用程序。这样,在单个TCP连接中,多个应用程序的数据可以共享同一个物理通信通道</li><li><strong>UDP中的复用：</strong> 在UDP中,复用同样通过源端口号来实现。UDP报文的源端口号用于标识发送端的应用程序,目的端口号用于标识接收端的应用程序</li></ul></li><li><strong>分用(Demultiplexing)：</strong><ul><li><strong>定义：</strong> 分用是指根据数据流中的标识信息将合并的数据流分发给正确的应用程序</li><li><strong>TCP中的分用：</strong> 在TCP中,分用通过目的端口号来实现。接收端根据目的端口号将接收到的数据分发给相应的应用程序。这样,TCP层能够将数据正确地传递给目标应用程序</li><li><strong>UDP中的分用：</strong> 在UDP中,同样通过目的端口号来实现分用。接收端通过目的端口号确定应该将数据交付给哪个应用程序</li></ul></li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/HKhQUmCb.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>常见协议的分类</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/ioR9SdPa.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong><a href="https://www.bilibili.com/video/BV1c4411d7jb?t=353.6&amp;p=58">运输层端口号应用举例</a></strong></p><h3 id="_3-tcp和udp的对比" tabindex="-1"><a class="header-anchor" href="#_3-tcp和udp的对比"><span>3. <code>TCP</code>和<code>UDP</code>的对比</span></a></h3><figure><img src="https://img2.imgtp.com/2024/04/04/8ufoDA1F.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>注意</strong>：</p><ul><li>TCP面向连接是逻辑连接,并非真实物理连接</li><li>TCP面向字节流,UDP面向应用报文(只是给数据报添加一个UDP首部)</li><li>TCP只支持单播,UDP支持单播、多播和广播</li><li>TCP提供可靠服务,UDP提供不可靠服务</li></ul><h3 id="_4-tcp的流量控制" tabindex="-1"><a class="header-anchor" href="#_4-tcp的流量控制"><span>4. TCP的<strong>流量控制</strong></span></a></h3><h4 id="_1-概述-3" tabindex="-1"><a class="header-anchor" href="#_1-概述-3"><span>1. 概述</span></a></h4><blockquote><p>TCP为应用程序提供了流量控制(<code>Flow Control</code>)机制,以解决因发送方发送数据太快而导致接收方来不及接收,造成接收方的接收缓存溢出的问题</p><p>**流量控制的基本方法：**接收方根据自己的接收能力(接收缓存的可用空间大小)控制发送方的发送速率</p></blockquote><h4 id="_2-流量控制方法" tabindex="-1"><a class="header-anchor" href="#_2-流量控制方法"><span>2. <a href="https://www.bilibili.com/video/BV1c4411d7jb?t=44.1&amp;p=60">流量控制方法</a></span></a></h4><ol><li><strong>流程</strong></li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/W4mjWAtQ.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/3DCPrqks.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li><p>例题</p><figure><img src="https://img2.imgtp.com/2024/04/04/eYiMYvRR.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ol><h3 id="_5-tcp的拥塞-se-控制" tabindex="-1"><a class="header-anchor" href="#_5-tcp的拥塞-se-控制"><span>5. TCP的<strong>拥塞(se)控制</strong></span></a></h3><h4 id="_1-基本概念-3" tabindex="-1"><a class="header-anchor" href="#_1-基本概念-3"><span>1. 基本概念</span></a></h4><img src="https://img2.imgtp.com/2024/04/04/xL1bNfCp.png"><h4 id="_2-4种拥塞控制方法" tabindex="-1"><a class="header-anchor" href="#_2-4种拥塞控制方法"><span>2. 4种拥塞控制方法</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/v0EQTjNj.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_1-慢开始、拥塞避免" tabindex="-1"><a class="header-anchor" href="#_1-慢开始、拥塞避免"><span>1. 慢开始、拥塞避免</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/1mqfBCfM.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2-快重传、快恢复" tabindex="-1"><a class="header-anchor" href="#_2-快重传、快恢复"><span>2. 快重传、快恢复</span></a></h5>`,496),m=i('<ol><li>问题</li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/MiKI7G2d.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li><p><strong>快重传</strong></p><ul><li><strong>采用快重传算法可以让发送方尽早知道发生了个别TCP报文段的丢失</strong></li><li>“快重传”是指<strong>使发送方尽快(尽早)进行重传,而不是等重传计时器超时再重传</strong><ul><li>这就要求接收方不要等待自己发送数据时才进行捎带确认,而是要立即发送确认,即使收到了失序的报文段也要立即发出对已收到的报文段的重复确认</li><li>发送方一旦收到3个连续的重复确认,就将相应的报文段立即重传,而不是等该报文段的重传计时器超时再重传</li></ul></li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/xkVEdIRO.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p><strong>快恢复</strong></p></li></ol><blockquote><p>与快重传算法配合使用的是<strong>快恢复算法</strong>,发送方一旦收到3个重复确认,就知道现在只是丢失了个别的报文段,于是不启动慢开始算法,<strong>而是执行快恢复算法</strong></p><ul><li><strong>快恢复算法：<strong>发送方将慢开始门限ssthresh的值和拥塞窗口cwnd的值</strong>都调整为当前cwnd值的一半</strong>,并开始执行拥塞避免算法</li><li>也有的快恢复实现是把快恢复开始时的cwnd值再增大一些,即cwnd=新ssthresh+3</li></ul></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/qO3uhLLl.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-tcp超时重传时间的选择" tabindex="-1"><a class="header-anchor" href="#_6-tcp超时重传时间的选择"><span>6. TCP超时重传时间的选择</span></a></h3><blockquote><p><strong>TCP超时重传时间RTO的选择是TCP最复杂的问题之一</strong></p><p>问题：</p><ul><li>超时重传时间设置过小,在确认报文段发送给接收方的过程中,发送方重传数据报文,增大了网络负荷</li><li>超时重传时间设置过大,需要重传数据报文时,推迟时间太长,网络空闲时间大,降低了传输效率</li><li>超时重传时间<code>RTO</code>应略大于往返时间<code>RTT</code></li></ul></blockquote><h4 id="rto的选择" tabindex="-1"><a class="header-anchor" href="#rto的选择"><span><strong>RTO的选择</strong></span></a></h4><h5 id="_1-rtts的计算" tabindex="-1"><a class="header-anchor" href="#_1-rtts的计算"><span>1. RTTs的计算</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/UDFqDvXR.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2-rrtd和rto的计算" tabindex="-1"><a class="header-anchor" href="#_2-rrtd和rto的计算"><span>2. RRTd和RTO的计算</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/HY1BAdru.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="发生超时重传时无法测准rtt" tabindex="-1"><a class="header-anchor" href="#发生超时重传时无法测准rtt"><span>发生超时重传时无法测准RTT</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/yNzUzb2Y.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>通过上述两个例子可以看出：当发送方出现超时重传后,收到确认报文段时是无法判断出该确认到底是对原数据报文段的确认还是对重传数据报文段的确认,也就是无法准确测量出RTT,进而无法正确计算RTO</strong></p></blockquote><h5 id="karn算法及修正" tabindex="-1"><a class="header-anchor" href="#karn算法及修正"><span>Karn算法及修正</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/AwbzanjU.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/xrIJQlOc.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_7-tcp可靠传输的实现" tabindex="-1"><a class="header-anchor" href="#_7-tcp可靠传输的实现"><span>7.TCP可靠传输的实现</span></a></h3><ul><li><strong>TCP的窗口以字节为单位</strong></li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/YjEPy8k0.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>发送方 <ul><li>发送窗口内的已发送数据如果迟迟未收到确认,会发生超时重传</li><li>只有处于发送窗口内的数据才能发送</li></ul></li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/fR0t7TXv.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>接收方 <ul><li>接收方<strong>只能对按序收到的数据中的最高序号给出累计确认</strong>,3次重复确认会导致发送方<strong>快重传</strong></li><li><strong>序号落入接收窗口内的数据是允许接收的数据</strong></li></ul></li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/i29w36GO.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><strong>总结</strong></li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/or468nHg.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_8-tcp的运输连接管理" tabindex="-1"><a class="header-anchor" href="#_8-tcp的运输连接管理"><span>8. TCP的运输连接管理</span></a></h3><h4 id="_1-tcp连接的建立" tabindex="-1"><a class="header-anchor" href="#_1-tcp连接的建立"><span>1. TCP连接的建立</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/J2XMeS5i.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>TCP双方连接的建立要解决的三个问题</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/unn0sUEo.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-三报文握手" tabindex="-1"><a class="header-anchor" href="#_2-三报文握手"><span>2. 三报文握手</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/LViPPUEp.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>思考：第三次确认是否多余,能不能两报文握手？</strong></p><p>答案：不能,如下图所示</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/ubh3gJLp.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-四报文挥手" tabindex="-1"><a class="header-anchor" href="#_3-四报文挥手"><span>3. 四报文挥手</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/80yAaiIl.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>思考：为什么客户端发送完最后一个确认报文段后不立刻关闭而是等待2个MSL时间后才关闭？</strong></p><p>答案：如图所示</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/G3BFV47H.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>TCP保活计时器的作用</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/xivu7oAV.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_9-tcp报文段首部格式" tabindex="-1"><a class="header-anchor" href="#_9-tcp报文段首部格式"><span>9. TCP报文段首部格式</span></a></h3><blockquote><p>参阅思维导图 1</p></blockquote><h3 id="_10-思维导图和习题" tabindex="-1"><a class="header-anchor" href="#_10-思维导图和习题"><span>10. 思维导图和习题</span></a></h3><p><a href="https://www.kdocs.cn/view/l/cgoja6Lpohhj" target="_blank" rel="noopener noreferrer">第5章 运输层(思维导图)-1 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/chkSS9vn9Zgd" target="_blank" rel="noopener noreferrer">第5章 运输层(思维导图)-2 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cpaRQtp0G6Ou" target="_blank" rel="noopener noreferrer">第5章 运输层 习题 (kdocs.cn)</a></p><hr><h2 id="_6-应用层" tabindex="-1"><a class="header-anchor" href="#_6-应用层"><span>6. 应用层</span></a></h2><h3 id="_1-概述-4" tabindex="-1"><a class="header-anchor" href="#_1-概述-4"><span>1. 概述</span></a></h3><ul><li>应用层是计算机网络体系结构的<strong>最顶层</strong>,是<strong>设计和建立计算机网络的最终目的</strong>,也是计算机网络中发展最快的部分 <ul><li>早期基于文本的应用(电子邮件、远程登录、文件传输、新闻组)</li><li>20世纪90年代将因特网带入千家万户的万维网WWW</li><li>当今流行的即时通信、P2P文件共享及各种音视频应用</li><li>计算设备的小型化和“无处不在”,宽带住宅接入和无线接入的日益普及和迅速发展,为未来更多的新型应用提供了广阔的舞台</li></ul></li></ul><h3 id="_2-客户服务器和对等方式" tabindex="-1"><a class="header-anchor" href="#_2-客户服务器和对等方式"><span>2. 客户服务器和对等方式</span></a></h3><h4 id="_1-c-s方式" tabindex="-1"><a class="header-anchor" href="#_1-c-s方式"><span>1. <code>C/S</code>方式</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/N4aLVqmQ.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/lXMm63X5.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-p2p方式" tabindex="-1"><a class="header-anchor" href="#_2-p2p方式"><span>2. <code>P2P</code>方式</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/Vj0hHf1g.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/yAx2AVuq.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-dns" tabindex="-1"><a class="header-anchor" href="#_4-dns"><span>4. <code>DNS</code></span></a></h3><blockquote><p><strong>域名系统</strong>(<code>D</code>omain <code>N</code>ame <code>S</code>ystem,<code>DNS</code>)</p></blockquote><h4 id="_1-域名系统的作用" tabindex="-1"><a class="header-anchor" href="#_1-域名系统的作用"><span>1. 域名系统的作用</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/gBFxses1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/x1tUx2vm.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-因特网的域名结构" tabindex="-1"><a class="header-anchor" href="#_2-因特网的域名结构"><span>2. 因特网的域名结构</span></a></h4><blockquote><p>因特网采用<strong>层次树状结构的域名结构</strong></p></blockquote><h5 id="_1-域名规范" tabindex="-1"><a class="header-anchor" href="#_1-域名规范"><span>1. 域名规范</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/AoFgDCmt.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2-不同国家的域名" tabindex="-1"><a class="header-anchor" href="#_2-不同国家的域名"><span>2. 不同国家的域名</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/6WUpB9Oh.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_3-因特网的域名空间" tabindex="-1"><a class="header-anchor" href="#_3-因特网的域名空间"><span>3. 因特网的域名空间</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/rBS3t5ef.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-域名服务器" tabindex="-1"><a class="header-anchor" href="#_3-域名服务器"><span>3. 域名服务器</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/zLHYxWek.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-域名解析" tabindex="-1"><a class="header-anchor" href="#_4-域名解析"><span>4. 域名解析</span></a></h4><h5 id="_1-递归查询" tabindex="-1"><a class="header-anchor" href="#_1-递归查询"><span>1. 递归查询</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/FpBrwNqb.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2-迭代查询" tabindex="-1"><a class="header-anchor" href="#_2-迭代查询"><span>2. 迭代查询</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/nQ6sAl2O.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_3-高速缓存" tabindex="-1"><a class="header-anchor" href="#_3-高速缓存"><span>3. 高速缓存</span></a></h5><figure><img src="https://img2.imgtp.com/2024/04/04/pcwXhKnx.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img2.imgtp.com/2024/04/04/8BLUzbFZ.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-ftp" tabindex="-1"><a class="header-anchor" href="#_5-ftp"><span>5. <code>FTP</code></span></a></h3><blockquote><p><strong>文件传送协议</strong>(<code>F</code>ile <code>T</code>ransfer <code>P</code>rotocol,<code>FTP</code>)</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/83gndWFQ.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>基本工作原理</strong></p></blockquote><ol><li>主动模式</li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/zIeZrtFX.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>被动模式</li></ol><figure><img src="https://img2.imgtp.com/2024/04/04/Gm7FBUWz.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-电子邮件" tabindex="-1"><a class="header-anchor" href="#_6-电子邮件"><span>6. 电子邮件</span></a></h3><h4 id="_1-e-mail" tabindex="-1"><a class="header-anchor" href="#_1-e-mail"><span>1. <code>E-mail</code></span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/dRoMrTBk.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-电子邮件系统的组成" tabindex="-1"><a class="header-anchor" href="#_2-电子邮件系统的组成"><span>2. 电子邮件系统的组成</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/bK0zdDmM.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-邮件发送和接收过程" tabindex="-1"><a class="header-anchor" href="#_3-邮件发送和接收过程"><span>3. 邮件发送和接收过程</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/D9l7k3yg.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-smtp" tabindex="-1"><a class="header-anchor" href="#_4-smtp"><span>4. <code>SMTP</code></span></a></h4><blockquote><p>简单邮件传送协议(Simple Mail Transfer Protocol,<code>SMTP</code>)的基本工作过程</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/DMl68A1m.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_5-电子邮件的信息格式" tabindex="-1"><a class="header-anchor" href="#_5-电子邮件的信息格式"><span>5. 电子邮件的信息格式</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/mMKxiFqt.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_6-mime" tabindex="-1"><a class="header-anchor" href="#_6-mime"><span>6. <code>MIME</code></span></a></h4><blockquote><p><strong>多用途因特网邮件扩展</strong> (Multipurpose Internet Mail Extensions,<code>MIME</code>)</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/l34rdKif.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong><code>MIME</code>对邮件内容中的非ASCII字符转换成ASCII字符</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/GwUXUJEh.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_7-常用邮件读取协议" tabindex="-1"><a class="header-anchor" href="#_7-常用邮件读取协议"><span>7. 常用邮件读取协议</span></a></h4><blockquote><p><strong>邮局协议</strong>(Post Office Protocol,<code>POP</code>)</p><p><strong>因特网邮件访问协议</strong>(Internet Message Access Protocol,<code>IMAP</code>)</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/2e8zsrXX.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_8-基于万维网的电子邮件" tabindex="-1"><a class="header-anchor" href="#_8-基于万维网的电子邮件"><span>8. 基于万维网的电子邮件</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/qYWywPpx.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_7-万维网" tabindex="-1"><a class="header-anchor" href="#_7-万维网"><span>7. 万维网</span></a></h3><h4 id="_1-概述-5" tabindex="-1"><a class="header-anchor" href="#_1-概述-5"><span>1. 概述</span></a></h4><blockquote><ul><li><strong>万维网</strong>(World Wide Web,<code>WWW</code>)并非某种特殊的计算机网络。它是一个大规模的、联机式的信息储藏所,是运行在因特网上的一个分布式应用</li><li>万维网利用网页之间的超链接将不同网站的网页链接成一张逻辑上的信息网</li><li>万维网是欧洲粒子物理实验室的Tim Berners-Lee最初于1989年3月提出的</li></ul></blockquote><h4 id="_2-url" tabindex="-1"><a class="header-anchor" href="#_2-url"><span>2. <code>URL</code></span></a></h4><blockquote><p>统一资源定位符(<code>U</code>niform <code>R</code>esource <code>L</code>ocator)</p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/pQNu9Io6.png" alt="image-20231205094301978" tabindex="0" loading="lazy"><figcaption>image-20231205094301978</figcaption></figure><h4 id="_3-万维网文档" tabindex="-1"><a class="header-anchor" href="#_3-万维网文档"><span>3. 万维网文档</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/MEItS0Eb.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-http" tabindex="-1"><a class="header-anchor" href="#_4-http"><span>4. <code>HTTP</code></span></a></h4><h5 id="_1-概述-6" tabindex="-1"><a class="header-anchor" href="#_1-概述-6"><span>1. 概述</span></a></h5><blockquote><p><strong>超文本传输协议</strong><code>HTTP</code>(HyperText Transfer Protocol)</p><p>HTTP定义了<strong>浏览器(即万维网客户进程)怎样向万维网服务器请求万维网文档,以及万维网服务器怎样把万维网文档传送给浏览器</strong></p></blockquote><figure><img src="https://img2.imgtp.com/2024/04/04/MilI8kKE.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2-报文格式" tabindex="-1"><a class="header-anchor" href="#_2-报文格式"><span>2. 报文格式</span></a></h5><ul><li>请求报文格式</li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/lj3eU4LR.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>响应报文格式</li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/8CMJ8OdG.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_5-cookie" tabindex="-1"><a class="header-anchor" href="#_5-cookie"><span>5. <code>Cookie</code></span></a></h4><ul><li>早期的万维网应用非常简单,仅仅是用户查看存放在不同服务器上的各种静态的文档。因此HTTP被设计为一种无状态的协议。这样可以简化服务器的设计</li><li>现在,用户可以通过万维网进行各种复杂的应用,如网上购物、电子商务等。这些应用往往需要万维网服务器能够识别用户</li><li>Cookie提供了一种机制使得万维网服务器能够“记住”用户,而无需用户主动提供用户标识信息。也就是说,Cookie是一种对无状态的HTTP进行状态化的技术</li></ul><figure><img src="https://img2.imgtp.com/2024/04/04/jdF402Xf.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_6-万维网缓存与代理服务器" tabindex="-1"><a class="header-anchor" href="#_6-万维网缓存与代理服务器"><span>6. 万维网缓存与代理服务器</span></a></h4><figure><img src="https://img2.imgtp.com/2024/04/04/TH8yLUXM.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_7-思维导图和相关习题" tabindex="-1"><a class="header-anchor" href="#_7-思维导图和相关习题"><span>7. 思维导图和相关习题</span></a></h4><p><a href="https://www.kdocs.cn/view/l/cle5dxMBHZIH" target="_blank" rel="noopener noreferrer">第6章 应用层(思维导图)-1 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cabHsokbKiNO" target="_blank" rel="noopener noreferrer">第6章 应用层(思维导图)-2 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cv9vfzDopPvi" target="_blank" rel="noopener noreferrer">第6章 应用层 习题 (kdocs.cn)</a></p><hr><h2 id="计算机网络相关术语" tabindex="-1"><a class="header-anchor" href="#计算机网络相关术语"><span><em>计算机网络相关术语</em></span></a></h2><p><strong>ACK</strong> (Acknowledgement) 确认</p><p><strong>ADSL</strong> (Asymmetric Digital Subscriber Line) 非对称数字用户线</p><p><strong>AP</strong> (Access Point) 接入点</p><p><strong>AP</strong> (Application) 应用程序</p><p><strong>API</strong> (Application Programming Interface) 应用编程接口</p><p><strong>APNIC</strong> (Asia Pacific Network Information Centre) 亚太网络信息中心</p><p><strong>ARIN</strong> (American Registry for Internet Numbers) 美国因特网号码注册机构</p><p><strong>ARP (Address Resolution Protocol) 地址解析协议</strong></p><p><strong>ARPA</strong> (Advanced Research Projects Agency) 美国国防部远景研究规划局 (高级研究计划署)</p><p><strong>ARQ</strong> (Automatic Repeat-request) 自动重传请求</p><p><strong>AS</strong> (autonomous system) 自制系统</p><p><strong>BGP</strong> (Border Gateway Protocol ) 边界网关协议</p><p><strong>BOOTP</strong> (Bootstrap Protocol) 引导程序协议</p><p><strong>BSA</strong> (Basic Service Area) 基本服务区</p><p><strong>BT</strong> (Bit Torrent) 一种P2P程序</p><p><strong>CA</strong> (Certificate Authority) 认证中心</p><p><strong>CA</strong> (Collision Avoidance) 碰撞避免</p><p><strong>CATV</strong> ( Community Antenna Television) 有线电视</p><p><strong>CDM</strong> (Code Division Multiplexing) 码分复用</p><p><strong>CDMA</strong> (Code Division Multiple Access) 码分多址</p><p><strong>CGI</strong> (Common Gateway Interface) 通用网关接口</p><p><strong>CIDR</strong> (Classless Inter-Domain Routing) 无分类域间路由选择</p><p><strong>CRC</strong> (Cyclic Redundancy Check) 循环冗余校验</p><p><strong>CSMA/CD</strong> (Carrier Sense Multiple Access/Collision Detect) 载波监听 多址接入/碰撞检测</p><p><strong>CSMA/CA</strong> (Carrier Sense Multiple Access with Collision Avoidance) 载波监听多点接入/冲突避免</p><p><strong>CTS</strong> (Clear To Send) 允许发送</p><p><strong>DACS</strong> (Digital Access and Cross-connect System) 数字交接系统</p><p><strong>DHCP (Dynamic Host Configuration Protocol) 动态主机配置协议</strong></p><p><strong>DiffServ (Differentiated Services) 区分服务</strong></p><p><strong>DLCI</strong> (Data Link Connection Identifier) 数据链路连接标识符</p><p><strong>DMT</strong> (Discrete Multi-Tone) 离散多音 (调制)</p><p><strong>DNS</strong> (Domain Name System) 域名系统</p><p><strong>DoS</strong> (Denial of Service) 拒绝服务</p><p><strong>DS</strong> (Distribution System) 分配系统</p><p><strong>DSL</strong> (Digital Subscriber Line) 数字用户线</p><p><strong>DSLAM</strong> ( DSL Access Multiplexer) 数字用户线接入复用器</p><p><strong>DSSS</strong> (Direct Sequence Spread Spectrum) 直接序列扩频</p><p><strong>EFM</strong> (Ethernet in the First Mile ) 第一英里的以太网</p><p><strong>EFPHB</strong> (Expedited Forwarding Per-Hop Behavior) 迅速转发每跳行为</p><p><strong>EGP</strong> (Exterior Gateway Protocol) 外部网关协议</p><p><strong>EIA</strong> (Electronic Industries Association) 美国电子工业协会</p><p><strong>FCS</strong> (Frame Check Sequence) 帧检验序列</p><p><strong>FDDI</strong> (fiber-distributed data interface) 光纤分布式数据接口</p><p><strong>FDM</strong> (Frequency-division multiplexing) 频分复用</p><p><strong>FEC</strong> (Forwarding Equivalence Class) 转发等价类</p><p><strong>FFD</strong> (Full-Function Device) 全功能设备</p><p><strong>FHSS</strong> (Frequency-Hopping Spread Spectrum) 跳频扩频</p><p><strong>FIFO</strong> (First In First Out) 先进先出</p><p><strong>FQ</strong> (Fair Queuing) 公平排队</p><p><strong>FTP (File Transfer Protocol) 文件传输协议</strong></p><p><strong>GIF</strong> (Graphics System for Mobile) 全球移动通信系统,GSM体制</p><p><strong>HDLC</strong> ( High-Level Data Link Control) 高级数据链路控制</p><p><strong>HDSL</strong> (High-speed DSL) 高速数字用户线</p><p><strong>HSSG</strong> (High Speed Study Group) 高速研究组</p><p><strong>HTML</strong> (Hyper Text Markup Language) 超文本标记语言</p><p><strong>HTTP (Hyper Text Transfer Protocol) 超文本传送协议</strong></p><p><strong>IAB</strong> (Internet Architecture Board) 因特网体系结构委员</p><p><strong>IANA</strong> (Internet Assigned Numbers Authority) 因特网赋号管理局</p><p><strong>ICMP (Internet Control Message Protocol) 网际控制报文协议</strong></p><p><strong>IEEE</strong> (Institute of Electrical and Electronic Engineering) (美国) 电气和电子工程师学会</p><p><strong>IFS</strong> (Inter Frame Space) 帧间间隔</p><p><strong>IGMP</strong> (Internet Group Management Protocol) 网际组管理协议</p><p><strong>IGP</strong> (Interior Gateway Protocol) 内部网关协议</p><p><strong>IM</strong> (Instant Messaging) 及时传信</p><p><strong>IMAP ( Internet Message Access Protocol) 因特网报文存取协议</strong></p><p><strong>IntServ</strong> (Integrated Services) 综合服务</p><p><strong>IP (Internet Protocol) 网际协议</strong></p><p><strong>IPCP</strong> (IP Control Protocol) IP控制协议</p><p><strong>IPng</strong> (IP Next Protocol) 下一代IP</p><p><strong>IPsec</strong> (IP security) IP安全协议</p><p><strong>ISDN</strong> (Internet Services Digital Network) 综合业务数字网</p><p><strong>ISO</strong> (International Organization for Standardization ) 国际标准化组织</p><p><strong>ISOC</strong> (Internet Society) 因特网协会</p><p><strong>ISP</strong> (Internet Service Provider) 因特网服务提供者</p><p><strong>LAN</strong> (Local Area Network) 局域网</p><p><strong>LCP</strong> (Link Control Protocol) 链路控制协议</p><p><strong>LDP</strong> (Label Distribution Protocol) 标记分配协议</p><p><strong>LLC</strong>(Logical Link Control) 逻辑链路控制</p><p><strong>LSR</strong>(Label Switched Router) 标记交换路由器</p><p><strong>MAC</strong>(Medium Access Control) 媒体接入控制</p><p><strong>MACA</strong>(Multiple Access with Collision Avoidance)具有碰撞避免的多点接入</p><p><strong>MAN</strong>(Metropolitan Area Network) 城域网</p><p><strong>MBONE</strong>(Multicast Backbone On the InterNet) 多播主干网</p><p><strong>MCU</strong>(Multipoint Control Unit) 多点控制单元</p><p><strong>MD</strong>(Message Digest) 报文摘要</p><p><strong>MF</strong>(More Fragment) 还有分片</p><p><strong>MRU</strong>(Maximum Receive Unit) 最大接收单元</p><p><strong>MSS</strong>(Maximum Segment Size) 最长报文段</p><p><strong>MTU</strong>(Maximum Transfer Unit) 最大传送单元</p><p><strong>NAP</strong>(Network Access Point)　网络接入点</p><p><strong>NAT</strong>(Network Address Translation) 网络地址转换</p><p><strong>NAV</strong>(Network Allocation Vector) 网络分配向量</p><p><strong>NCP</strong>(Network Control Protocol) 网络控制协议</p><p><strong>NFS</strong>(Network File System) 网络文件系统</p><p><strong>NOC</strong>(Network Operations Center) 网络运行中心</p><p><strong>NSAP</strong>(Network Service Access Point) 网络层服务访问点</p><p><strong>NSF</strong>(National Service Foundation) (美国)国家科学基金会</p><p><strong>OFDM</strong>(Orthogonal Frequency Division Multiplexing) 正交频分复用</p><p><strong>OSI/RM</strong> (Open Systems Interconnection Reference Model) 开发系统互连基本参考模型</p><p><strong>OSPF(Open Shortest Path First) 开放最短通路优先</strong></p><p><strong>P2P</strong>(Peer-to-Peer) 对等方式</p><p><strong>PAN</strong>(Personal Area Network) 个人区域网</p><p><strong>PAP</strong>(Password Authentication Protocol) 口令鉴别协议</p><p><strong>PCA</strong>(Policy Certification Authority) 政策认证中心</p><p><strong>PCF</strong>(Point Coordination Function) 点协调功能</p><p><strong>PCM</strong>(Pulse Code Modulation) 脉码调制</p><p><strong>PEM</strong>(Privacy Enhanced Mail) 因特网的正式邮件加密标准</p><p><strong>PGP</strong>(Pretty Good Privacy) 一种电子邮件的机密标准</p><p><strong>PHB</strong>(Per-Hop Behavior) 每跳行为</p><p><strong>PIFS</strong>(Point Coordination Function IFS) 点协调功能帧间间隔</p><p><strong>PK</strong>(public key) 公钥,公开密钥</p><p><strong>PoP</strong>(Point of Presence) 汇接点</p><p><strong>POP</strong>(Post Office Protocol) 邮局协议</p><p><strong>PPP(Point-to-Point Protocol) 点对点协议</strong></p><p><strong>PPPoE</strong>(Point-to-Point Protocol over Ethernet) 以太网上的点对点协议</p><p><strong>QAM</strong>(Quadrature Amplitude Modulation) 正交幅度调制</p><p><strong>QoS</strong>(Quality of Service)　服务质量</p><p><strong>QPSK</strong>(Quarternary Phase Shift Keying)正交相移键控</p><p><strong>RARP</strong>(Reverse Address Resolution Protocol)逆地址解析协议</p><p><strong>RFD</strong>(Reduced-Function Device)精简功能设备</p><p><strong>RG</strong>(Research Group)研究组</p><p><strong>RIP(Routing Information Protocol)路由信息协议</strong></p><p><strong>RIPE</strong>(法文表示的European IP Network)欧洲的IP 网络</p><p><strong>RTP</strong>(Real-Time Transfer Protocol)实时传送协议</p><p><strong>RTSP</strong>(Real-Time Streaming Protocol)实时流式协议</p><p><strong>RTT</strong>(Round-Trip Time)往返时间</p><p><strong>SA</strong>(Security Association)安全关联</p><p><strong>SACK</strong>(Selective ACK)选择确认</p><p><strong>SAP</strong>(Service Access Point)服务访问点</p><p><strong>SCTP</strong>(Stream Control Transmission Protocol)流控制传输协议</p><p><strong>SDH</strong>(Synchronous Digital Hierarchy)同步数字系列</p><p><strong>SMI</strong>(Structure of Management Information)管理信息结构</p><p><strong>SMTP(Simple Mail Transfer Protocol)简单邮件传送协议</strong></p><p><strong>SNA</strong>(System Network Architecture)系统网络体系结构</p><p><strong>SNMP</strong>(Simple Network Management Protocol)简单网络管理协议</p><p><strong>SOH</strong>(Start Of Header)首部开始</p><p><strong>SONET</strong>(Synchronous Optical Network)同步光纤网</p><p><strong>STDM</strong>(Statistic TDM)统计时分复用</p><p><strong>STM</strong>(Synchronous Transfer Module)同步传递模块</p><p><strong>STS</strong>(Synchronous Transport Signal)同步传送信号</p><p><strong>TAG</strong>(TAG Switching)标记交换</p><p><strong>TCB</strong>(Transmission Control Block)传输控制程序块</p><p><strong>TCP(Transmission Control Protocol)传输控制协议</strong></p><p><strong>TDM</strong>(Time Division Multiplexing)时分复用</p><p><strong>TELNET</strong>(TELetype NETwork)电传机网络,一种因特网的应用程序</p><p><strong>TFTP</strong>(Trivial File Transfer Protocol)简单文件传送协议</p><p><strong>TIA</strong>(Telecommunications Industries Association)电信行业协会</p><p><strong>TLD</strong>(Top Level Domain)顶级域名</p><p><strong>TLI</strong>(Transport Layer Interface)运输层接口</p><p><strong>TLS</strong>(Transport Layer Security)运输层安全协议</p><p><strong>TLV</strong>(Type-Length-Value)类型-长度-值</p><p><strong>TPDU</strong>(Transport Protocol Data Unit)运输协议数据单元</p><p><strong>UDP(User Datagram Protocol)用户数据报协议</strong></p><p><strong>URL</strong>(Uniform Resource Locator)统一资源定位符</p><p><strong>UTP</strong>(Unshield Twisted Pair)无屏蔽双绞线</p><p><strong>UWB</strong>(Ultra-Wide Band)超宽带</p><p><strong>VC</strong>(Virtual Circuit)虚电路</p><p><strong>VDSL</strong>(Very high speed DSL)甚高数字用户线</p><p><strong>VLAN</strong>(Virtual LAN)虚拟局域网</p><p><strong>VPN</strong>(Virtual Private Network) 虚拟专用网</p><p><strong>WAN</strong>(Wide Area Network) 广域网</p><p><strong>WDM</strong>(Wavelength Division Multiplexing) 波分复用</p><p><strong>WG</strong>(Working Group)　工作组</p><p><strong>Ｗi-Fi</strong>(Wireless-Fidelity) 无线保真度(无限局域网的同义词)</p><p><strong>WLAN</strong>(Wireless Local Area Network) 无线局域网</p><p><strong>WMAN</strong>(Wireless Metrpolitan Area Network) 无线个城域网</p><p><strong>WPAN</strong>(wireless Personal Area Network) 无线个人区域网</p><p><strong>WSN</strong>(Wireless Sensor Network)　无线传感器网络</p><p><strong>WWW</strong>(World Wide Web) 万维网</p><h2 id="脚注" tabindex="-1"><a class="header-anchor" href="#脚注"><span><em>脚注</em></span></a></h2><p>[^ISP]:<code>internet service provider</code> 互联网服务提供商(电信、移动、联通) [^ACK]:ACK是TCP/IP协议中的一个重要标志,表示&quot;确认&quot;(Acknowledgement) [^ALOHA]:ALOHA是夏威夷人表示致意的问候语,这项研究计划的目的是要解决夏威夷群岛之间的通信问题</p><h2 id="待用图片" tabindex="-1"><a class="header-anchor" href="#待用图片"><span>待用图片</span></a></h2><p>ARP</p><figure><img src="https://img2.imgtp.com/2024/04/04/lsOMhMkC.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',315);function f(u,b){const o=g("font");return l(),e("div",null,[d,t(" ### 1.5 计网的主要性能指标 "),h,a("blockquote",null,[s(o,null,{default:r(()=>[t("快重传算法")]),_:1}),t("和快恢复算法(改进TCP性能,1990年Reno版本)")]),m,p(`stackedit_data:
eyJoaXN0b3J5IjpbNDUxNDg1MTY5XX0=
`)])}const P=n(c,[["render",f],["__file","计算机网络.html.vue"]]),_=JSON.parse('{"path":"/posts/study/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html","title":"计算机网络","lang":"zh-CN","frontmatter":{"title":"计算机网络","date":"2023-10-26T21:04:32.000Z","categories":"考研","tags":["计算机网络"],"cover":"https://img2.imgtp.com/2024/04/26/bIFqmrVZ.jpeg","sticky":9999,"description":"计算机网络 Typing SVG 1. 计算机网络概述 1.1 计网的组成 概念 简单定义：硬件(独立和连接)+软件(协议)+目的(共享和通信) 计算机网络就是以传输信息为基本目的,用通信线路和通信设备将多个计算机连接起来的计算机系统的集合 CopyQ.XjcbYsCopyQ.XjcbYs 分类 按网络覆盖范围进行分类 局域网(Local Area N...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/study/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html"}],["meta",{"property":"og:site_name","content":"平凡世界"}],["meta",{"property":"og:title","content":"计算机网络"}],["meta",{"property":"og:description","content":"计算机网络 Typing SVG 1. 计算机网络概述 1.1 计网的组成 概念 简单定义：硬件(独立和连接)+软件(协议)+目的(共享和通信) 计算机网络就是以传输信息为基本目的,用通信线路和通信设备将多个计算机连接起来的计算机系统的集合 CopyQ.XjcbYsCopyQ.XjcbYs 分类 按网络覆盖范围进行分类 局域网(Local Area N..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img2.imgtp.com/2024/04/26/bIFqmrVZ.jpeg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://img2.imgtp.com/2024/04/26/bIFqmrVZ.jpeg"}],["meta",{"name":"twitter:image:alt","content":"计算机网络"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:tag","content":"计算机网络"}],["meta",{"property":"article:published_time","content":"2023-10-26T21:04:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"计算机网络\\",\\"image\\":[\\"https://img2.imgtp.com/2024/04/06/8bp2LLjc.png\\",\\"https://img2.imgtp.com/2024/04/06/2ynHlxA5.png\\",\\"https://img2.imgtp.com/2024/04/04/sT1JdhEz.png\\",\\"https://img2.imgtp.com/2024/04/06/fIl3XYce.png\\",\\"https://img2.imgtp.com/2024/04/04/6OxFTe0R.png\\",\\"https://img2.imgtp.com/2024/04/04/7G4LaEvx.png\\",\\"https://img2.imgtp.com/2024/04/04/ZdVAQDaU.png\\",\\"https://img2.imgtp.com/2024/04/04/k6fK6Fth.png\\",\\"https://img2.imgtp.com/2024/04/04/aWnMqDAo.png\\",\\"https://img2.imgtp.com/2024/04/04/QxFzryw5.png\\",\\"https://img2.imgtp.com/2024/04/04/ZEjjP9Xe.png\\",\\"https://img2.imgtp.com/2024/04/04/YMD1YO49.png\\",\\"https://img2.imgtp.com/2024/04/04/apY4UiGK.png\\",\\"https://img2.imgtp.com/2024/04/04/DwZwhVmK.png\\",\\"https://img2.imgtp.com/2024/04/04/RxOxpZHA.png\\",\\"https://img2.imgtp.com/2024/04/04/ACtS6JxY.png\\",\\"https://img2.imgtp.com/2024/04/04/9MM2Ky5h.png\\",\\"https://img2.imgtp.com/2024/04/04/vAkWNODU.png\\",\\"https://img2.imgtp.com/2024/04/04/FXFhMUmi.png\\",\\"https://img2.imgtp.com/2024/04/04/lU9RuLRg.png\\",\\"https://img2.imgtp.com/2024/04/04/x9dHMH8w.png\\",\\"https://img2.imgtp.com/2024/04/04/ObkVayAR.png\\",\\"https://img2.imgtp.com/2024/04/04/SnlGXRdp.png\\",\\"https://img2.imgtp.com/2024/04/04/UAaTjOr4.png\\",\\"https://img2.imgtp.com/2024/04/04/CGI4fSr6.png\\",\\"https://img2.imgtp.com/2024/04/04/VE3yDe2c.png\\",\\"https://img2.imgtp.com/2024/04/04/CkEx8Sjz.png\\",\\"https://img2.imgtp.com/2024/04/04/9JCU8e1K.png\\",\\"https://img2.imgtp.com/2024/04/04/Ac4qbmev.png\\",\\"https://img2.imgtp.com/2024/04/09/ecaBaiM8.png\\",\\"https://img2.imgtp.com/2024/04/04/xbX4Jkku.png\\",\\"https://img2.imgtp.com/2024/04/10/T1nEmnkf.png\\",\\"https://img2.imgtp.com/2024/04/04/1iuGNypX.png\\",\\"https://img2.imgtp.com/2024/04/04/Wc2JZvjx.png\\",\\"https://img2.imgtp.com/2024/04/09/H8LbiLki.png\\",\\"https://img2.imgtp.com/2024/04/10/K7xxxKVB.png\\",\\"https://img2.imgtp.com/2024/04/04/LqnKVXNU.png\\",\\"https://img2.imgtp.com/2024/04/04/yzlERye7.png\\",\\"https://img2.imgtp.com/2024/04/04/iEc5Y2da.png\\",\\"https://img2.imgtp.com/2024/04/04/kspkPie2.png\\",\\"https://img2.imgtp.com/2024/04/12/au4gBf7Q.png\\",\\"https://img2.imgtp.com/2024/04/12/vlACsIY3.png\\",\\"https://img2.imgtp.com/2024/04/12/aYNBsfJM.png\\",\\"https://img2.imgtp.com/2024/04/27/QmxDzrEi.png\\",\\"https://img2.imgtp.com/2024/04/04/bl3iFcsr.png\\",\\"https://img2.imgtp.com/2024/04/04/9kptbtUg.png\\",\\"https://img2.imgtp.com/2024/04/04/kDCsZAbL.png\\",\\"https://img2.imgtp.com/2024/04/04/hB250oge.png\\",\\"https://img2.imgtp.com/2024/04/04/Ub9UUjBl.png\\",\\"https://img2.imgtp.com/2024/04/04/lTKxaOpK.png\\",\\"https://img2.imgtp.com/2024/04/13/qREqa6zW.png\\",\\"https://img2.imgtp.com/2024/04/20/YJFtawLv.png\\",\\"https://img2.imgtp.com/2024/04/13/9tcFG4HL.png\\",\\"https://img2.imgtp.com/2024/04/13/GqvfdyNg.png\\",\\"https://img2.imgtp.com/2024/04/13/3tBMGXBQ.png\\",\\"https://img2.imgtp.com/2024/04/04/wmz4xQ8u.png\\",\\"https://img2.imgtp.com/2024/04/04/jr9xumaq.png\\",\\"https://img2.imgtp.com/2024/04/17/RtFprUL8.png\\",\\"https://img2.imgtp.com/2024/04/20/gCZW2TEK.png\\",\\"https://img2.imgtp.com/2024/04/04/ED5B2K8l.png\\",\\"https://img2.imgtp.com/2024/04/04/pcp1O29f.png\\",\\"https://img2.imgtp.com/2024/04/04/TctW8FkX.png\\",\\"https://img2.imgtp.com/2024/04/04/vzrGh2uB.png\\",\\"https://img2.imgtp.com/2024/04/04/CT1N67Ir.png\\",\\"https://img2.imgtp.com/2024/04/20/meVU77Xe.png\\",\\"https://img2.imgtp.com/2024/04/20/ZLZC4JJA.png\\",\\"https://img2.imgtp.com/2024/04/20/reb0noqv.png\\",\\"https://img2.imgtp.com/2024/04/27/KUOQpahI.png\\",\\"https://img2.imgtp.com/2024/04/20/51qnZW5A.png\\",\\"https://img2.imgtp.com/2024/04/20/gJBMwlkd.png\\",\\"https://img2.imgtp.com/2024/04/04/68avB7T3.png\\",\\"https://img2.imgtp.com/2024/04/04/BNjnFpPt.png\\",\\"https://img2.imgtp.com/2024/04/04/D6d0SVGo.png\\",\\"https://img2.imgtp.com/2024/04/04/TfVVC54V.png\\",\\"https://img2.imgtp.com/2024/04/04/XkiEONEm.png\\",\\"https://img2.imgtp.com/2024/04/20/V6rN5owV.png\\",\\"https://img2.imgtp.com/2024/04/04/oEvbpogl.png\\",\\"https://img2.imgtp.com/2024/04/04/rpgHWbjQ.png\\",\\"https://img2.imgtp.com/2024/04/04/1bplHCdz.png\\",\\"https://img2.imgtp.com/2024/04/04/gvFkscEH.png\\",\\"https://img2.imgtp.com/2024/04/20/55lQDblM.png\\",\\"https://img2.imgtp.com/2024/04/20/IHx13ZvA.png\\",\\"https://img2.imgtp.com/2024/04/04/SAdkZQI5.png\\",\\"https://img2.imgtp.com/2024/04/04/cH6i5koT.png\\",\\"https://img2.imgtp.com/2024/04/20/2SaXyedY.png\\",\\"https://img2.imgtp.com/2024/04/04/F5cxDeoo.png\\",\\"https://img2.imgtp.com/2024/04/04/yW2dRsAm.png\\",\\"https://img2.imgtp.com/2024/04/04/LojBc6xi.png\\",\\"https://img2.imgtp.com/2024/04/27/Su0B0dOx.png\\",\\"https://img2.imgtp.com/2024/04/04/KOyDkDzX.png\\",\\"https://img2.imgtp.com/2024/04/04/xAa9ANsy.png\\",\\"https://img2.imgtp.com/2024/04/04/L8hoyynm.png\\",\\"https://img2.imgtp.com/2024/04/04/al00y50P.png\\",\\"https://img2.imgtp.com/2024/04/04/qnNZ6ucM.png\\",\\"https://img2.imgtp.com/2024/04/04/2qpJoDAK.png\\",\\"https://img2.imgtp.com/2024/04/04/Bn4bmj1L.png\\",\\"https://gitee.com/clibin/image-bed/raw/master/image-20231109221003126.png\\",\\"https://img2.imgtp.com/2024/04/04/ICGzRKfp.png\\",\\"https://img2.imgtp.com/2024/04/04/Q6Dzgeuh.png\\",\\"https://img2.imgtp.com/2024/04/04/X8Q0gotf.png\\",\\"https://img2.imgtp.com/2024/04/04/EeKgSYgV.png\\",\\"https://img2.imgtp.com/2024/04/04/5UrNfzxP.png\\",\\"https://img2.imgtp.com/2024/04/04/xmyVOhJp.png\\",\\"https://img2.imgtp.com/2024/04/04/OJVARiNr.png\\",\\"https://img2.imgtp.com/2024/04/04/iebrHMN6.png\\",\\"https://img2.imgtp.com/2024/04/04/x4VahylJ.png\\",\\"https://img2.imgtp.com/2024/04/04/jGM9Vzo8.png\\",\\"https://img2.imgtp.com/2024/04/04/pXcz3mVQ.png\\",\\"https://img2.imgtp.com/2024/04/04/D2rQouVM.png\\",\\"https://img2.imgtp.com/2024/04/04/HKhQUmCb.png\\",\\"https://img2.imgtp.com/2024/04/04/ioR9SdPa.png\\",\\"https://img2.imgtp.com/2024/04/04/8ufoDA1F.png\\",\\"https://img2.imgtp.com/2024/04/04/W4mjWAtQ.png\\",\\"https://img2.imgtp.com/2024/04/04/3DCPrqks.png\\",\\"https://img2.imgtp.com/2024/04/04/eYiMYvRR.png\\",\\"https://img2.imgtp.com/2024/04/04/v0EQTjNj.png\\",\\"https://img2.imgtp.com/2024/04/04/1mqfBCfM.png\\",\\"https://img2.imgtp.com/2024/04/04/MiKI7G2d.png\\",\\"https://img2.imgtp.com/2024/04/04/xkVEdIRO.png\\",\\"https://img2.imgtp.com/2024/04/04/qO3uhLLl.png\\",\\"https://img2.imgtp.com/2024/04/04/UDFqDvXR.png\\",\\"https://img2.imgtp.com/2024/04/04/HY1BAdru.png\\",\\"https://img2.imgtp.com/2024/04/04/yNzUzb2Y.png\\",\\"https://img2.imgtp.com/2024/04/04/AwbzanjU.png\\",\\"https://img2.imgtp.com/2024/04/04/xrIJQlOc.png\\",\\"https://img2.imgtp.com/2024/04/04/YjEPy8k0.png\\",\\"https://img2.imgtp.com/2024/04/04/fR0t7TXv.png\\",\\"https://img2.imgtp.com/2024/04/04/i29w36GO.png\\",\\"https://img2.imgtp.com/2024/04/04/or468nHg.png\\",\\"https://img2.imgtp.com/2024/04/04/J2XMeS5i.png\\",\\"https://img2.imgtp.com/2024/04/04/unn0sUEo.png\\",\\"https://img2.imgtp.com/2024/04/04/LViPPUEp.png\\",\\"https://img2.imgtp.com/2024/04/04/ubh3gJLp.png\\",\\"https://img2.imgtp.com/2024/04/04/80yAaiIl.png\\",\\"https://img2.imgtp.com/2024/04/04/G3BFV47H.png\\",\\"https://img2.imgtp.com/2024/04/04/xivu7oAV.png\\",\\"https://img2.imgtp.com/2024/04/04/N4aLVqmQ.png\\",\\"https://img2.imgtp.com/2024/04/04/lXMm63X5.png\\",\\"https://img2.imgtp.com/2024/04/04/Vj0hHf1g.png\\",\\"https://img2.imgtp.com/2024/04/04/yAx2AVuq.png\\",\\"https://img2.imgtp.com/2024/04/04/gBFxses1.png\\",\\"https://img2.imgtp.com/2024/04/04/x1tUx2vm.png\\",\\"https://img2.imgtp.com/2024/04/04/AoFgDCmt.png\\",\\"https://img2.imgtp.com/2024/04/04/6WUpB9Oh.png\\",\\"https://img2.imgtp.com/2024/04/04/rBS3t5ef.png\\",\\"https://img2.imgtp.com/2024/04/04/zLHYxWek.png\\",\\"https://img2.imgtp.com/2024/04/04/FpBrwNqb.png\\",\\"https://img2.imgtp.com/2024/04/04/nQ6sAl2O.png\\",\\"https://img2.imgtp.com/2024/04/04/pcwXhKnx.png\\",\\"https://img2.imgtp.com/2024/04/04/8BLUzbFZ.png\\",\\"https://img2.imgtp.com/2024/04/04/83gndWFQ.png\\",\\"https://img2.imgtp.com/2024/04/04/zIeZrtFX.png\\",\\"https://img2.imgtp.com/2024/04/04/Gm7FBUWz.png\\",\\"https://img2.imgtp.com/2024/04/04/dRoMrTBk.png\\",\\"https://img2.imgtp.com/2024/04/04/bK0zdDmM.png\\",\\"https://img2.imgtp.com/2024/04/04/D9l7k3yg.png\\",\\"https://img2.imgtp.com/2024/04/04/DMl68A1m.png\\",\\"https://img2.imgtp.com/2024/04/04/mMKxiFqt.png\\",\\"https://img2.imgtp.com/2024/04/04/l34rdKif.png\\",\\"https://img2.imgtp.com/2024/04/04/GwUXUJEh.png\\",\\"https://img2.imgtp.com/2024/04/04/2e8zsrXX.png\\",\\"https://img2.imgtp.com/2024/04/04/qYWywPpx.png\\",\\"https://img2.imgtp.com/2024/04/04/pQNu9Io6.png\\",\\"https://img2.imgtp.com/2024/04/04/MEItS0Eb.png\\",\\"https://img2.imgtp.com/2024/04/04/MilI8kKE.png\\",\\"https://img2.imgtp.com/2024/04/04/lj3eU4LR.png\\",\\"https://img2.imgtp.com/2024/04/04/8CMJ8OdG.png\\",\\"https://img2.imgtp.com/2024/04/04/jdF402Xf.png\\",\\"https://img2.imgtp.com/2024/04/04/TH8yLUXM.png\\",\\"https://img2.imgtp.com/2024/04/04/lsOMhMkC.png\\"],\\"datePublished\\":\\"2023-10-26T21:04:32.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 计算机网络概述","slug":"_1-计算机网络概述","link":"#_1-计算机网络概述","children":[{"level":3,"title":"1.1 计网的组成","slug":"_1-1-计网的组成","link":"#_1-1-计网的组成","children":[]},{"level":3,"title":"1.2 功能","slug":"_1-2-功能","link":"#_1-2-功能","children":[]},{"level":3,"title":"1.3 互联网","slug":"_1-3-互联网","link":"#_1-3-互联网","children":[]},{"level":3,"title":"1.4 电路、报文、分组交换","slug":"_1-4-电路、报文、分组交换","link":"#_1-4-电路、报文、分组交换","children":[]},{"level":3,"title":"1.6 计算机网络体系结构","slug":"_1-6-计算机网络体系结构","link":"#_1-6-计算机网络体系结构","children":[]},{"level":3,"title":"1.7 相关习题","slug":"_1-7-相关习题","link":"#_1-7-相关习题","children":[]},{"level":3,"title":"1.8 思维导图和习题","slug":"_1-8-思维导图和习题","link":"#_1-8-思维导图和习题","children":[]}]},{"level":2,"title":"2. 物理层","slug":"_2-物理层","link":"#_2-物理层","children":[{"level":3,"title":"2.1 基本概念","slug":"_2-1-基本概念","link":"#_2-1-基本概念","children":[]},{"level":3,"title":"2.2 数据通信的基础知识","slug":"_2-2-数据通信的基础知识","link":"#_2-2-数据通信的基础知识","children":[]},{"level":3,"title":"2.3 物理层传输介质","slug":"_2-3-物理层传输介质","link":"#_2-3-物理层传输介质","children":[]},{"level":3,"title":"2.5 物理层设备","slug":"_2-5-物理层设备","link":"#_2-5-物理层设备","children":[]},{"level":3,"title":"2.6 相关习题和资料","slug":"_2-6-相关习题和资料","link":"#_2-6-相关习题和资料","children":[]}]},{"level":2,"title":"3. 数据链路层","slug":"_3-数据链路层","link":"#_3-数据链路层","children":[{"level":3,"title":"3.1 相关概念","slug":"_3-1-相关概念","link":"#_3-1-相关概念","children":[]},{"level":3,"title":"3.2 封装成帧和透明传输","slug":"_3-2-封装成帧和透明传输","link":"#_3-2-封装成帧和透明传输","children":[]},{"level":3,"title":"3.3 差错控制","slug":"_3-3-差错控制","link":"#_3-3-差错控制","children":[]},{"level":3,"title":"3.4 流量控制","slug":"_3-4-流量控制","link":"#_3-4-流量控制","children":[]},{"level":3,"title":"3.5 介质访问控制","slug":"_3-5-介质访问控制","link":"#_3-5-介质访问控制","children":[]},{"level":3,"title":"3.6 局域网","slug":"_3-6-局域网","link":"#_3-6-局域网","children":[]},{"level":3,"title":"3.7 广域网","slug":"_3-7-广域网","link":"#_3-7-广域网","children":[]},{"level":3,"title":"3.8 链路层设备","slug":"_3-8-链路层设备","link":"#_3-8-链路层设备","children":[]},{"level":3,"title":"3.9 STP","slug":"_3-9-stp","link":"#_3-9-stp","children":[]},{"level":3,"title":"4. 思维导图和习题","slug":"_4-思维导图和习题","link":"#_4-思维导图和习题","children":[]}]},{"level":2,"title":"4. 网络层","slug":"_4-网络层","link":"#_4-网络层","children":[{"level":3,"title":"4.1 概述","slug":"_4-1-概述","link":"#_4-1-概述","children":[]},{"level":3,"title":"4.2 网络层提供的两种服务","slug":"_4-2-网络层提供的两种服务","link":"#_4-2-网络层提供的两种服务","children":[]},{"level":3,"title":"4.3 SDN","slug":"_4-3-sdn","link":"#_4-3-sdn","children":[]},{"level":3,"title":"4.4 IPv4","slug":"_4-4-ipv4","link":"#_4-4-ipv4","children":[]},{"level":3,"title":"4.5 IP编址方式","slug":"_4-5-ip编址方式","link":"#_4-5-ip编址方式","children":[]},{"level":3,"title":"4.6 IP数据报的发送和转发过程","slug":"_4-6-ip数据报的发送和转发过程","link":"#_4-6-ip数据报的发送和转发过程","children":[]},{"level":3,"title":"4.7 ARP","slug":"_4-7-arp","link":"#_4-7-arp","children":[]},{"level":3,"title":"4.8 静态路由配置","slug":"_4-8-静态路由配置","link":"#_4-8-静态路由配置","children":[]},{"level":3,"title":"4.9 DHCP","slug":"_4-9-dhcp","link":"#_4-9-dhcp","children":[]},{"level":3,"title":"4.10 路由选择协议","slug":"_4-10-路由选择协议","link":"#_4-10-路由选择协议","children":[]},{"level":3,"title":"4.11 RIP","slug":"_4-11-rip","link":"#_4-11-rip","children":[]},{"level":3,"title":"4.12 OSPF","slug":"_4-12-ospf","link":"#_4-12-ospf","children":[]},{"level":3,"title":"4.13  BGP","slug":"_4-13-bgp","link":"#_4-13-bgp","children":[]},{"level":3,"title":"4.14 ICMP","slug":"_4-14-icmp","link":"#_4-14-icmp","children":[]},{"level":3,"title":"4.15 VPN","slug":"_4-15-vpn","link":"#_4-15-vpn","children":[]},{"level":3,"title":"4.16 NAT","slug":"_4-16-nat","link":"#_4-16-nat","children":[]},{"level":3,"title":"5. 思维导图和习题","slug":"_5-思维导图和习题","link":"#_5-思维导图和习题","children":[]}]},{"level":2,"title":"5. 运输层","slug":"_5-运输层","link":"#_5-运输层","children":[{"level":3,"title":"1. 概述","slug":"_1-概述-2","link":"#_1-概述-2","children":[]},{"level":3,"title":"2. 端口号,复用和分用","slug":"_2-端口号-复用和分用","link":"#_2-端口号-复用和分用","children":[]},{"level":3,"title":"3.  TCP和UDP的对比","slug":"_3-tcp和udp的对比","link":"#_3-tcp和udp的对比","children":[]},{"level":3,"title":"4. TCP的流量控制","slug":"_4-tcp的流量控制","link":"#_4-tcp的流量控制","children":[]},{"level":3,"title":"5. TCP的拥塞(se)控制","slug":"_5-tcp的拥塞-se-控制","link":"#_5-tcp的拥塞-se-控制","children":[]},{"level":3,"title":"6. TCP超时重传时间的选择","slug":"_6-tcp超时重传时间的选择","link":"#_6-tcp超时重传时间的选择","children":[]},{"level":3,"title":"7.TCP可靠传输的实现","slug":"_7-tcp可靠传输的实现","link":"#_7-tcp可靠传输的实现","children":[]},{"level":3,"title":"8. TCP的运输连接管理","slug":"_8-tcp的运输连接管理","link":"#_8-tcp的运输连接管理","children":[]},{"level":3,"title":"9. TCP报文段首部格式","slug":"_9-tcp报文段首部格式","link":"#_9-tcp报文段首部格式","children":[]},{"level":3,"title":"10. 思维导图和习题","slug":"_10-思维导图和习题","link":"#_10-思维导图和习题","children":[]}]},{"level":2,"title":"6. 应用层","slug":"_6-应用层","link":"#_6-应用层","children":[{"level":3,"title":"1. 概述","slug":"_1-概述-4","link":"#_1-概述-4","children":[]},{"level":3,"title":"2. 客户服务器和对等方式","slug":"_2-客户服务器和对等方式","link":"#_2-客户服务器和对等方式","children":[]},{"level":3,"title":"4. DNS","slug":"_4-dns","link":"#_4-dns","children":[]},{"level":3,"title":"5. FTP","slug":"_5-ftp","link":"#_5-ftp","children":[]},{"level":3,"title":"6. 电子邮件","slug":"_6-电子邮件","link":"#_6-电子邮件","children":[]},{"level":3,"title":"7. 万维网","slug":"_7-万维网","link":"#_7-万维网","children":[]}]},{"level":2,"title":"计算机网络相关术语","slug":"计算机网络相关术语","link":"#计算机网络相关术语","children":[]},{"level":2,"title":"脚注","slug":"脚注","link":"#脚注","children":[]},{"level":2,"title":"待用图片","slug":"待用图片","link":"#待用图片","children":[]}],"git":{},"readingTime":{"minutes":74.8,"words":22440},"filePathRelative":"posts/study/计算机网络.md","localizedDate":"2023年10月27日","excerpt":"\\n<p><a href=\\"https://git.io/typing-svg\\"><img src=\\"https://readme-typing-svg.demolab.com?font=Cascadia+Code&amp;weight=900&amp;size=60&amp;duration=2000&amp;pause=1000&amp;center=true&amp;vCenter=true&amp;random=false&amp;width=1000&amp;height=100&amp;lines=Computer+Network+\\" alt=\\"Typing SVG\\"></a></p>","autoDesc":true}');export{P as comp,_ as data};
