import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as e,d as t}from"./app-CqLZW6kj.js";const r={},p=t('<h1 id="计算机网络" tabindex="-1"><a class="header-anchor" href="#计算机网络"><span>计算机网络</span></a></h1><h2 id="_1-计算机网络概述" tabindex="-1"><a class="header-anchor" href="#_1-计算机网络概述"><span>1. 计算机网络概述</span></a></h2><h3 id="_1-1-作用" tabindex="-1"><a class="header-anchor" href="#_1-1-作用"><span>1.1 作用</span></a></h3><blockquote><p>计算机网络在信息时代中的作用：21世纪是以数字化、网络化、信息化为重要特征的信息时代，作为信息的最大载体和传输媒介，网络已成为这个信息时代的核心基础</p></blockquote><h3 id="_1-2-定义与分类" tabindex="-1"><a class="header-anchor" href="#_1-2-定义与分类"><span>1.2 定义与分类</span></a></h3><h4 id="_1-2-1-定义" tabindex="-1"><a class="header-anchor" href="#_1-2-1-定义"><span>1.2.1 定义</span></a></h4><p>简单定义：<mark>硬件</mark>（独立和连接）+<mark>软件</mark>（协议）+<mark>目的</mark>（共享和通信）</p><blockquote><p><strong>计算机网络就是以传输信息为基本目的，用通信线路和通信设备将多个计算机连接起来的计算机系统的集合</strong></p></blockquote><h4 id="_1-2-2-分类" tabindex="-1"><a class="header-anchor" href="#_1-2-2-分类"><span>1.2.2 分类</span></a></h4><blockquote><p>按网络覆盖范围进行分类</p></blockquote><ol><li>局域网（Local Area Network,<code>LAN</code>，一个实验室、一幢楼、一个校园）</li><li>城域网（Metropolitan Area Network,<code>MAN</code>，几个街区甚至整个城市，5-50 km）</li><li>广域网（Wide Area Network,<code>WAN</code>，覆盖一个国家或地区甚至几个洲，也称为<strong>远程网</strong>）</li><li>个人区域网（Personal Area Network,<code>PAN</code>，10 m以内）</li></ol><blockquote><p>按网络的使用者进行分类</p></blockquote><ol><li>公用网（所有愿意缴纳费用的人都能使用）</li><li>专用网（专门为本单位的特殊业务工作建造的，例如，军队、铁路、电力等系统）</li></ol><img src="https://clb.pages.dev/img/pics/CopyQ.TZiqFW.png" alt="计算机网络分类" title="计算机网络的分类"><h3 id="_1-3-互联网概述" tabindex="-1"><a class="header-anchor" href="#_1-3-互联网概述"><span>1.3 互联网概述</span></a></h3><h4 id="_1-3-1-网络的网络" tabindex="-1"><a class="header-anchor" href="#_1-3-1-网络的网络"><span>1.3.1 网络的网络</span></a></h4><ol><li>网络</li></ol><blockquote><p><mark>网络</mark>由<mark>若干节点</mark>（Node）和连接这些节点的<mark>链路</mark>(Link)组成</p><p>节点：可以是计算机、集线器、交换机、路由器</p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231024224626941.png" title="网络" style="zoom:80%;"><ol start="2"><li><mark>互连网络</mark>（internet，通用名词，注意和 Internet互联网 区分）</li></ol><blockquote><p>将网络用路由器连接起来就成了互连网络，因此互连网络是<mark>网络的网络</mark></p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231024224534363.png" title="互连网络就是网络的网络" style="zoom:80%;"><blockquote><p>总结：<mark><strong>网络把许多计算机连接在一起，而互联网络则把许多网络连接在一起</strong></mark></p></blockquote><ol start="3"><li><mark>互联网</mark>（Internet，也称 因特网）</li></ol><blockquote><p>当前全球最大的、开放的、由众多网络相互连接而成的特定计算机网络，<mark>采用TCP/IP协议作为通信规则</mark>，前身是美国的阿帕网（<mark>ARPANet</mark>）</p></blockquote><ol><li><mark>边缘部分</mark>：用户直接使用的</li><li><mark>核心部分</mark>：为边缘部分提供服务的</li></ol><img src="https://clb.pages.dev/img/pics/image-20231024224804841.png" title="woc,O" style="zoom:67%;"><h4 id="_1-3-2-互联网结构发展的三个阶段" tabindex="-1"><a class="header-anchor" href="#_1-3-2-互联网结构发展的三个阶段"><span>1.3.2 互联网结构发展的三个阶段</span></a></h4><ol><li>第一阶段：从单个网络ARPANET向互连网络发展</li><li>第二阶段：逐步建成三级结构的互联网</li><li>第三阶段：逐渐形成多层次的ISP结构的互联网</li></ol><img src="https://clb.pages.dev/img/pics/image-20231024225143618.png" title="ISP结构的互联网" style="zoom:67%;"><h3 id="_1-4-电路交换和分组交换" tabindex="-1"><a class="header-anchor" href="#_1-4-电路交换和分组交换"><span>1.4 电路交换和分组交换</span></a></h3><h4 id="_1-4-1-电路交换" tabindex="-1"><a class="header-anchor" href="#_1-4-1-电路交换"><span>1.4.1 电路交换</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231024225354835.png" alt="电路交换" tabindex="0" loading="lazy"><figcaption>电路交换</figcaption></figure><blockquote><p>这种必须经过</p><ol><li><p><code>建立连接</code>（分配通信资源）</p></li><li><p><code>通信</code>（一直占用通信资源）</p></li><li><p><code>释放连接</code>（归还通信资源）</p></li></ol><p>三个步骤的交换方式称为<mark>电路交换</mark></p><p>电路交换：电路交换是指在通信开始之前，建立一条专用的物理连接，然后在通信过程中一直占用这条连接，直到通信结束。在这个过程中，数据被分成固定大小的数据包，每个数据包都被分配一个专用的物理通路。</p><p>优点：传输<mark>速度快</mark></p><p>缺点：连接建立需要时间，且连接一旦建立就无法被其他通信使用（<mark>效率很低</mark>）</p></blockquote><h4 id="_1-4-2-报文交换" tabindex="-1"><a class="header-anchor" href="#_1-4-2-报文交换"><span>1.4.2 报文交换</span></a></h4><blockquote><p>整个报文传送到相邻结点，全部存储下来后查找转发表，转发到下一个结点。</p></blockquote><h4 id="_1-4-3-分组交换" tabindex="-1"><a class="header-anchor" href="#_1-4-3-分组交换"><span>1.4.3 分组交换</span></a></h4><img src="https://clb.pages.dev/img/pics/image-20231024225503293.png" alt="分组交换" style="zoom:80%;"><blockquote><p>我们通常把要发送的整块数据称为一个<mark>报文</mark>（Message）</p><p>发送报文之前，先将报文划分为一个个更小的等长的数据段，在数据段前面加上<mark>首部</mark>（又称为<mark>包头</mark>）就构成了<mark>分组</mark>（又称为<mark>包</mark>）</p></blockquote><blockquote><p>分组交换：分组交换是指<mark>将报文分成较小的数据包</mark>，每个数据包都带有<strong>目标地址</strong>和<strong>源地址</strong>等信息，然后通过网络传输。在传输过程中，每个数据包都独立传输，可以通过不同的路径到达目的地，由于每个分组交换机都是先存储下来再转发出去，因此该方法被称为<span style="color:rgb(255, 107, 107);font-weight:bold;">存储转发</span>方式</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/CopyQ.hVntPh.png" alt="交换方式对比" tabindex="0" loading="lazy"><figcaption>交换方式对比</figcaption></figure><h3 id="_1-5-计算机网络的主要性能指标" tabindex="-1"><a class="header-anchor" href="#_1-5-计算机网络的主要性能指标"><span>1.5 计算机网络的主要性能指标</span></a></h3><h4 id="_1-速率" tabindex="-1"><a class="header-anchor" href="#_1-速率"><span>1. 速率</span></a></h4><blockquote><ol><li><p><mark>数据的传输速率</mark>，也称为<mark>数据率</mark>、<mark>比特率</mark> 1字节(byte)=8比特(bit)</p></li><li><p>单位是 <code>bit/s 或 bps</code> ,比特是数据量的单位，是一个<mark>二进制数字</mark>(0或1)</p></li><li><p>一般来说，表示速率时 $$ k = 10^{3} $$ 表示数据时 $$ k = 2^{10} $$</p></li></ol></blockquote><img src="https://clb.pages.dev/img/pics/CopyQ.aGEcPX.png" alt="速率"><h4 id="_2-带宽" tabindex="-1"><a class="header-anchor" href="#_2-带宽"><span>2. 带宽</span></a></h4><ol><li><p>带宽本来是指某个<mark>信号具有的频带宽度</mark>，表示通信线路允许通过的信号频带范围,单位为赫兹</p></li><li><p>计算机网络中，带宽表示网络某通道传输能力，即<mark>最高数据率</mark>,单位为<mark>比特每秒</mark>（bit/s）</p><img src="https://clb.pages.dev/img/pics/CopyQ.UEfjHW.png" alt="带宽"></li></ol><h4 id="_3-吞吐量" tabindex="-1"><a class="header-anchor" href="#_3-吞吐量"><span>3. 吞吐量</span></a></h4><blockquote><p>也称为<mark>吞吐率</mark>，表示单位时间内通过某个网络（或信道、接口）的数据量</p></blockquote><h4 id="_4-时延" tabindex="-1"><a class="header-anchor" href="#_4-时延"><span>4.时延</span></a></h4><blockquote><p>时延是指<mark>数据从网络的一端传送到另外一端所需要的时间</mark>，也称为<mark>延迟</mark>或<mark>迟延</mark></p><p>网络中的时延通常由以下几个不同的部分组成：</p><ol><li><p><mark>发送时延：主机或路由器将整个分组的所有比特发送到通信线路上所需要的时间</mark> $$ 发送时延 = \\frac{分组长度}{发送速率} $$</p></li><li><p><mark>传播时延：是电磁波在信道中传播一定距离所花费的时间</mark> $$ 传播时延 = \\frac{信道长度}{电磁波在信道上的传播速度} $$</p></li><li><p>处理时延：主机或路由器在收到分组时处理分组花费的时间（一般不方便计算）</p></li></ol></blockquote><img src="https://clb.pages.dev/img/pics/CopyQ.hzERwE.png" alt="时延"><figure><img src="https://clb.pages.dev/img/pics/202310261920366.png" alt="时延" tabindex="0" loading="lazy"><figcaption>时延</figcaption></figure><h4 id="_5-时延带宽积-往返时间-利用率-丢包率" tabindex="-1"><a class="header-anchor" href="#_5-时延带宽积-往返时间-利用率-丢包率"><span>5. 时延带宽积 往返时间 利用率 丢包率</span></a></h4><img src="https://clb.pages.dev/img/pics/CopyQ.XBpSgv.png" alt="" style=""><h3 id="_1-6-计算机网络体系结构" tabindex="-1"><a class="header-anchor" href="#_1-6-计算机网络体系结构"><span>1.6 计算机网络体系结构</span></a></h3><h4 id="_1-6-1-网络协议" tabindex="-1"><a class="header-anchor" href="#_1-6-1-网络协议"><span>1.6.1 网络协议</span></a></h4><p>网络协议主要由以下三要素组成：</p><ol><li><mark>语法：数据与控制信息的结构或格式</mark>（例如，地址字段多长以及它在分组的什么位置）</li><li><mark>语义：各个控制信息的具体含义</mark>（需要发出何种控制信息、完成何种动作及做出何种响应）</li><li><mark>同步：事件实现的顺序和时间的详细说明</mark>（数据何时发出以及以什么速率发出）</li></ol><h4 id="_1-6-2-分层体系结构" tabindex="-1"><a class="header-anchor" href="#_1-6-2-分层体系结构"><span>1.6.2 分层体系结构</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/CopyQ.uQqXEZ.png" alt="常见的计算机网络分层体系结构" tabindex="0" loading="lazy"><figcaption>常见的计算机网络分层体系结构</figcaption></figure><h4 id="_1-6-3-原理体系结构" tabindex="-1"><a class="header-anchor" href="#_1-6-3-原理体系结构"><span>1.6.3 原理体系结构</span></a></h4><blockquote><p>我们学习的是具有五层协议的原理体系结构</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/CopyQ.EvnJQE.png" alt="原理体系结构" tabindex="0" loading="lazy"><figcaption>原理体系结构</figcaption></figure><h4 id="_1-6-4-实体、协议和服务" tabindex="-1"><a class="header-anchor" href="#_1-6-4-实体、协议和服务"><span>1.6.4 实体、协议和服务</span></a></h4><blockquote><p><strong><mark>协议是水平的,服务是垂直的</mark></strong></p><ol><li><mark>实体</mark>：任何可发送或接收信息的硬件或软件进程</li><li><mark>协议</mark>：<mark><strong>控制两个或多个对等实体之间通信的规则的集合</strong></mark></li><li><mark><strong>下层通过层级接口向上层提供服务，下面的协议对上面的实体是”透明“的</strong></mark></li><li><mark>透明：某个实际存在的事物看起来好像不存在一样</mark></li></ol></blockquote><figure><img src="https://clb.pages.dev/img/pics/CopyQ.ZGZDeQ.png" alt="实体、协议和服务" tabindex="0" loading="lazy"><figcaption>实体、协议和服务</figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/62913fa9e4b0c71a3a81421f.jpeg" alt="TCP/IP参考模型中的协议" tabindex="0" loading="lazy"><figcaption>TCP/IP参考模型中的协议</figcaption></figure><h3 id="_1-7-相关习题" tabindex="-1"><a class="header-anchor" href="#_1-7-相关习题"><span>1.7 相关习题</span></a></h3><figure><img src="https://clb.pages.dev/img/pics/202310261924745.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/202310261925145.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-8-思维导图和习题" tabindex="-1"><a class="header-anchor" href="#_1-8-思维导图和习题"><span>1.8 思维导图和习题</span></a></h3><ol><li><a href="https://www.kdocs.cn/view/l/cqzI95zH7t6v" target="_blank" rel="noopener noreferrer">第1章 概述（思维导图）</a></li><li><a href="https://www.kdocs.cn/view/l/cmCC5Updax17" target="_blank" rel="noopener noreferrer">第1章 概述 习题 (kdocs.cn)</a></li></ol><hr><h2 id="_2-物理层" tabindex="-1"><a class="header-anchor" href="#_2-物理层"><span>2. 物理层</span></a></h2><blockquote><p><mark><strong>任务：怎样在连接各种计算机的传输媒体上传输数据比特流</strong></mark>（使数据链路层感觉不到各种传输媒体之间的差异，只需要使用物理层服务就能传输比特流，不必关心具体怎么实现）</p></blockquote><h3 id="_2-1-物理层的基本概念" tabindex="-1"><a class="header-anchor" href="#_2-1-物理层的基本概念"><span>2.1 物理层的基本概念</span></a></h3><figure><img src="https://clb.pages.dev/img/pics/202310261930116.png" alt="物理层的基本概念" tabindex="0" loading="lazy"><figcaption>物理层的基本概念</figcaption></figure><h3 id="_2-2-数据通信的基础知识" tabindex="-1"><a class="header-anchor" href="#_2-2-数据通信的基础知识"><span>2.2 数据通信的基础知识</span></a></h3><h4 id="_2-2-1-数据通信的基础知识" tabindex="-1"><a class="header-anchor" href="#_2-2-1-数据通信的基础知识"><span>2.2.1 数据通信的基础知识</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231228112913963.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-2-2-编码与调制" tabindex="-1"><a class="header-anchor" href="#_2-2-2-编码与调制"><span>2.2.2 编码与调制</span></a></h4><ol><li><p>定义</p><ul><li><p><mark>模拟信号</mark>：消息的参数的取值是连续的</p></li><li><p><mark>数字信号</mark>：消息的参数的取值是离散的</p></li><li><p><mark>编码</mark>：将数字数据转换成数字信号的过程</p></li><li><p><mark>调制</mark>：将数字数据转换成模拟信号的过程</p></li></ul></li></ol><figure><img src="https://clb.pages.dev/img/pics/202310262020595.png" alt="编码与调制" tabindex="0" loading="lazy"><figcaption>编码与调制</figcaption></figure><ol start="2"><li>常用编码方式</li></ol><figure><img src="https://clb.pages.dev/img/pics/202310262040597.png" alt="常用编码方式" tabindex="0" loading="lazy"><figcaption>常用编码方式</figcaption></figure><ol start="3"><li>基本的调制方法</li></ol><figure><img src="https://clb.pages.dev/img/pics/202310262047837.png" alt="基本的调制方法" tabindex="0" loading="lazy"><figcaption>基本的调制方法</figcaption></figure><ol start="4"><li><strong><mark>相位调制</mark></strong></li></ol><blockquote><p><strong>8相位调制</strong>表示8种状态，只需要<strong>3个比特</strong>(二进制，$2^3=8$)即可,所以<strong>1个码元可以承载3个比特</strong>，<strong><mark>数据传输率 = 3*波特率</mark></strong>，以此类推</p></blockquote><h4 id="_2-2-3-信道的极限容量" tabindex="-1"><a class="header-anchor" href="#_2-2-3-信道的极限容量"><span>2.2.3 信道的极限容量</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/202310262054137.png" alt="信号失真" tabindex="0" loading="lazy"><figcaption>信号失真</figcaption></figure><blockquote><p><mark><strong>奈式准则</strong></mark></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/202310262059898.png" alt="奈式准则" tabindex="0" loading="lazy"><figcaption>奈式准则</figcaption></figure><blockquote><p><strong><mark>香农公式</mark></strong> $$ c = W \\cdot \\log_{2}(1 + \\frac{S}{N}) $$ <mark>知道信噪比(dB)求S/N，假设信噪比为30dB</mark></p><ol><li>$$30 = 10 \\cdot \\log_{10}(\\frac{S}{N})$$</li><li>$$3 = \\log_{10}(\\frac{S}{N})$$</li><li>$$\\frac{S}{N} = 10^3$$</li></ol></blockquote><figure><img src="https://clb.pages.dev/img/pics/202310262102013.png" alt="香农公式" tabindex="0" loading="lazy"><figcaption>香农公式</figcaption></figure><blockquote><ol><li>在信道带宽一定的情况下，根据奈氏准则和香农公式，要想<mark>提高信息的传输速率</mark>就必须采用<mark>多元制</mark>（更好的调制方法）和努力<mark>提高信道中的信噪比</mark></li><li>自从香农公式发表后，各种新的信号处理和调制方法就不断出现，其目的都是为了尽可能地<mark>接近香农公式给出的传输速率极限</mark></li></ol></blockquote><h4 id="_2-2-4-传输方式" tabindex="-1"><a class="header-anchor" href="#_2-2-4-传输方式"><span>2.2.4 传输方式</span></a></h4><ol><li>并行传输和串行传输</li></ol><blockquote><ul><li>并行传输速度是串行传输的<mark>n倍</mark>，但是<span color="rgb(1,2,3)">成本高</span><mark>所以长距离传输使用串行传输</mark></li><li>远距离传输使用串行传输，计算机内部使用并行传输</li></ul></blockquote><figure><img src="https://clb.pages.dev/img/pics/202310262005937.png" alt="并行传输和串行传输" tabindex="0" loading="lazy"><figcaption>并行传输和串行传输</figcaption></figure><ol start="2"><li>异步传输和同步传输</li></ol><blockquote><p>异步传输<mark>字节之间异步</mark>，但是要添加<mark>开始码</mark>和<mark>停止码</mark>作为引导</p></blockquote><img src="https://clb.pages.dev/img/pics/202310262010168.png" alt="异步传输和同步传输"><ol start="3"><li>单工、半双工和全双工通信</li></ol><figure><img src="https://clb.pages.dev/img/pics/202310262014965.png" alt="单工、半双工和全双工通信" tabindex="0" loading="lazy"><figcaption>单工、半双工和全双工通信</figcaption></figure><h3 id="_2-3-物理层下的传输媒体-了解即可" tabindex="-1"><a class="header-anchor" href="#_2-3-物理层下的传输媒体-了解即可"><span>2.3 物理层下的传输媒体（了解即可）</span></a></h3><h4 id="_2-3-1-导引型传输媒体" tabindex="-1"><a class="header-anchor" href="#_2-3-1-导引型传输媒体"><span>2.3.1 导引型传输媒体</span></a></h4><ol><li><strong>同轴电缆</strong></li></ol><figure><img src="https://clb.pages.dev/img/pics/202310261938546.png" alt="同轴电缆" tabindex="0" loading="lazy"><figcaption>同轴电缆</figcaption></figure><ol start="2"><li><strong>双绞线</strong></li></ol><figure><img src="https://clb.pages.dev/img/pics/202310261942966.png" alt="双绞线" tabindex="0" loading="lazy"><figcaption>双绞线</figcaption></figure><ol start="3"><li><strong>光纤</strong></li></ol><figure><img src="https://clb.pages.dev/img/pics/202310261946552.png" alt="光纤" tabindex="0" loading="lazy"><figcaption>光纤</figcaption></figure><h4 id="_2-3-2-非导引型传输媒体" tabindex="-1"><a class="header-anchor" href="#_2-3-2-非导引型传输媒体"><span>2.3.2 非导引型传输媒体</span></a></h4><ol><li><strong>微波</strong></li></ol><figure><img src="https://clb.pages.dev/img/pics/202310261954118.png" alt="微波" tabindex="0" loading="lazy"><figcaption>微波</figcaption></figure><ol start="2"><li>其他无线电波</li><li>红外线和可见光</li></ol><h3 id="_2-4-信道复用技术" tabindex="-1"><a class="header-anchor" href="#_2-4-信道复用技术"><span>2.4 信道复用技术</span></a></h3><blockquote><p>复用：当网络中传输媒体的传输容量大于多条单一信道传输的总通信量时，可利用复用技术<mark>在一条物理线路上建立多条通信信道</mark>来共享传输媒体的带宽。</p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231027222210209.png" alt="信道复用" style="zoom:80%;"><h4 id="_2-4-1-频分复用" tabindex="-1"><a class="header-anchor" href="#_2-4-1-频分复用"><span>2.4.1 频分复用</span></a></h4><blockquote><p><strong>频分复用</strong>(Frequency-division multiplexing,<code>FDM</code>):<mark>将多路基带信号调制到不同频率载波</mark>上，再进行<mark>叠加形成一个复合信号</mark>,接收端的分用器通过滤波将各路信号滤出，将合成的复合信号恢复成原始的多路信号。</p></blockquote><img src="https://clb.pages.dev/img/pics/202310272254062.png" style="zoom:67%;"><h4 id="_2-4-2-时分复用" tabindex="-1"><a class="header-anchor" href="#_2-4-2-时分复用"><span>2.4.2 时分复用</span></a></h4><blockquote><p>时分复用(Time Division Multiplexing,<code>TDM</code>)：将传输线路的带宽资源<mark>按时间轮流分配</mark>给不同的用户，用户只能在分配的时间里使用线路传输数据（类似于<mark>时间片轮转</mark>）</p><p>存在的不足：使用时分复用系统传送计算机数据时，由于计算机数据的突发性质，用户对分配到的子信道的利用率一般不高。（如果A暂时不使用信道，其他用户正常使用，时分复用还是会给A分配时间，而且这段时间内其他用户也不能使用）</p></blockquote><img src="https://clb.pages.dev/img/pics/202310272254453.png" alt="时分复用" style="zoom:67%;"><blockquote><p>统计时分复用(statistical time division multiplexing,<code>STDM</code>):<mark>动态地按需分配</mark>共用信道的时隙，只将需要传送数据的终端接入共用信道，可以提高信道的利用率</p><p>帧与帧之间留有空隙用来存储用户的地址信息，因为不是固定的分配给某个用户</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/202310281701023.png" alt="STDM" tabindex="0" loading="lazy"><figcaption>STDM</figcaption></figure><h4 id="_2-4-3-波分复用" tabindex="-1"><a class="header-anchor" href="#_2-4-3-波分复用"><span>2.4.3 波分复用</span></a></h4><blockquote><p>波分复用(Wavelength Division Multiplexing,<code>WDM</code>)就是<mark>光的频分复用</mark>。使用一根光纤来同时传输多个光载波信号。现在已能做到在一根光纤上复用几十路或更多路数的光载波信号。</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/202310282020333.png" alt="波分复用" tabindex="0" loading="lazy"><figcaption>波分复用</figcaption></figure><h4 id="_2-4-3-码分复用" tabindex="-1"><a class="header-anchor" href="#_2-4-3-码分复用"><span>2.4.3 码分复用</span></a></h4><blockquote><ul><li><p>码分复用(Code Division Multiplexing,<code>CDM</code>)一种共享信道的方法。</p></li><li><p>由于该技术主要用于无线多址接入（本书中我们不严格区分多址与复用）人们更常用的名词是码分多址CDMA(Code Division Multiple Access)。</p></li><li><p>每一个用户可以在同样的时间使用同样的频带进行通信。<mark>各用户使用经过特殊挑选的不同码型，因此彼此不会造成干扰</mark>。</p></li><li><p>最初用于军事，因为这种系统发送的信号<mark>有很强的抗干扰能力，其频谱类似于白噪声，不易被敌人发现</mark></p></li></ul></blockquote><figure><img src="https://clb.pages.dev/img/pics/202310282039043.png" alt="码分复用" tabindex="0" loading="lazy"><figcaption>码分复用</figcaption></figure><blockquote><p>规格化内积：将码片序列先写成+1和-1的向量</p><p>例如：<mark>码片序列为（1101）&gt;&gt;&gt; 向量为(+1,+1,-1,+1)</mark></p><p>向量相乘/向量个数 = 内积</p><ul><li><strong>内积为1 &gt;&gt;&gt; 发送信号1</strong> <mark>发送的是自己的码片序列</mark></li><li><strong>内积为0 &gt;&gt;&gt; 未发送信号</strong> <mark>未发送数据</mark></li><li><strong>内积为-1 &gt;&gt;&gt; 发送信号0</strong> <mark>发送的是自己的码片序列的二进制反码</mark></li></ul></blockquote><h3 id="_2-5-相关习题和资料" tabindex="-1"><a class="header-anchor" href="#_2-5-相关习题和资料"><span>2.5 相关习题和资料</span></a></h3><ol><li><a href="https://www.kdocs.cn/view/l/cfixYkxNJ7Ep" target="_blank" rel="noopener noreferrer">第2章 物理层 习题</a></li><li><a href="https://www.kdocs.cn/view/l/ckmnMjp5UQvK" target="_blank" rel="noopener noreferrer">第2章 物理层（思维导图）</a></li></ol><hr><h2 id="_3-数据链路层" tabindex="-1"><a class="header-anchor" href="#_3-数据链路层"><span>3. 数据链路层</span></a></h2><blockquote><p><strong><mark>任务：解决数据包在一个网络或一段链路上传输的问题</mark></strong></p></blockquote><h3 id="_3-1-数据链路和帧" tabindex="-1"><a class="header-anchor" href="#_3-1-数据链路和帧"><span>3.1 数据链路和帧</span></a></h3><blockquote><ul><li><mark>链路</mark>（Link）是指从一个节点到相邻节点的一段物理线路，而中间没有任何其他的交换节点</li><li><mark>数据链路</mark>（Data Link）是基于链路的。当在一条链路上传送数据时，除需要链路本身，还需要一些必要的通信协议来控制这些数据的传输，把<mark>实现这些协议的硬件和软件加到链路</mark>上，就构成了数据链路</li><li>计算机中的<mark>网络适配器</mark>（俗称网卡）和其相应的软件驱动程序就实现了这些协议。一般的网络适配器都包含了物理层和数据链路层这两层的功能</li><li><mark>帧</mark>（Frame）是数据链路层的协议数据单元</li></ul></blockquote><h3 id="_3-2-封装成帧和透明传输" tabindex="-1"><a class="header-anchor" href="#_3-2-封装成帧和透明传输"><span>3.2 封装成帧和透明传输</span></a></h3><h4 id="封装成帧" tabindex="-1"><a class="header-anchor" href="#封装成帧"><span>封装成帧</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/202310291347647.png" alt="封装成帧" tabindex="0" loading="lazy"><figcaption>封装成帧</figcaption></figure><h4 id="透明传输问题" tabindex="-1"><a class="header-anchor" href="#透明传输问题"><span><span style="color:#ff6b6b;">透明传输问题</span></span></a></h4><blockquote><p><strong><mark>2. 透明传输问题出现原因</mark></strong>：上层应用交付的数据单元中可能<mark>含有和帧定界符相同的数据</mark>而被接收端误认为帧定界符从而导致错误。</p><p>如果不解决上述问题，则数据链路层就会<mark>对上层交付的PDU的内容有所限制</mark>，即<mark>PDU中不能包含帧定界符</mark>。显然，这样的数据链路层没有什么应用价值。</p><p><mark><strong>透明传输</strong></mark>：数据链路层对上层交付的PDU的内容<mark>没有任何限制</mark>，就好像数据链路层不存在一样</p></blockquote><img src="https://clb.pages.dev/img/pics/202310291859630.png" alt="透明传输问题" style="zoom:67%;"><h4 id="解决透明传输问题" tabindex="-1"><a class="header-anchor" href="#解决透明传输问题"><span>解决透明传输问题</span></a></h4><blockquote><p><strong><mark>字符填充</mark>(字节填充)</strong></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231029190744213.png" alt="字符填充" tabindex="0" loading="lazy"><figcaption>字符填充</figcaption></figure><blockquote><p><strong><mark>零比特填充</mark></strong></p></blockquote><p><strong>扫描要发送的信息，<span style="color:#ff6b6b;">如果有连续的5个1，立即插入1个0</span>&gt;，接收端逆操作即可（01111110为帧定界符）</strong></p><figure><img src="https://clb.pages.dev/img/pics/image-20231029192326597.png" alt="零比特填充" tabindex="0" loading="lazy"><figcaption>零比特填充</figcaption></figure><h3 id="_3-3-差错检测" tabindex="-1"><a class="header-anchor" href="#_3-3-差错检测"><span>3.3 差错检测</span></a></h3><blockquote><ol><li><mark><strong>比特差错</strong></mark>：比特在传输过程中可能会产生差错，0可能变为1,1可能变为0，这叫比特差错，也称为**<mark>误码</mark>**</li><li><strong><mark>误码率</mark></strong>：传输<mark>错误的</mark>比特数与所传输比特<mark>总数</mark>的比率称为误码率</li><li>使用<mark>差错检测码</mark>来检测数据在传输过程中是否产生了比特差错，是数据链路层所要解决的重要问题之一</li></ol></blockquote><h4 id="_1-使用循环冗余检验crc" tabindex="-1"><a class="header-anchor" href="#_1-使用循环冗余检验crc"><span>1. 使用<mark>循环冗余检验<code>CRC</code></mark></span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231101192256040.png" alt="CRC" tabindex="0" loading="lazy"><figcaption>CRC</figcaption></figure><h4 id="_2-示例" tabindex="-1"><a class="header-anchor" href="#_2-示例"><span>2. 示例</span></a></h4><ol><li>发送方</li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231101193502184.png" alt="CRC" tabindex="0" loading="lazy"><figcaption>CRC</figcaption></figure><ol start="2"><li>接收方</li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231101193959244.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-总结" tabindex="-1"><a class="header-anchor" href="#_3-总结"><span>3. 总结</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231101194313756.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-4-可靠传输" tabindex="-1"><a class="header-anchor" href="#_3-4-可靠传输"><span>3.4 可靠传输</span></a></h3><h4 id="_1-概念" tabindex="-1"><a class="header-anchor" href="#_1-概念"><span>1. 概念</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231101194720144.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/image-20231101195208168.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-5-可靠传输的实现机制" tabindex="-1"><a class="header-anchor" href="#_3-5-可靠传输的实现机制"><span>3.5 可靠传输的实现机制</span></a></h3><h4 id="_3-5-1-停止-等待协议-sw" tabindex="-1"><a class="header-anchor" href="#_3-5-1-停止-等待协议-sw"><span>3.5.1 停止-等待协议(SW)</span></a></h4><ol><li>基本原理</li></ol><blockquote><p>发送一个数据分组<code>DATA0</code>然后等待接收方发来确认信息<code>ACK0</code>后再传输下一个数据分组<code>DATA1</code> ，如果<mark>超时未接收到</mark>接收方发送的确认信息<code>ACK0</code>或者接<mark>收到否认信息</mark><code>NAK</code>就重新发送上一个分组数据分组,数据分组和确认信息的编号都是用来区分和上一个分组或信息是否相同</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231101204223808.png" alt="SW" tabindex="0" loading="lazy"><figcaption>SW</figcaption></figure><ol start="2"><li>停止等待协议的信道利用率</li></ol><blockquote><p>$$ 利用率 = \\frac{数据发送时延}{数据发送时延+2个传播时延+确认信息发送时延} $$</p><p><span style="color:#ff6b6b;">确认信息的发送时延一般忽略不计</span></p><p><strong>总结：当往返时间远大于数据帧的发送时延时，信道利用率很低，如果出现超时重传，信道利用率更低</strong>（卫星链路）</p></blockquote><h4 id="_3-5-2-回退n帧协议-gbn" tabindex="-1"><a class="header-anchor" href="#_3-5-2-回退n帧协议-gbn"><span>3.5.2 回退N帧协议（GBN）</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231101215803331.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/image-20231101211215263.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-5-3-选择重传协议-sr" tabindex="-1"><a class="header-anchor" href="#_3-5-3-选择重传协议-sr"><span>3.5.3 选择重传协议（SR）</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231101212500499.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-6-点对点协议-ppp" tabindex="-1"><a class="header-anchor" href="#_3-6-点对点协议-ppp"><span>3.6 点对点协议(<code>PPP</code>)</span></a></h3><ol><li>概述</li></ol><blockquote><p><mark>点对点协议</mark>（Point-to-Point Protocol，PPP）是目前使用最广泛的点对点数据链路层协议</p><ol><li><mark>网络控制协议NCPs</mark></li><li>封装成帧</li><li><mark>链路控制协议LCP</mark></li></ol></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231101213541707.png" alt="PPP" tabindex="0" loading="lazy"><figcaption>PPP</figcaption></figure><ol start="2"><li>PPP的<mark>帧格式</mark></li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231101221019454.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>PPP的<mark>透明传输</mark></li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231103154439848.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>PPP的<mark>状态图</mark></li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231101221315932.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-7-媒体接入控制问题" tabindex="-1"><a class="header-anchor" href="#_3-7-媒体接入控制问题"><span>3.7 媒体接入控制问题</span></a></h3><h4 id="_3-7-1-媒体接入控制-多址接入-问题" tabindex="-1"><a class="header-anchor" href="#_3-7-1-媒体接入控制-多址接入-问题"><span>3.7.1 媒体接入控制/多址接入 问题</span></a></h4><blockquote><p>如何协调多个发送站点和接收站点对一个共享传输媒体的占用（<mark>多个媒体同时发送信号导致冲突的问题</mark>）</p></blockquote><h4 id="_3-7-2-静态划分信道" tabindex="-1"><a class="header-anchor" href="#_3-7-2-静态划分信道"><span>3.7.2 静态划分信道</span></a></h4><blockquote><ul><li>频分多址</li><li>时分多址</li><li>码分多址</li></ul><p><mark><strong>这种固定划分信道的方法非常不灵活，通常在物理层中使用，而不是数据链路层</strong></mark></p></blockquote><h4 id="_3-7-3-csma-cd协议" tabindex="-1"><a class="header-anchor" href="#_3-7-3-csma-cd协议"><span>3.7.3 <code>CSMA/CD</code>协议</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231103161532858.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li><mark>帧发送流程图</mark></li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231103162311360.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/image-20231103163826951.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li><strong><mark>争用期</mark> 2τ ，即端到端传播时延的2倍</strong></li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231103162720907.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li><mark>最小帧长</mark></li></ol><blockquote><p><strong>最小帧长 = 争用期 x 数据传输速率</strong> $$ l = 2τ * 数据传输速率 $$</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231103162936995.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li><mark>动态退避</mark>：发生碰撞后进行重传，随着重传次数增加，退避时间也会逐渐增加，减小了碰撞的概率</li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231103163318636.png" alt="image-20231103163318636" tabindex="0" loading="lazy"><figcaption>image-20231103163318636</figcaption></figure><ol start="5"><li><mark>帧接收流程图</mark></li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231103163952585.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-7-4-csma-ca协议" tabindex="-1"><a class="header-anchor" href="#_3-7-4-csma-ca协议"><span>3.7.4 <code>CSMA/CA</code>协议</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/202311062053040.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-8-mac、ip地址、arp协议" tabindex="-1"><a class="header-anchor" href="#_3-8-mac、ip地址、arp协议"><span>3.8 <code>MAC</code>、<code>IP</code>地址、<code>ARP</code>协议</span></a></h3><h4 id="_3-8-1-mac地址" tabindex="-1"><a class="header-anchor" href="#_3-8-1-mac地址"><span>3.8.1 <code>MAC</code>地址</span></a></h4><ol><li><strong>MAC地址</strong>是<mark>对网络上各接口的唯一标识</mark>，而不是对网络上各设备的唯一标识（路由器有多个接口，所以有多个MAC地址）</li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231109211711863.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>MAC地址格式</li></ol><blockquote><p>广播MAC地址为**<mark>FF-FF-FF-FF-FF-FF</mark>**</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231109212131157.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>MAC帧有三种：<mark>单播、广播、多播</mark></li></ol><blockquote><p>单播帧：<mark>一对一</mark></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231109213737953.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>广播帧：<mark>一对全体</mark></p><p>广播地址：<code>FF-FF-FF-FF-FF-FF</code></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231109214347270.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>多播帧：<mark>一对多</mark></p><p>多播地址：<mark>第二个数是奇数代表是多播地址</mark></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/62942804e4b055af8b78ba06.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-8-2-ip地址" tabindex="-1"><a class="header-anchor" href="#_3-8-2-ip地址"><span>3.8.2 <code>IP</code>地址</span></a></h4><blockquote><p>（网络层再详细介绍）</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231109220004217.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-8-3-arp协议" tabindex="-1"><a class="header-anchor" href="#_3-8-3-arp协议"><span>3.8.3 <code>ARP</code>协议</span></a></h4><blockquote><p>主机中保存了一个高速缓存表，<mark>记录了IP和MAC的对应关系</mark></p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231109221234731.png" style="zoom:67%;"><blockquote><p>ARP协议动态获取MAC地址</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231109221003126.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>总结：<code>ARP</code>协议只能逐链路（相邻）使用，不能跨网络使用</strong></p></blockquote><h3 id="_3-9-集线器和交换机的区别" tabindex="-1"><a class="header-anchor" href="#_3-9-集线器和交换机的区别"><span>3.9 集线器和交换机的区别</span></a></h3><figure><img src="https://clb.pages.dev/img/pics/image-20231109222104719.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/image-20231109222736241.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-10-透明网桥的生成树协议stp" tabindex="-1"><a class="header-anchor" href="#_3-10-透明网桥的生成树协议stp"><span>3.10 透明网桥的生成树协议<code>STP</code></span></a></h3><blockquote><ul><li>为了提高以太网的<mark>可靠性</mark>，有时需要在两个以太网之间使用多个透明网桥来提供<mark>冗余链路</mark></li><li>为了避免广播帧在环路中永久兜圈，透明网桥使用生成树协议<code>Spanning Tree Protocol</code>，可以在增加冗余链路提高网络可靠性的同时，又避免环路带来的问题</li></ul></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231111200010935.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-11-虚拟局域网vlan" tabindex="-1"><a class="header-anchor" href="#_3-11-虚拟局域网vlan"><span>3.11 虚拟局域网<code>VLAN</code></span></a></h3><blockquote><p>虚拟局域网（<code>Virtual Local Area Network</code>，VLAN）是一种将局域网内的站点划分成与物理位置无关的逻辑组的技术，一个逻辑组就是一个VLAN，VLAN中的各站点具有某些共同的应用需求</p></blockquote><blockquote><p><mark>广播风暴</mark>：<strong>广播风暴会浪费网络资源和各主机的CPU资源</strong></p><ul><li>可以使用路由器切割广播域，防止广播风暴，但是<mark>成本较高</mark></li><li>使用vlan技术划分广播域</li></ul></blockquote><blockquote><ul><li><p><code>A</code>发送广播帧，<code>Access</code>接口接收并<code>打标签</code>,<code>PVID</code>和<code>VID</code>相同的Access端口可以接收该帧，进行<mark>去标签转发</mark></p></li><li><p><code>Trunk</code>端口的<code>PVID</code>如果等于该帧的<code>VID</code>，也会<mark>先去标签转发，然后再打标签</mark>，否则直接转发</p></li><li><p><strong>Trunk端口是连接两个交换机的</strong></p></li></ul></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231111193532792.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-思维导图和习题" tabindex="-1"><a class="header-anchor" href="#_4-思维导图和习题"><span>4. 思维导图和习题</span></a></h3><p><a href="https://www.kdocs.cn/view/l/cgV0rfS0qZEA" target="_blank" rel="noopener noreferrer">第3章 数据链路层（思维导图）-1 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/ciOEeLV6ffuJ" target="_blank" rel="noopener noreferrer">第3章 数据链路层（思维导图）-2 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cnRBS8NFgTll" target="_blank" rel="noopener noreferrer">第3章 数据链路层（思维导图）-3 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cl60fYfO1qZe" target="_blank" rel="noopener noreferrer">第3章 数据链路层 习题（第1部分）</a></p><p><a href="https://www.kdocs.cn/view/l/cenjHDfYLe95" target="_blank" rel="noopener noreferrer">第3章 数据链路层 习题（第2部分）</a></p><hr><h2 id="_4-网络层" tabindex="-1"><a class="header-anchor" href="#_4-网络层"><span>4. 网络层</span></a></h2><h3 id="_4-1-概述" tabindex="-1"><a class="header-anchor" href="#_4-1-概述"><span>4.1 概述</span></a></h3><blockquote><p>网络层的主要任务：<mark>将分组从源主机经过多个网络和多段链路传输到目的主机</mark>，可以将该任务划分为<mark>分组转发</mark>和<mark>路由选择</mark>两种重要的功能</p></blockquote><h3 id="_4-2-网络层提供的两种服务" tabindex="-1"><a class="header-anchor" href="#_4-2-网络层提供的两种服务"><span>4.2 网络层提供的两种服务</span></a></h3><h4 id="_4-2-1-面向连接的虚电路服务" tabindex="-1"><a class="header-anchor" href="#_4-2-1-面向连接的虚电路服务"><span>4.2.1 面向连接的虚电路服务</span></a></h4><blockquote><ul><li><strong>虚电路表示这是一条逻辑上的连接，分组沿着这条逻辑连接按照存储转发方式传送，而<mark>不是真正建立了一条物理连接</mark></strong></li><li><strong>分组的首部仅在连接建立阶段使用完整的目的主机地址，之后每个分组的首部只需要携带一条<mark>虚电路编号</mark>即可</strong></li></ul></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231112213851481.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-2-2-无连接的数据报服务" tabindex="-1"><a class="header-anchor" href="#_4-2-2-无连接的数据报服务"><span>4.2.2 无连接的数据报服务</span></a></h4><blockquote><ul><li><code>TCP/IP</code>使用的就是这种<mark>简单灵活的</mark>、<mark>无连接的</mark>、<mark>不可靠的</mark>数据报服务</li><li><strong>核心思想：<mark>可靠通信应由用户主机来保证</mark></strong></li><li><strong>由于网络自身不提供端到端的可靠传输服务，这就使得网络中的路由器可以做得比较简单，<mark>大大降低了网络造价</mark></strong></li><li><strong>这种设计思想的<mark>运行方式灵活</mark>、能够适应多种应用。因特网能够发展到今日的规模，充分证明了当初采取这种设计思想的<mark>正确性</mark></strong></li></ul></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231112220730923.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-2-3-ip地址" tabindex="-1"><a class="header-anchor" href="#_4-2-3-ip地址"><span>4.2.3 IP地址</span></a></h4><blockquote><p><strong>概念</strong></p></blockquote><ul><li>网际协议（<code>Internet Protocol</code>，<code>IP</code>）是<code>TCP/IP</code>体系结构网际层中的核心协议</li><li><code>IPv4</code>地址就是给因特网(Internet)上的每一台主机（或路由器）的每一个<mark>接口</mark>分配一个在全世界范围内是唯一的<mark>32比特</mark>的标识符</li></ul><h4 id="_4-2-4-分类编址的ip" tabindex="-1"><a class="header-anchor" href="#_4-2-4-分类编址的ip"><span>4.2.4 分类编址的<code>IP</code></span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231112223308951.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-2-5-划分子网的ip" tabindex="-1"><a class="header-anchor" href="#_4-2-5-划分子网的ip"><span>4.2.5 划分子网的<code>IP</code></span></a></h4><blockquote><p><strong>分类编址方法不够灵活且容易造成<mark>大量地址浪费</mark>，划分子网编址方法对其进行改进（“打补丁”）</strong></p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231113184551320.png" style="zoom:80%;"><blockquote><p>划分子网案例</p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231113185650959.png" style="zoom:67%;"><h4 id="_4-2-6-无分类编制的ip" tabindex="-1"><a class="header-anchor" href="#_4-2-6-无分类编制的ip"><span>4.2.6 <mark>无分类编制</mark>的<code>IP</code></span></a></h4><img src="https://clb.pages.dev/img/pics/image-20231113190642722.png" style="zoom:67%;"><blockquote><p><mark>无分类域间路由选择</mark>（<code>C</code>lassless <code>I</code>nter-<code>D</code>omain <code>R</code>outing，<code>CIDR</code> ）</p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231113190939322.png" style="zoom:67%;"><blockquote><p><strong>练习</strong></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231113193113576.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong><mark>路由聚合</mark></strong></p><p><strong>找出共同前缀，其余位取0</strong></p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231113193616181.png" style="zoom:67%;"><h3 id="_4-3-ip数据报的发送和转发过程" tabindex="-1"><a class="header-anchor" href="#_4-3-ip数据报的发送和转发过程"><span>4.3 IP数据报的发送和转发过程</span></a></h3><blockquote><p><strong>IP数据报的<mark>发送</mark>和<mark>转发</mark>过程</strong></p><ul><li><p><strong>主机发送IP数据报</strong></p><ul><li><mark>判断目的主机是否与自己在同一个网络：</mark><ul><li>若在同一个网络，则属于<mark>直接交付</mark>，直接发送给目的主机</li><li>若不在同一个网络，则属于<mark>间接交付</mark>，传输给主机所在网络的默认网关(路由器)，<mark>由默认网关帮忙转发</mark>)</li></ul></li></ul></li><li><p><strong>路由器转发IP数据报</strong></p><ul><li><mark>检查IP数据报首部是否出错：</mark><ul><li>若出错，则直接丢弃该IP数据报并通告源主机</li><li>若没有出错，则进行转发</li></ul></li><li><mark>根据IP数据报的目的地址在路由表中查找匹配的条目：</mark><ul><li>若找到匹配的条目，则转发给条目中指示的下一跳；</li><li>若找不到，则丢弃该IP数据报并通告源主机；</li></ul></li></ul></li></ul></blockquote><figure><img src="https://clb.pages.dev/img/pics/010ac0446c7c01e405dd1b7baf38d50a.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><mark>路由器不转发广播IP数据报</mark>，即路由器隔离广播域，如果因特网中数量巨大的路由器收到广播IP数据报后都进行转发，则会<mark>造成巨大的广播风暴，严重浪费因特网资源</mark></p><ul><li><mark>中继器</mark>和<mark>集线器</mark>工作在<mark>物理层</mark>，<strong>既不隔离冲突域也不隔离广播域</strong></li><li><mark>网桥</mark>和<mark>交换机</mark>(多端口网桥)工作在<mark>数据链路层</mark>，<strong>可以隔离冲突域，不能隔离广播域</strong></li><li><mark>路由器</mark>工作在<mark>网络层</mark>，<strong>既隔离冲突域，也隔离广播域</strong></li></ul></blockquote><h3 id="_4-4-静态路由配置" tabindex="-1"><a class="header-anchor" href="#_4-4-静态路由配置"><span>4.4 静态路由配置</span></a></h3><h4 id="_1-静态路由的配置" tabindex="-1"><a class="header-anchor" href="#_1-静态路由的配置"><span>1. 静态路由的配置</span></a></h4><img src="https://clb.pages.dev/img/pics/image-20231117222851885.png" style="zoom:67%;"><h4 id="_2-默认路由" tabindex="-1"><a class="header-anchor" href="#_2-默认路由"><span>2. 默认路由</span></a></h4><ol><li><p>默认路由：默认路由条目中的目的网络<code>0.0.0.0/0</code>，其中<code>0.0.0.0</code>表示任意网络，而网络前缀“/0”（相应的地址掩码为<code>0.0.0.0</code>）是<mark>最短的网络前缀</mark></p></li><li><p>特定主机路由：特定主机路由条目中的目的网络<code>192.168.2.1/32</code>，其中<code>192.168.2.1</code>是特定主机的IP地址，而网络前缀“/32”（相应地址掩码为<code>255.255.255.255</code>）是<mark>最长的网络前缀</mark></p></li><li><p>路由器在查找转发表转发IP数据报时，遵循“最长前缀匹配”的原则，因此<mark>默认路由匹配优先级最低，特定主机路由条目的匹配优先级最高</mark></p></li></ol><img src="https://clb.pages.dev/img/pics/image-20231117223841323.png" style="zoom:67%;"><h4 id="_3-路由环路" tabindex="-1"><a class="header-anchor" href="#_3-路由环路"><span>3. 路由环路</span></a></h4><ul><li>错误配置静态路由有可能导致<mark>路由环路</mark>问题</li><li>为了<mark>防止IP数据报在环路中永久兜圈</mark>，在IP数据报首部设有<mark>生存时间TTL</mark>，TTL为0时会被丢弃</li></ul><p><strong>路由环路问题产生原因：</strong></p><ol><li>路由配置错误</li></ol><img src="https://clb.pages.dev/img/pics/image-20231118125828914.png" style="zoom:67%;"><ol start="2"><li>聚合了不存在的IP地址</li></ol><blockquote><p>需要给不存在的IP地址配置黑洞路由，防止IP数据报转发到其他路由器</p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231118133214440.png" style="zoom:67%;"><ol start="3"><li>网络故障</li></ol><blockquote><p>可以在网络发生故障时<mark>添加一条针对该IP的黑洞路由</mark>，待网络正常后又将其设置为失效状态</p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231118134111043.png" style="zoom:67%;"><h3 id="_4-5-路由选择协议" tabindex="-1"><a class="header-anchor" href="#_4-5-路由选择协议"><span>4.5 路由选择协议</span></a></h3><ol><li>路由选择分为两类</li></ol><table><thead><tr><th style="text-align:left;"><mark>静态路由选择</mark></th><th style="text-align:left;"><mark>动态路由选择</mark></th></tr></thead><tbody><tr><td style="text-align:left;">采用<mark>人工配置</mark>的方式给路由器添加网络路由、默认路由和特定主机路由等路由条目</td><td style="text-align:left;">路由器通过路由选择协议<mark>自动获取</mark>路由信息</td></tr><tr><td style="text-align:left;">静态路由选择<mark>简单、开销小</mark>，但<mark>不能及时适应网络状态（流量、拓扑等）的变化</mark></td><td style="text-align:left;">动态路由选择比较<mark>复杂、开销比较大</mark>，但<mark>能较好地适应网络状态的变化</mark></td></tr><tr><td style="text-align:left;">静态路由选择一般只在<mark>小规模网络</mark>中采用</td><td style="text-align:left;">动态路由选择适用于<mark>大规模网络</mark></td></tr></tbody></table><ol start="2"><li>因特网采用<mark>分层次</mark>的路由选择协议</li></ol><p>因特网是全球最大的互联网，它所采取的路由选择协议具有以下三个主要特点：</p><ul><li>自适应：因特网采用<mark>动态路由</mark>选择，能较好地适应网络状态的变化。</li><li>分布式：因特网中的各路由器通过相互间的信息交互，<mark>共同完成路由信息的获取和更新</mark>。</li><li>分层次：将整个因特网划分为许多较小的<mark>自治系统</mark>(<code>Autonomous System,AS</code>)，在自治系统内部和外部采用不同类别的路由选择协议，分别进行路由选择</li></ul><img src="https://clb.pages.dev/img/pics/image-20231118150928383.png" style="zoom:67%;"><h3 id="_4-6-rip" tabindex="-1"><a class="header-anchor" href="#_4-6-rip"><span>4.6 <code>RIP</code></span></a></h3><p>路由信息协议（<code>Routing Information Protocol，RIP</code>）是内部网关协议中最先得到广泛使用的协议之一</p><ol><li>相关概念</li></ol><ul><li><p>RIP使用<mark>跳数</mark>（<code>Hop Count</code>）作为度量（<code>Metric</code>）来衡量到达目的网络的距离</p><ul><li><p>RIP将<mark>路由器到直连网络的距离定义为1</mark></p></li><li><p>RIP将路由器到非直连网络的距离定义为<mark>所经过的路由器数加1</mark></p></li><li><p>RIP允许一条路径最多只能包含15个路由器，<mark>距离等于16时相当于不可达</mark>,因此RIP只适用于<mark>小型互 联网</mark></p></li></ul></li></ul><img src="https://clb.pages.dev/img/pics/image-20231118140619521.png" style="zoom:50%;"><ol start="2"><li><p>RIP认为好的路由就是“距离短”的路由，也就是所<mark>通过路由器数量最少的路由</mark>,和传输速率和物理距离等无关</p></li><li><p>RIP的<mark>3个重要特点</mark></p></li></ol><img src="https://clb.pages.dev/img/pics/image-20231118141136250.png" style="zoom:67%;"><ol start="4"><li><p><strong><mark>RIP的工作原理</mark></strong></p><ol><li>基本流程</li></ol><img src="https://clb.pages.dev/img/pics/image-20231118141750507.png" style="zoom:67%;"><ol start="2"><li><strong><mark>RIP路由条目的更新规则</mark></strong></li></ol><img src="https://clb.pages.dev/img/pics/image-20231118142447662.png" style="zoom:80%;"><ol start="3"><li><p><mark><strong>坏消息传播的慢</strong></mark></p><figure><img src="https://clb.pages.dev/img/pics/image-20231118220443883.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ol></li><li><p>RIP的优缺点</p></li></ol><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>实现<mark>简单</mark>，路由器<mark>开销小</mark></td><td>RIP限制了<mark>最大RIP距离为<code>15</code></mark>这就限制了使用RIP的自治系统AS的规模</td></tr><tr><td>如果一个路由器发现了RIP距离更短的路由，那么这种更新信息就传播得很快，即“<mark>好消息传播得快</mark>”</td><td>相邻路由器之间交换的路由信息是路由器中的完整路由表，因而<mark>随着网络规模的扩大，开销也随之增大</mark></td></tr><tr><td></td><td>“<mark><strong>坏消息传播得慢</strong></mark>”，使更新过程的收敛时间过长。因此，对于规模较大的自治系统AS，应当使用<code>OSPF</code>协议</td></tr></tbody></table><h3 id="_4-7-ospf" tabindex="-1"><a class="header-anchor" href="#_4-7-ospf"><span>4.7 <code>OSPF</code></span></a></h3><h4 id="_1-基本概念" tabindex="-1"><a class="header-anchor" href="#_1-基本概念"><span>1. 基本概念</span></a></h4><blockquote><p>开放最短路径优先（<code>Open Shortest Path First，OSPF</code>）协议是为了克服路由信息协议RIP的缺点在1989年开发出来的</p><ul><li>“<mark>开放</mark>”表明<code>OSPF</code>协议不是受某一厂商控制，而是公开发表的</li><li>“<mark>最短路径优先</mark>”是因为使用了Dijkstra提出的<mark>最短路径算法</mark>(<code>Shortest Path First,SPF</code>)</li></ul></blockquote><h4 id="_2-特点" tabindex="-1"><a class="header-anchor" href="#_2-特点"><span>2. 特点</span></a></h4><blockquote><ul><li><code>OSPF</code>是<mark>基于<strong>链路状态</strong></mark>的，而不像<code>RIP</code>是基于距离向量的</li><li><code>OSPF</code>基于链路状态并采用最短路径算法计算路由，<mark>从算法上保证了不会产生路由环路</mark></li><li><code>OSPF</code><mark>不限制网络规模，更新效率高，收敛速度快</mark></li></ul></blockquote><h4 id="_3-相关概念" tabindex="-1"><a class="header-anchor" href="#_3-相关概念"><span>3. 相关概念</span></a></h4><ol><li><p>链路状态（<code>Link State，LS</code>）是指本路由器都和哪些路由器相邻，以及相应链路的“代价（cost）”，类似RIP中的距离</p><blockquote><p>“代价”用来表示费用、距离、时延和带宽等，这些都由网络管理人员来决定</p></blockquote></li></ol><img src="https://clb.pages.dev/img/pics/image-20231118223059765.png" style="zoom:80%;" alt="举例-思科路由器的代价计算标准"><ol start="2"><li><strong><mark><code>OSPF</code>路由器邻居关系的建立和维护</mark></strong><ul><li><strong>如果在死亡倒计时为0时还未收到邻居的问候分组，则认为该邻居不可达，</strong></li><li><strong>在接受到邻居的问候分组后，刷新死亡倒计时为40s</strong></li><li><strong>路由器每10s会向邻居发送问候分组</strong></li></ul></li></ol><img src="https://clb.pages.dev/img/pics/image-20231118223958856.png" style="zoom:67%;"><ol start="3"><li><mark><strong>链路状态数据库</strong></mark>(<code>Link State Database，LSDB</code>)</li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231118224728007.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>使用<code>OSPF</code>的各路由器，基于链路状态数据库LSDB进行最短路径优先计算，构建出各自到达其他各路由器的最短路径，即构建各自的路由表(<mark>根据链路状态数据库得出全局带权有向图，使用Dijkstra算法得出个路由器的最短路径</mark>)</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231118225157334.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li><strong><code>OSPF</code>的五种分组类型</strong><ul><li>类型1，<mark>问候(<code>Hello</code>)分组</mark>：用来发现和维护邻居路由器的可达性。</li><li>类型2，<mark>数据库描述(<code>Database Description</code>)分组</mark>：向邻居路由器给出自己的链路状态数据库中的所有链路状态项目的摘要信息</li><li>类型3，<mark>链路状态请求(<code>Link State Request</code>)分组</mark>：向邻居路由器请求发送某些链路状态项目的详细信息。</li><li>类型4，<mark>链路状态更新(<code>Link State Update</code>)分组</mark>：路由器使用这种分组将其链路状态进行洪泛发送，即用洪泛法对全网更新链路状态</li><li>类型5，<mark>链路状态确认(<code>Link State Acknowledgment</code>)分组</mark>：这是对链路状态更新分组的确认分组。</li></ul></li></ol><h4 id="_4-基本工作原理" tabindex="-1"><a class="header-anchor" href="#_4-基本工作原理"><span>4. 基本工作原理</span></a></h4><img src="https://clb.pages.dev/img/pics/image-20231119152547862.png" style="zoom:67%;"><blockquote><p>采用划分区域的方法，虽然使交换信息的种类增多了，同时也使OSPF协议更加复杂了，但这样做能<mark>使每一个区域内部交换路由信息的通信量大大减小，因而使OSPF协议能够用于规模更大的自治系统AS</mark></p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231119152848527.png" style="zoom:67%;"><h3 id="_4-8-bgp" tabindex="-1"><a class="header-anchor" href="#_4-8-bgp"><span>4.8 <code>BGP</code></span></a></h3><h4 id="_1-基本概念-1" tabindex="-1"><a class="header-anchor" href="#_1-基本概念-1"><span>1. 基本概念</span></a></h4><blockquote><ul><li><strong>边界网关协议</strong>（<code>Border Gateway Protocol，BGP</code>）属于<mark>外部网关协议</mark><code>EGP</code>这个类别，用于自治系统<code>AS</code>之间的路由选择协议</li><li>由于在不同AS内度量路由的“代价”（距离、带宽、费用等）可能不同，因此<mark>对于AS之间的路由选择，使用统一的“代价”作为度量来寻找最佳路由是不行的</mark></li><li>AS之间的路由选择还必须考虑相关策略（政治、经济、安全等）</li></ul><p><strong>总结：<code>BGP</code>只能是力求寻找一条能够到达目的网络且比较好的路由（即不能兜圈子），而并非要寻找一条最佳路由</strong></p></blockquote><img src="https://clb.pages.dev/img/pics/image-20231119154933166.png" style="zoom:80%;"><blockquote><ul><li><p>在配置BGP时，每个AS的管理员要选择至少一个路由器作为该AS的“<mark>BGP发言人</mark>”</p></li><li><p>一般来说，两个BGP发言人都是通过一个共享网络连接在一起的，而BGP发言人往往就是<mark>BGP边界路由器</mark></p></li><li><p>使用<code>TCP</code>连接交换路由信息的两个BGP发言人，彼此称为对方的<mark>邻站</mark>（neighbor）或<mark>对等站</mark>（peer）</p></li><li><p>BGP发言人除了运行BGP协议外，还必须运行自己所在AS所使用的内部网关协议IGP，例如RIP或OSPF</p></li><li><p>BGP发言人交换网络可达性的信息，也就是<mark>要到达某个网络所要经过的一系列自治系统</mark></p></li><li><p>当BGP发言人相互交换了网络可达性的信息后，各BGP发言人就<mark>根据所采用的策略</mark>，从收到的路由信息中<mark>找出到达各自治系统的较好的路由</mark>，也就是<mark>构造出树形结构且不存在环路的自治系统连通图</mark></p></li></ul></blockquote><h4 id="_2-四种报文" tabindex="-1"><a class="header-anchor" href="#_2-四种报文"><span>2. 四种报文</span></a></h4><img src="https://clb.pages.dev/img/pics/image-20231119155610676.png"><img src="https://clb.pages.dev/img/pics/image-20231119160021206.png"><h3 id="_4-9-ipv4数据报的首部格式" tabindex="-1"><a class="header-anchor" href="#_4-9-ipv4数据报的首部格式"><span>4.9 IPv4数据报的首部格式</span></a></h3><figure><img src="https://clb.pages.dev/img/pics/image-20231119161128658.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th style="text-align:center;">版本</th><th>长度为<mark>4</mark>个比特，用来表示IP协议的版本，<mark>通信双方使用的IP协议的版本必须一致</mark>，目前广泛使用的IP协议的版本号为4（即IPv4）</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>首部长度</strong></td><td>长度为<mark>4</mark>个比特，该字段的取值<mark>以4字节为单位</mark>，用来表示IPV4数据报的首部长度。<br>最小取值为二进制的0101，即十进制的5，再乘以4字节单位，<mark>表示IPv4数据报首部只有20字节固定部分</mark><br>最大取值为二进制的1111，即十进制的15，再乘以4字节单位，<mark>表示IPV4数据报首部包含20字节固定部分和最大40字节可变部分</mark></td></tr><tr><td style="text-align:center;"><strong>总长度</strong></td><td>长度为<mark>16</mark>个比特，该字段的取值<mark>以字节为单位</mark>，用来<mark>表示IPv4数据报的长度</mark>（<mark>首部长度+数据载荷长度</mark>）<br>最大取值为二进制的16个比特1，即十进制的65535（很少传输这么长的IPv4数据报）</td></tr><tr><td style="text-align:center;"><strong>标识</strong></td><td>长度为<mark>16</mark>个比特，<mark>属于同一个IPv4数据报的各分片数据报应该具有相同的标识</mark></td></tr><tr><td style="text-align:center;"><strong>标志</strong></td><td>最低位(<code>More Fragment,MF</code>)<br> MF=1表示本分片后面还有分片<br> MF=0表示本分片后面没有分片<br>中间位(<code>Don&#39;t Fragment,DF</code>)<br> DF=1表示不允许分片<br> DF=0表示允许分片<br>最高位为保留位，必须设置为0</td></tr><tr><td style="text-align:center;"><strong>片偏移</strong></td><td>长度为<mark>16</mark>个比特，该字段的取值，<mark>以8字节为单位</mark>，用来指出分片IPv4数据报的<mark>数据载荷偏移其在原IPv4数据报的位置有多远，只能为整数，否则必须调整前一个分片长度</mark></td></tr><tr><td style="text-align:center;"><strong>生存时间</strong></td><td>长度为<mark>8</mark>个比特，最大取值为二进制的11111111，即十进制的255。该字段的取值最初以秒为单位。因此，IPv4数据报的最大生存时间最初为255秒。路由器转发IPv4数据报时，将其首部中该字段的值减去该数据报在路由器上所耗费的时间，若结果不为0就转发，否则就丢弃<br>生存时间字段<mark>后来改为以“跳数”为单位，路由器收到待转发的IPv4数据报时，将其首部中的该字段的值减1，若结果不为0就转发，否则就丢弃</mark></td></tr><tr><td style="text-align:center;"><strong>协议</strong></td><td>长度为8个比特，用来<mark>指明IPv4数据报的数据载荷是何种协议数据单元PDU</mark><br><img src="https://clb.pages.dev/img/pics/image-20231119165547509.png" alt="" loading="lazy"></td></tr><tr><td style="text-align:center;"><strong>首部检验和</strong></td><td>长度为<mark>16</mark>个比特，用于<mark>检测IPv4数据报在传输过程中其首部是否出现了差错</mark><br>IPv4数据报<mark>每经过一个路由器</mark>，其首部中的某些字段的值（例如生存时间TTL、标志以及片偏移等）都可能发生变化，因此路由器都要<mark>重新计算一下首部检验和</mark></td></tr><tr><td style="text-align:center;"><strong>源IP地址和目的IP地址</strong></td><td>长度都为<mark>32</mark>个比特，用来填写发送（接收）IPv4数据报的源（目的）主机的IPv4地址</td></tr></tbody></table><blockquote><p><code>MTU</code>：<mark>最大传送单元，超过最大传送单元的长度的IP数据报必须分片</mark></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231119164911210.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/image-20231119171554203.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-10-icmp" tabindex="-1"><a class="header-anchor" href="#_4-10-icmp"><span>4.10 <code>ICMP</code></span></a></h3><h4 id="_1-基本概念-2" tabindex="-1"><a class="header-anchor" href="#_1-基本概念-2"><span>1. 基本概念</span></a></h4><blockquote><ul><li>为了更有效地转发IP数据报以及提高IP数据报交付成功的机会，TCP/IP体系结构的网际层使用了网际控制报文协议（<code>Internet Control Message Protocol，ICMP</code>）</li><li>主机或路由器使用ICMP来发送<mark>差错报告报文</mark>和<mark>询问报文</mark></li><li>ICMP报文被<mark>封装在IP数据报中作为数据载荷</mark>发送</li></ul></blockquote><h4 id="_2-icmp报文数据类型" tabindex="-1"><a class="header-anchor" href="#_2-icmp报文数据类型"><span>2. ICMP报文数据类型</span></a></h4><ul><li><p><strong>差错报告报文</strong>：用来<mark>向主机或路由器报告差错情况</mark></p><ul><li><p><strong>终点不可达</strong>：<mark>当路由器或主机不能交付IP数据报时，就向源点发送终点不可达报文</mark>，具体可再根据ICMP的代码字段细分为目的网络不可达、目的主机不可达、目的协议不可达、目的端口不可达、目的网络未知、目的主机未知等13种</p><figure><img src="https://clb.pages.dev/img/pics/image-20231119222854859.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p><strong>源点抑制</strong>：<mark>当路由器或主机由于拥塞而丢弃IP数据报时，就向发送该IP数据报的源点发送源点抑制报文</mark>，使源点知道应当把IP数据报的发送速率放慢</p><img src="https://clb.pages.dev/img/pics/image-20231119222400135.png"></li><li><p><strong>超时</strong>：</p><ul><li>当路由器收到一个目的IP地址不是自己的IP数据报时，会将其首部中生存时间TTL字段的值减1。若结果不为0，则路由器将该数据报转发出去；<mark>若结果为0，路由器不但要丢弃该数据报，还要向发送该IP数据报的源点发送时间超过（超时）报文</mark></li><li>另外，当终点在预先规定的时间内<mark>未能收到一个数据报的全部数据报分片</mark>时，就把已收到的数据报片都<mark>丢弃</mark>，也会<mark>向源点发送时间超过（超时）报文</mark></li></ul><img src="https://clb.pages.dev/img/pics/image-20231120194354557.png"></li><li><p><strong>参数问题</strong>：当路由器或目的主机收到IP数据报后，根据其首部中的检验和字段的值发现首部在传送过程中出现了误码，就丢弃该数据报，并向发送该数据报的源点发送参数问题报文</p><figure><img src="https://clb.pages.dev/img/pics/image-20231120194840526.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p><strong>改变路由（重定向）</strong>：路由器把<mark>改变路由报文</mark>发送给主机，让主机知道下次<mark>应将IP数据报发送给另外的路由器</mark>，这样可以<mark>通过更好的路由到达目的主机</mark></p><figure><img src="https://clb.pages.dev/img/pics/image-20231120195049808.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ul></li><li><p><strong>以下情况<mark>不应发送ICMP差错报告报文</mark></strong>：</p><ul><li>对<mark>ICMP差错报告报文</mark>不再发送ICMP差错报告报文</li><li>对第一个分片的IP数据报片的所有<mark>后续数据报片</mark>都不发送ICMP差错报告报文</li><li>对<mark>具有多播地址的IP数据报</mark>都不发送ICMP差错报告报文</li><li>对具有<mark>特殊地址</mark>（例如<code>127.0.0.0</code>或<code>0.0.0.0</code>）的IP数据报不发送ICMP差错报告报文。</li></ul></li><li><p><strong>询问报文</strong>：用来<mark>向主机或路由器询问情况</mark></p><ul><li><p><strong>回送请求和回答</strong>：</p><p>由主机或路由器向一个特定的目的主机或路由器发出。收到此报文的主机或路由器必须给发送该报文的源主机或路由器发送ICMP回送回答报文。这种询问报文<mark>用来测试目的站是否可达以及了解其有关状态</mark></p></li><li><p><strong>时间戳请求和回答</strong>：</p><p>用来请求某个主机或路由器回答当前的日期和时间。在ICMP时间戳回答报文中有一个32比特的字段，其中写入的整数代表从1900年1月1日起到当前时刻一共有多少秒。这种询问报文<mark>用来进行时钟同步和测量时间</mark></p></li></ul></li></ul><h4 id="_3-icmp的典型应用" tabindex="-1"><a class="header-anchor" href="#_3-icmp的典型应用"><span>3. ICMP的典型应用</span></a></h4><h5 id="_1-ping" tabindex="-1"><a class="header-anchor" href="#_1-ping"><span>1. <code>PING</code></span></a></h5><blockquote><p>分组网间探测（Packet InterNet Groper，<code>PING</code>）</p><p>在命令行中<mark>使用ping命令用来测试主机或路由器之间的连通性</mark></p><ul><li>PING是TCP/IP体系结构的<mark>应用层直接使用网际层ICMP</mark>的一个例子，它并不使用运输层的TCP或UDP</li><li>PING应用所使用的ICMP报文类型为<mark>回送请求和回答</mark></li></ul></blockquote><h5 id="_2-traceroute" tabindex="-1"><a class="header-anchor" href="#_2-traceroute"><span>2. <code>traceroute</code></span></a></h5><blockquote><p>跟踪路由应用traceroute，<mark>用于探测IP数据报从源主机到达目的主机要经过哪些路由器</mark></p><p>在不同操作系统中，traceroute应用的命令和实现机制有所不同：</p><ul><li>在UNIX版本中，具体命令为<code>traceroute</code>，其<mark>在运输层使用UDP协议</mark>，<mark>在网络层使用ICMP报文类型只有差错报告报文</mark></li><li>在Windows版本中，具体命令为<code>tracert</code>，其<mark>应用层直接使用网际层的ICMP协议，所使用的ICMP报文类型有回送请求和回答报文以及差错报告报文</mark></li></ul><p><strong><mark>原理</mark></strong>：<mark>设置IP数据报TTL为1，经过第一个路由器时，TTL减为0，IP数据报被丢弃，路由器向源主机发送超时差错报告报文，这样就知道了经过的第一个路由器的IP地址，以此类推依次设置TTL为2,3,4，……，直到接收到目的主机的回送请求回答报文</mark></p></blockquote><h3 id="_4-11-vpn" tabindex="-1"><a class="header-anchor" href="#_4-11-vpn"><span>4.11 <code>VPN</code></span></a></h3><blockquote><p><mark>虚拟专用网</mark>(<code>Virtual Private Network,VPN</code>)：<strong>利用公用的<mark>因特网</mark>作为本机构各<mark>专用网之间的通信载体</mark>，这样形成的网络又称为虚拟专用网</strong></p></blockquote><p><strong>专用地址</strong>：</p><ul><li><code>10.0.0.0-10.255.255.255</code>(CIDR地址块10/8)</li><li><code>172.16.0.0-172.31.255.255</code>(ClDR地址块172.16/12)</li><li><code>192.168.0.0-192.168.255.255</code>(CIDR地址块192.168/16)</li></ul><blockquote><p>很显然，全世界可能有很多不同机构的专用网具有相同的专用IP地址，但这并不会引起麻烦，因为<mark>这些专用地址仅在机构内部使用</mark></p><p><strong>注意</strong>：在因特网中的所有路由器，<mark>对目的地址是专用地址的IP数据报一律不进行转发</mark>，这需要由因特网服务提供者ISP对其拥有的因特网路由器进行设置来实现（需要自己对路由器额外配置）</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231120204244180.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-12-nat" tabindex="-1"><a class="header-anchor" href="#_4-12-nat"><span>4.12 <code>NAT</code></span></a></h3><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述"><span>1. 概述</span></a></h4><blockquote><ul><li><p><strong>背景</strong>：尽管因特网采用了无分类编址方法来减缓IPv4地址空间耗尽的速度，但由于<mark>因特网用户数量的急剧增长</mark>，特别是<mark>大量小型办公室</mark>和<mark>家庭网络</mark>接入因特网的需求不断增加，I<mark>Pv4地址空间即将耗尽的危险然仍没有解除</mark>（实际上，因特网号码分配管理局IANN于2011年2月3日宣布，IPv4地址已经分配完毕）</p></li><li><p><strong><mark>网络地址转换</mark></strong>（<code>Network Address Translation，NAT</code>）技术于1994年被提出，<mark>用来缓解IPv4地址空间即将耗尽的问题</mark></p><ul><li>NAT能<mark>使大量使用内部专用地址的专用网络用户共享少量外部全球地址来访问因特网上的主机和资源</mark></li><li>这种方法需要在专用网络连接到因特网的路由器上<mark>安装NAT软件</mark>。装有NAT软件的路由器称为<mark>NAT路由器</mark>，它<mark>至少要有一个有效的外部全球地址IPG</mark>。这样，所有使用内部专用地址的主机在和外部因特网通信时，都要<mark>在NAT路由器上将其内部专用地址转换成IPG</mark></li></ul></li></ul></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231120210441321.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-napt" tabindex="-1"><a class="header-anchor" href="#_2-napt"><span>2. <code>NAPT</code></span></a></h4><blockquote><p><strong><mark>网络地址与端口号转换方法</mark></strong>:将NAT和运输层端口号结合使用，称为网络地址与端口号转换（<code>Network Address and Port Translation，NAPT</code>）</p><ul><li>由于目前绝大多数基于TCP/IP协议栈的网络应用，都使用运输层的传输控制协议TCP或用户数据报协议UDP，<mark>为了更加有效地利用NAT路由器中的全球IP地址</mark>，现在常<mark>将NAT转换和运输层端口号结合使用</mark><ul><li>这样就可以使内部专用网中使用专用地址的<mark>大量主机，共用NAT路由器上的1个全球IP地址</mark>，因而可以同时与因特网中的不同主机进行通信</li><li>现在很多家用路由器将家中各种智能设备（手机、平板、笔记本电脑、台式电脑、物联网设备等）接入因特网，这种路由器实际上就是一个<mark>NAPT路由器</mark>，但往往并不运行路由选择协议</li></ul></li></ul></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231120211722902.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><mark>由于NAT对外网屏蔽了内网主机的网络地址，能为内网的主机提供一定的安全保护</mark></p></blockquote><h3 id="_5-思维导图和习题" tabindex="-1"><a class="header-anchor" href="#_5-思维导图和习题"><span>5. 思维导图和习题</span></a></h3><p><a href="https://www.kdocs.cn/view/l/ceLxGZ0br8Gy" target="_blank" rel="noopener noreferrer">第4章 网络层（思维导图）-1 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cu2tek1gzIPq" target="_blank" rel="noopener noreferrer">第4章 网络层（思维导图）-2 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cjXVALCjxr0X" target="_blank" rel="noopener noreferrer">第4章 网络层（思维导图）-3 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cbSlBNdR8CSr" target="_blank" rel="noopener noreferrer">第4章 网络层（思维导图）-4 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/ccu9ATsOpoZf" target="_blank" rel="noopener noreferrer">第4章 网络层 习题(第1部分)</a></p><p><a href="https://www.kdocs.cn/view/l/cqBldcygudFg" target="_blank" rel="noopener noreferrer">第4章 网络层 习题(第2部分)</a></p><hr><h2 id="_5-运输层" tabindex="-1"><a class="header-anchor" href="#_5-运输层"><span>5. 运输层</span></a></h2><h3 id="_1-概述-1" tabindex="-1"><a class="header-anchor" href="#_1-概述-1"><span>1. 概述</span></a></h3><ul><li>第2~4章依次介绍了计算机网络体系结构中的<mark>物理层</mark>、<mark>数据链路层</mark>和<mark>网络层</mark>，它们共同解决了将主机通过异构网络互联起来所面临的问题，实现了<mark>主机到主机的通信</mark></li><li>然而在计算机网络中实际进行<mark>通信的真正实体，是位于通信两端主机中的进程</mark></li><li>如何<mark><strong>为运行在不同主机上的应用进程提供直接的逻辑通信服务</strong></mark>，就是<mark>运输层的主要任务</mark>，运输层协议又称为端到端协议</li></ul><figure><img src="https://clb.pages.dev/img/pics/image-20231124190055469.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-端口号-复用和分用" tabindex="-1"><a class="header-anchor" href="#_2-端口号-复用和分用"><span>2. 端口号，复用和分用</span></a></h3><h4 id="_1-运输层端口号" tabindex="-1"><a class="header-anchor" href="#_1-运输层端口号"><span>1. 运输层端口号</span></a></h4><ul><li>运行在计算机上的进程是使用<mark>进程标识符</mark>(<code>P</code>rocess <code>ld</code>entification,<code>PID</code>)来标识的。 <ul><li>然而，因特网上的计算机并不是使用统一的操作系统，而<mark>不同操作系统</mark>(Windows、Linux、.MacOS) 又<mark>使用不同格式的进程标识符</mark></li><li>为了使运行不同操作系统的计算机的应用进程之间能够基于网络进行通信，就必须<mark>使用统一的方法 对TCPP体系的应用进程进行标识</mark></li></ul></li><li><code>TCP/IP</code>体系结构的运输层使用端口号来标识和区分应用层的不同应用进程。端口号的<mark>长度为6比特，取 值范围是0~65535</mark></li></ul><img src="https://clb.pages.dev/img/pics/image-20231124191009578.png" style="zoom:100%;"><blockquote><p><mark><strong>端口号只具有本地意义，即端口号只是为了标识本计算机网络协议栈应用层中的各应用进程。在因特网中，不同计算机中的相同端口号是没有关系的，即相互独立。另外，<code>TCP</code>和<code>UDP</code>端口号之间也是没有关系的</strong></mark></p></blockquote><h4 id="_2-发送方的复用和接收方的分用" tabindex="-1"><a class="header-anchor" href="#_2-发送方的复用和接收方的分用"><span>2. 发送方的复用和接收方的分用</span></a></h4><ol><li><strong>复用（Multiplexing）：</strong><ul><li><strong>定义：</strong> 复用是指<mark>将多个应用程序的数据流合并到一个共享的通信通道上</mark></li><li><strong>TCP中的复用：</strong> 在TCP中，复用通过源端口号来实现。TCP连接的两端使用IP地址和端口号来唯一标识。源端口号表示发送端的应用程序，目的端口号表示接收端的应用程序。这样，在单个TCP连接中，多个应用程序的数据可以共享同一个物理通信通道</li><li><strong>UDP中的复用：</strong> 在UDP中，复用同样通过源端口号来实现。UDP报文的源端口号用于标识发送端的应用程序，目的端口号用于标识接收端的应用程序</li></ul></li><li><strong>分用（Demultiplexing）：</strong><ul><li><strong>定义：</strong> 分用是指<mark>根据数据流中的标识信息将合并的数据流分发给正确的应用程序</mark></li><li><strong>TCP中的分用：</strong> 在TCP中，分用通过目的端口号来实现。接收端根据目的端口号将接收到的数据分发给相应的应用程序。这样，TCP层能够将数据正确地传递给目标应用程序</li><li><strong>UDP中的分用：</strong> 在UDP中，同样通过目的端口号来实现分用。接收端通过目的端口号确定应该将数据交付给哪个应用程序</li></ul></li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231124192346522.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><mark>常见协议的分类</mark></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231124192909256.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong><a href="https://www.bilibili.com/video/BV1c4411d7jb?t=353.6&amp;p=58">运输层端口号应用举例</a></strong></p><h3 id="_3-tcp和udp的对比" tabindex="-1"><a class="header-anchor" href="#_3-tcp和udp的对比"><span>3. <code>TCP</code>和<code>UDP</code>的对比</span></a></h3><figure><img src="https://clb.pages.dev/img/pics/image-20231124195001220.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong><mark>注意</mark></strong>：</p><ul><li>TCP面向连接是<mark>逻辑连接，并非真实物理连接</mark></li><li><mark>TCP面向字节流，UDP面向应用报文</mark>（只是给数据报添加一个UDP首部）</li><li>TCP只支持单播，UDP支持单播、多播和广播</li><li><mark>TCP提供可靠服务，UDP提供不可靠服务</mark></li></ul><h3 id="_4-tcp的流量控制" tabindex="-1"><a class="header-anchor" href="#_4-tcp的流量控制"><span>4. TCP的<strong>流量控制</strong></span></a></h3><h4 id="_1-概述-2" tabindex="-1"><a class="header-anchor" href="#_1-概述-2"><span>1. 概述</span></a></h4><blockquote><p>TCP为应用程序提供了<mark>流量控制</mark>（<code>Flow Control</code>）机制，以解决因<mark>发送方发送数据太快而导致接收方来不及接收，造成接收方的接收缓存溢出</mark>的问题</p><p><strong>流量控制的基本方法：</strong><mark>接收方根据自己的接收能力（接收缓存的可用空间大小）控制发送方的发送速率</mark></p></blockquote><h4 id="_2-流量控制方法" tabindex="-1"><a class="header-anchor" href="#_2-流量控制方法"><span>2. <a href="https://www.bilibili.com/video/BV1c4411d7jb?t=44.1&amp;p=60">流量控制方法</a></span></a></h4><ol><li><strong>流程</strong></li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231124203621190.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/image-20231124205122410.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li><p>例题</p><figure><img src="https://clb.pages.dev/img/pics/image-20231124210146804.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ol><h3 id="_5-tcp的拥塞-se-控制" tabindex="-1"><a class="header-anchor" href="#_5-tcp的拥塞-se-控制"><span>5. TCP的<strong>拥塞(se)控制</strong></span></a></h3><h4 id="_1-基本概念-3" tabindex="-1"><a class="header-anchor" href="#_1-基本概念-3"><span>1. 基本概念</span></a></h4><img src="https://clb.pages.dev/img/pics/image-20231124211432668.png"><h4 id="_2-4种拥塞控制方法" tabindex="-1"><a class="header-anchor" href="#_2-4种拥塞控制方法"><span>2. 4种拥塞控制方法</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231124212653543.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_1-慢开始、拥塞避免" tabindex="-1"><a class="header-anchor" href="#_1-慢开始、拥塞避免"><span><mark>1. 慢开始、拥塞避免</mark></span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231124213905436.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2-快重传、快恢复" tabindex="-1"><a class="header-anchor" href="#_2-快重传、快恢复"><span><mark>2. 快重传、快恢复</mark></span></a></h5><blockquote><p>快重传算法和快恢复算法（<mark>改进TCP性能</mark>，1990年Reno版本）</p></blockquote><ol><li>问题</li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231124214535400.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li><p><strong><mark>快重传</mark></strong></p><ul><li><strong>采用快重传算法可以让发送方尽早知道发生了<mark>个别TCP报文段的丢失</mark></strong></li><li>“快重传”是指<strong>使发送方尽快（尽早）进行重传，而不是等重传计时器超时再重传</strong><ul><li>这就要求<mark>接收方不要</mark>等待自己发送数据时才进行<mark>捎带确认</mark>，而是<mark>要立即发送确认</mark>，即使收到了<mark>失序的报文段</mark>也要<mark>立即</mark>发出对已收到的报文段的<mark>重复确认</mark></li><li><mark>发送方</mark>一旦<mark>收到3个连续的重复确认</mark>，就将相应的报文段<mark>立即重传</mark>，而不是等该报文段的重传计时器超时再重传</li></ul></li></ul><figure><img src="https://clb.pages.dev/img/pics/image-20231124215953819.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p><mark><strong>快恢复</strong></mark></p></li></ol><blockquote><p>与快重传算法配合使用的是<strong>快恢复算法</strong>，<mark>发送方</mark>一旦<mark>收到3个重复确认</mark>，就知道现在<mark>只是丢失了个别的报文段</mark>，于是<mark>不启动慢开始算法，<strong>而是执行快恢复算法</strong></mark></p><ul><li><strong>快恢复算法：</strong><mark>发送方将慢开始门限ssthresh的值和拥塞窗口cwnd的值<strong>都调整为当前cwnd值的一半</strong>，并开始执行拥塞避免算法</mark></li><li>也有的快恢复实现是把快恢复开始时的cwnd值再增大一些，即cwnd=新ssthresh+3</li></ul></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231125205520540.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-tcp超时重传时间的选择" tabindex="-1"><a class="header-anchor" href="#_6-tcp超时重传时间的选择"><span>6. TCP超时重传时间的选择</span></a></h3><blockquote><p><strong><mark>TCP超时重传时间RTO的选择</mark>是TCP<mark>最复杂</mark>的问题之一</strong></p><p>问题：</p><ul><li><mark>超时重传时间设置过小</mark>，在确认报文段发送给接收方的过程中，发送方重传数据报文，<mark>增大了网络负荷</mark></li><li><mark>超时重传时间设置过大</mark>，需要重传数据报文时，推迟时间太长，<mark>网络空闲时间大，降低了传输效率</mark></li><li>超时重传时间<code>RTO</code>应略大于往返时间<code>RTT</code></li></ul></blockquote><h4 id="rto的选择" tabindex="-1"><a class="header-anchor" href="#rto的选择"><span><strong><mark>RTO的选择</mark></strong></span></a></h4><h5 id="_1-rtts的计算" tabindex="-1"><a class="header-anchor" href="#_1-rtts的计算"><span>1. RTTs的计算</span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231125211946213.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2-rrtd和rto的计算" tabindex="-1"><a class="header-anchor" href="#_2-rrtd和rto的计算"><span>2. RRTd和RTO的计算</span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231125212210328.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="发生超时重传时无法测准rtt" tabindex="-1"><a class="header-anchor" href="#发生超时重传时无法测准rtt"><span>发生超时重传时无法测准RTT</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231125212838059.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>通过上述两个例子可以看出：当发送方出现超时重传后，收到确认报文段时是无法判断出该确认到底是对原数据报文段的确认还是对重传数据报文段的确认，也就是无法准确测量出RTT，进而无法正确计算RTO</strong></p></blockquote><h5 id="karn算法及修正" tabindex="-1"><a class="header-anchor" href="#karn算法及修正"><span>Karn算法及修正</span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231125213341384.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231125213649193.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_7-tcp可靠传输的实现" tabindex="-1"><a class="header-anchor" href="#_7-tcp可靠传输的实现"><span>7.TCP可靠传输的实现</span></a></h3><ul><li><strong>TCP的窗口以字节为单位</strong></li></ul><figure><img src="https://clb.pages.dev/img/pics/image-20231126212908308.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>发送方 <ul><li>发送窗口内的已发送数据如果迟迟未收到确认，会发生<mark>超时重传</mark></li><li>只有处于发送窗口内的数据才能发送</li></ul></li></ul><figure><img src="https://clb.pages.dev/img/pics/image-20231126213314315.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>接收方 <ul><li>接收方<mark><strong>只能对按序收到的数据中的最高序号给出累计确认</strong></mark>，3次重复确认会导致发送方<mark><strong>快重传</strong></mark></li><li><strong>序号落入接收窗口内的数据是允许接收的数据</strong></li></ul></li></ul><figure><img src="https://clb.pages.dev/img/pics/image-20231126213800870.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><strong><mark>总结</mark></strong></li></ul><figure><img src="https://clb.pages.dev/img/pics/image-20231126214833403.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_8-tcp的运输连接管理" tabindex="-1"><a class="header-anchor" href="#_8-tcp的运输连接管理"><span>8. TCP的运输连接管理</span></a></h3><h4 id="_1-tcp连接的建立" tabindex="-1"><a class="header-anchor" href="#_1-tcp连接的建立"><span>1. TCP连接的建立</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231203192027726.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>TCP双方连接的建立要解决的三个问题</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231203192339624.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-三报文握手" tabindex="-1"><a class="header-anchor" href="#_2-三报文握手"><span>2. 三报文握手</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231203193842118.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>思考：第三次确认<mark>是否多余</mark>，<mark>能不能两报文握手？</mark></strong></p><p>答案：不能，如下图所示</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231203194753830.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-四报文挥手" tabindex="-1"><a class="header-anchor" href="#_3-四报文挥手"><span>3. 四报文挥手</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231203195725711.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>思考：为什么客户端发送完最后一个确认报文段后不立刻关闭而是等待2个MSL时间后才关闭？</strong></p><p>答案：如图所示</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231203200428799.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><mark>TCP保活计时器的作用</mark></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231203201004403.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_9-tcp报文段首部格式" tabindex="-1"><a class="header-anchor" href="#_9-tcp报文段首部格式"><span>9. TCP报文段首部格式</span></a></h3><blockquote><p>参阅思维导图 1</p></blockquote><h3 id="_10-思维导图和习题" tabindex="-1"><a class="header-anchor" href="#_10-思维导图和习题"><span>10. 思维导图和习题</span></a></h3><p><a href="https://www.kdocs.cn/view/l/cgoja6Lpohhj" target="_blank" rel="noopener noreferrer">第5章 运输层（思维导图）-1 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/chkSS9vn9Zgd" target="_blank" rel="noopener noreferrer">第5章 运输层（思维导图）-2 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cpaRQtp0G6Ou" target="_blank" rel="noopener noreferrer">第5章 运输层 习题 (kdocs.cn)</a></p><hr><h2 id="_6-应用层" tabindex="-1"><a class="header-anchor" href="#_6-应用层"><span>6. 应用层</span></a></h2><h3 id="_1-概述-3" tabindex="-1"><a class="header-anchor" href="#_1-概述-3"><span>1. 概述</span></a></h3><ul><li>应用层是计算机网络体系结构的<mark><strong>最顶层</strong></mark>，是<mark><strong>设计和建立计算机网络的最终目的</strong></mark>，也是计算机网络中发展最快的部分 <ul><li>早期基于文本的应用（电子邮件、远程登录、文件传输、新闻组）</li><li>20世纪90年代将因特网带入千家万户的万维网WWW</li><li>当今流行的即时通信、P2P文件共享及各种音视频应用</li><li>计算设备的小型化和“无处不在”，宽带住宅接入和无线接入的日益普及和迅速发展，为未来更多的新型应用提供了广阔的舞台</li></ul></li></ul><h3 id="_2-客户服务器和对等方式" tabindex="-1"><a class="header-anchor" href="#_2-客户服务器和对等方式"><span>2. 客户服务器和对等方式</span></a></h3><h4 id="_1-c-s方式" tabindex="-1"><a class="header-anchor" href="#_1-c-s方式"><span>1. <code>C/S</code>方式</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231203210526922.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/image-20231203210406504.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-p2p方式" tabindex="-1"><a class="header-anchor" href="#_2-p2p方式"><span>2. <code>P2P</code>方式</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231203210957388.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/image-20231203210908603.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-dhcp" tabindex="-1"><a class="header-anchor" href="#_3-dhcp"><span>3. <code>DHCP</code></span></a></h3><h4 id="_1-概述-4" tabindex="-1"><a class="header-anchor" href="#_1-概述-4"><span>1. 概述</span></a></h4><blockquote><p>动态主机配置协议（<code>D</code>ynamic <code>h</code>ost <code>c</code>onfiguration <code>p</code>rotocol）</p><p>作用：</p><ul><li><code>DHCP</code>可为计算机<mark>自动配置网络参数</mark>，包括： <ul><li>IP地址</li><li>子网掩码</li><li>默认网关</li><li>DNS服务器</li></ul></li></ul></blockquote><h4 id="_2-dhcp基本工作过程" tabindex="-1"><a class="header-anchor" href="#_2-dhcp基本工作过程"><span>2. <code>DHCP</code>基本工作过程</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231203212822735.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-dhcp中继代理" tabindex="-1"><a class="header-anchor" href="#_3-dhcp中继代理"><span>3. <code>DHCP</code>中继代理</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231203213528827.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-dns" tabindex="-1"><a class="header-anchor" href="#_4-dns"><span>4. <code>DNS</code></span></a></h3><blockquote><p><strong>域名系统</strong>（<code>D</code>omain <code>N</code>ame <code>S</code>ystem,<code>DNS</code>）</p></blockquote><h4 id="_1-域名系统的作用" tabindex="-1"><a class="header-anchor" href="#_1-域名系统的作用"><span>1. 域名系统的作用</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231204215706663.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/image-20231204215946064.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-因特网的域名结构" tabindex="-1"><a class="header-anchor" href="#_2-因特网的域名结构"><span>2. 因特网的域名结构</span></a></h4><blockquote><p>因特网采用**<mark>层次树状结构的域名结构</mark>**</p></blockquote><h5 id="_1-域名规范" tabindex="-1"><a class="header-anchor" href="#_1-域名规范"><span>1. 域名规范</span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231204220316573.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2-不同国家的域名" tabindex="-1"><a class="header-anchor" href="#_2-不同国家的域名"><span>2. 不同国家的域名</span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231204220844413.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_3-因特网的域名空间" tabindex="-1"><a class="header-anchor" href="#_3-因特网的域名空间"><span>3. 因特网的域名空间</span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231204221139510.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-域名服务器" tabindex="-1"><a class="header-anchor" href="#_3-域名服务器"><span>3. 域名服务器</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231204221502337.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-域名解析" tabindex="-1"><a class="header-anchor" href="#_4-域名解析"><span>4. 域名解析</span></a></h4><h5 id="_1-递归查询" tabindex="-1"><a class="header-anchor" href="#_1-递归查询"><span>1. 递归查询</span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231204221840693.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2-迭代查询" tabindex="-1"><a class="header-anchor" href="#_2-迭代查询"><span>2. 迭代查询</span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231204222346748.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_3-高速缓存" tabindex="-1"><a class="header-anchor" href="#_3-高速缓存"><span>3. 高速缓存</span></a></h5><figure><img src="https://clb.pages.dev/img/pics/image-20231204222807218.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://clb.pages.dev/img/pics/image-20231204222817296.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-ftp" tabindex="-1"><a class="header-anchor" href="#_5-ftp"><span>5. <code>FTP</code></span></a></h3><blockquote><p><strong>文件传送协议</strong>（<code>F</code>ile <code>T</code>ransfer <code>P</code>rotocol，<code>FTP</code>）</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231204223526085.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>基本工作原理</strong></p></blockquote><ol><li>主动模式</li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231204224108197.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>被动模式</li></ol><figure><img src="https://clb.pages.dev/img/pics/image-20231204224211222.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-电子邮件" tabindex="-1"><a class="header-anchor" href="#_6-电子邮件"><span>6. 电子邮件</span></a></h3><h4 id="_1-e-mail" tabindex="-1"><a class="header-anchor" href="#_1-e-mail"><span>1. <code>E-mail</code></span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231205090041032.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-电子邮件系统的组成" tabindex="-1"><a class="header-anchor" href="#_2-电子邮件系统的组成"><span>2. 电子邮件系统的组成</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231205090359331.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-邮件发送和接收过程" tabindex="-1"><a class="header-anchor" href="#_3-邮件发送和接收过程"><span>3. 邮件发送和接收过程</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231205090654917.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-smtp" tabindex="-1"><a class="header-anchor" href="#_4-smtp"><span>4. <code>SMTP</code></span></a></h4><blockquote><p>简单邮件传送协议（Simple Mail Transfer Protocol，<code>SMTP</code>）的基本工作过程</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231205091401858.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_5-电子邮件的信息格式" tabindex="-1"><a class="header-anchor" href="#_5-电子邮件的信息格式"><span>5. 电子邮件的信息格式</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231205091646693.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_6-mime" tabindex="-1"><a class="header-anchor" href="#_6-mime"><span>6. <code>MIME</code></span></a></h4><blockquote><p><strong>多用途因特网邮件扩展</strong> (Multipurpose Internet Mail Extensions，<code>MIME</code>)</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231205091958949.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong><code>MIME</code>对邮件内容中的非ASCII字符转换成ASCII字符</strong></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231205092205673.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_7-常用邮件读取协议" tabindex="-1"><a class="header-anchor" href="#_7-常用邮件读取协议"><span>7. 常用邮件读取协议</span></a></h4><blockquote><p><strong>邮局协议</strong>（Post Office Protocol，<code>POP</code>）</p><p><strong>因特网邮件访问协议</strong>（Internet Message Access Protocol，<code>IMAP</code>）</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231205092629754.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_8-基于万维网的电子邮件" tabindex="-1"><a class="header-anchor" href="#_8-基于万维网的电子邮件"><span>8. 基于万维网的电子邮件</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231205093140031.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_7-万维网" tabindex="-1"><a class="header-anchor" href="#_7-万维网"><span>7. 万维网</span></a></h3><h4 id="_1-概述-5" tabindex="-1"><a class="header-anchor" href="#_1-概述-5"><span>1. 概述</span></a></h4><blockquote><ul><li><strong><mark>万维网</mark></strong>（World Wide Web，<code>WWW</code>）<mark>并非某种特殊的计算机网络</mark>。它是一个大规模的、联机式的信息储藏所，是<mark>运行在因特网上的一个分布式应用</mark></li><li>万维网利用网页之间的<mark>超链接</mark>将不同网站的网页链接成一张逻辑上的信息网</li><li>万维网是欧洲粒子物理实验室的<mark>Tim Berners-Lee</mark>最初于1989年3月提出的</li></ul></blockquote><h4 id="_2-url" tabindex="-1"><a class="header-anchor" href="#_2-url"><span>2. <code>URL</code></span></a></h4><blockquote><p><mark>统一资源定位符</mark>（<code>U</code>niform <code>R</code>esource <code>L</code>ocator）</p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231205094301978.png" alt="image-20231205094301978" tabindex="0" loading="lazy"><figcaption>image-20231205094301978</figcaption></figure><h4 id="_3-万维网文档" tabindex="-1"><a class="header-anchor" href="#_3-万维网文档"><span>3. 万维网文档</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231205094813054.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-http" tabindex="-1"><a class="header-anchor" href="#_4-http"><span>4. <code>HTTP</code></span></a></h4><h5 id="_1-概述-6" tabindex="-1"><a class="header-anchor" href="#_1-概述-6"><span>1. 概述</span></a></h5><blockquote><p><strong><mark>超文本传输协议</mark></strong><code>HTTP</code>(HyperText Transfer Protocol)</p><p>HTTP定义了<strong>浏览器（即万维网客户进程）怎样向万维网服务器请求万维网文档，以及万维网服务器怎样把万维网文档传送给浏览器</strong></p></blockquote><figure><img src="https://clb.pages.dev/img/pics/image-20231205095412658.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2-报文格式" tabindex="-1"><a class="header-anchor" href="#_2-报文格式"><span>2. 报文格式</span></a></h5><ul><li><mark>请求报文格式</mark></li></ul><figure><img src="https://clb.pages.dev/img/pics/image-20231205095830137.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><mark>响应报文格式</mark></li></ul><figure><img src="https://clb.pages.dev/img/pics/image-20231205100113338.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_5-cookie" tabindex="-1"><a class="header-anchor" href="#_5-cookie"><span>5. <code>Cookie</code></span></a></h4><ul><li>早期的万维网应用非常简单，仅仅是用户查看存放在不同服务器上的各种静态的文档。因此HTTP被设计为一种<mark>无状态</mark>的协议。这样可以简化服务器的设计</li><li>现在，用户可以通过万维网进行各种复杂的应用，如网上购物、电子商务等。这些应用往往需要万维网服务器能够识别用户</li><li>Cookie提供了一种机制使得万维网服务器能够“记住”用户，而无需用户主动提供用户标识信息。也就是说，<mark>Cookie是一种对无状态的HTTP进行状态化的技术</mark></li></ul><figure><img src="https://clb.pages.dev/img/pics/image-20231205103323858.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_6-万维网缓存与代理服务器" tabindex="-1"><a class="header-anchor" href="#_6-万维网缓存与代理服务器"><span>6. 万维网缓存与代理服务器</span></a></h4><figure><img src="https://clb.pages.dev/img/pics/image-20231205103638305.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_7-思维导图和相关习题" tabindex="-1"><a class="header-anchor" href="#_7-思维导图和相关习题"><span>7. 思维导图和相关习题</span></a></h4><p><a href="https://www.kdocs.cn/view/l/cle5dxMBHZIH" target="_blank" rel="noopener noreferrer">第6章 应用层（思维导图）-1 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cabHsokbKiNO" target="_blank" rel="noopener noreferrer">第6章 应用层（思维导图）-2 (kdocs.cn)</a></p><p><a href="https://www.kdocs.cn/view/l/cv9vfzDopPvi" target="_blank" rel="noopener noreferrer">第6章 应用层 习题 (kdocs.cn)</a></p><hr><h2 id="_7-计算机网络相关术语" tabindex="-1"><a class="header-anchor" href="#_7-计算机网络相关术语"><span>7.<em>计算机网络相关术语</em></span></a></h2><p><strong>ACK</strong> (Acknowledgement) 确认</p><p><strong>ADSL</strong> (Asymmetric Digital Subscriber Line) 非对称数字用户线</p><p><strong>AP</strong> (Access Point) 接入点</p><p><strong>AP</strong> (Application) 应用程序</p><p><strong>API</strong> (Application Programming Interface) 应用编程接口</p><p><strong>APNIC</strong> (Asia Pacific Network Information Centre) 亚太网络信息中心</p><p><strong>ARIN</strong> (American Registry for Internet Numbers) 美国因特网号码注册机构</p><p><strong><mark>ARP (Address Resolution Protocol) 地址解析协议</mark></strong></p><p><strong>ARPA</strong> (Advanced Research Projects Agency) 美国国防部远景研究规划局 (高级研究计划署)</p><p><strong>ARQ</strong> (Automatic Repeat-request) 自动重传请求</p><p><strong>AS</strong> (autonomous system) 自制系统</p><p><mark><strong>BGP</strong> (Border Gateway Protocol ) 边界网关协议</mark></p><p><strong>BOOTP</strong> (Bootstrap Protocol) 引导程序协议</p><p><strong>BSA</strong> (Basic Service Area) 基本服务区</p><p><strong>BT</strong> (Bit Torrent) 一种P2P程序</p><p><strong>CA</strong> (Certificate Authority) 认证中心</p><p><strong>CA</strong> (Collision Avoidance) 碰撞避免</p><p><strong>CATV</strong> ( Community Antenna Television) 有线电视</p><p><mark><strong>CDM</strong> (Code Division Multiplexing) 码分复用</mark></p><p><mark><strong>CDMA</strong> (Code Division Multiple Access) 码分多址</mark></p><p><strong>CGI</strong> (Common Gateway Interface) 通用网关接口</p><p><mark><strong>CIDR</strong> (Classless Inter-Domain Routing) 无分类域间路由选择</mark></p><p><mark><strong>CRC</strong> (Cyclic Redundancy Check) 循环冗余校验</mark></p><p><mark><strong>CSMA/CD</strong> (Carrier Sense Multiple Access/Collision Detect) 载波监听 多址接入/碰撞检测</mark></p><p><strong>CSMA/CA</strong> (Carrier Sense Multiple Access with Collision Avoidance) 载波监听多点接入/冲突避免</p><p><strong>CTS</strong> (Clear To Send) 允许发送</p><p><strong>DACS</strong> (Digital Access and Cross-connect System) 数字交接系统</p><p><strong><mark>DHCP (Dynamic Host Configuration Protocol) 动态主机配置协议</mark></strong></p><p><strong>DiffServ (Differentiated Services) 区分服务</strong></p><p><strong>DLCI</strong> (Data Link Connection Identifier) 数据链路连接标识符</p><p><strong>DMT</strong> (Discrete Multi-Tone) 离散多音 (调制)</p><p><mark><strong>DNS</strong> (Domain Name System) 域名系统</mark></p><p><strong>DoS</strong> (Denial of Service) 拒绝服务</p><p><strong>DS</strong> (Distribution System) 分配系统</p><p><strong>DSL</strong> (Digital Subscriber Line) 数字用户线</p><p><strong>DSLAM</strong> ( DSL Access Multiplexer) 数字用户线接入复用器</p><p><strong>DSSS</strong> (Direct Sequence Spread Spectrum) 直接序列扩频</p><p><strong>EFM</strong> (Ethernet in the First Mile ) 第一英里的以太网</p><p><strong>EFPHB</strong> (Expedited Forwarding Per-Hop Behavior) 迅速转发每跳行为</p><p><strong>EGP</strong> (Exterior Gateway Protocol) 外部网关协议</p><p><strong>EIA</strong> (Electronic Industries Association) 美国电子工业协会</p><p><strong>FCS</strong> (Frame Check Sequence) 帧检验序列</p><p><strong>FDDI</strong> (fiber-distributed data interface) 光纤分布式数据接口</p><p><mark><strong>FDM</strong> (Frequency-division multiplexing) 频分复用</mark></p><p><strong>FEC</strong> (Forwarding Equivalence Class) 转发等价类</p><p><strong>FFD</strong> (Full-Function Device) 全功能设备</p><p><strong>FHSS</strong> (Frequency-Hopping Spread Spectrum) 跳频扩频</p><p><strong>FIFO</strong> (First In First Out) 先进先出</p><p><strong>FQ</strong> (Fair Queuing) 公平排队</p><p><mark><strong>FTP (File Transfer Protocol) 文件传输协议</strong></mark></p><p><strong>GIF</strong> (Graphics System for Mobile) 全球移动通信系统，GSM体制</p><p><strong>HDLC</strong> ( High-Level Data Link Control) 高级数据链路控制</p><p><strong>HDSL</strong> (High-speed DSL) 高速数字用户线</p><p><strong>HSSG</strong> (High Speed Study Group) 高速研究组</p><p><strong>HTML</strong> (Hyper Text Markup Language) 超文本标记语言</p><p><strong><mark>HTTP (Hyper Text Transfer Protocol) 超文本传送协议</mark></strong></p><p><strong>IAB</strong> (Internet Architecture Board) 因特网体系结构委员</p><p><strong>IANA</strong> (Internet Assigned Numbers Authority) 因特网赋号管理局</p><p><strong><mark>ICMP (Internet Control Message Protocol) 网际控制报文协议</mark></strong></p><p><strong>IEEE</strong> (Institute of Electrical and Electronic Engineering) (美国) 电气和电子工程师学会</p><p><strong>IFS</strong> (Inter Frame Space) 帧间间隔</p><p><strong>IGMP</strong> (Internet Group Management Protocol) 网际组管理协议</p><p><strong>IGP</strong> (Interior Gateway Protocol) 内部网关协议</p><p><strong>IM</strong> (Instant Messaging) 及时传信</p><p><strong><mark>IMAP ( Internet Message Access Protocol) 因特网报文存取协议</mark></strong></p><p><strong>IntServ</strong> (Integrated Services) 综合服务</p><p><strong><mark>IP (Internet Protocol) 网际协议</mark></strong></p><p><strong>IPCP</strong> (IP Control Protocol) IP控制协议</p><p><strong>IPng</strong> (IP Next Protocol) 下一代IP</p><p><strong>IPsec</strong> (IP security) IP安全协议</p><p><strong>ISDN</strong> (Internet Services Digital Network) 综合业务数字网</p><p><strong>ISO</strong> (International Organization for Standardization ) 国际标准化组织</p><p><strong>ISOC</strong> (Internet Society) 因特网协会</p><p><strong>ISP</strong> (Internet Service Provider) 因特网服务提供者</p><p><mark><strong>LAN</strong> (Local Area Network) 局域网</mark></p><p><strong>LCP</strong> (Link Control Protocol) 链路控制协议</p><p><strong>LDP</strong> (Label Distribution Protocol) 标记分配协议</p><p><strong>LLC</strong>(Logical Link Control) 逻辑链路控制</p><p><strong>LSR</strong>(Label Switched Router) 标记交换路由器</p><p><strong>MAC</strong>(Medium Access Control) 媒体接入控制</p><p><strong>MACA</strong>(Multiple Access with Collision Avoidance)具有碰撞避免的多点接入</p><p><mark><strong>MAN</strong>(Metropolitan Area Network) 城域网</mark></p><p><strong>MBONE</strong>(Multicast Backbone On the InterNet) 多播主干网</p><p><strong>MCU</strong>(Multipoint Control Unit) 多点控制单元</p><p><strong>MD</strong>(Message Digest) 报文摘要</p><p><strong>MF</strong>(More Fragment) 还有分片</p><p><strong>MRU</strong>(Maximum Receive Unit) 最大接收单元</p><p><strong>MSS</strong>(Maximum Segment Size) 最长报文段</p><p><strong>MTU</strong>(Maximum Transfer Unit) 最大传送单元</p><p><strong>NAP</strong>(Network Access Point)　网络接入点</p><p><mark><strong>NAT</strong>(Network Address Translation) 网络地址转换</mark></p><p><strong>NAV</strong>(Network Allocation Vector) 网络分配向量</p><p><strong>NCP</strong>(Network Control Protocol) 网络控制协议</p><p><strong>NFS</strong>(Network File System) 网络文件系统</p><p><strong>NOC</strong>(Network Operations Center) 网络运行中心</p><p><strong>NSAP</strong>(Network Service Access Point) 网络层服务访问点</p><p><strong>NSF</strong>(National Service Foundation) (美国)国家科学基金会</p><p><strong>OFDM</strong>(Orthogonal Frequency Division Multiplexing) 正交频分复用</p><p><strong>OSI/RM</strong> (Open Systems Interconnection Reference Model) 开发系统互连基本参考模型</p><p><mark><strong>OSPF(Open Shortest Path First) 开放最短通路优先</strong></mark></p><p><mark><strong>P2P</strong>(Peer-to-Peer) 对等方式</mark></p><p><mark><strong>PAN</strong>(Personal Area Network) 个人区域网</mark></p><p><strong>PAP</strong>(Password Authentication Protocol) 口令鉴别协议</p><p><strong>PCA</strong>(Policy Certification Authority) 政策认证中心</p><p><strong>PCF</strong>(Point Coordination Function) 点协调功能</p><p><strong>PCM</strong>(Pulse Code Modulation) 脉码调制</p><p><strong>PEM</strong>(Privacy Enhanced Mail) 因特网的正式邮件加密标准</p><p><strong>PGP</strong>(Pretty Good Privacy) 一种电子邮件的机密标准</p><p><strong>PHB</strong>(Per-Hop Behavior) 每跳行为</p><p><strong>PIFS</strong>(Point Coordination Function IFS) 点协调功能帧间间隔</p><p><strong>PK</strong>(public key) 公钥，公开密钥</p><p><strong>PoP</strong>(Point of Presence) 汇接点</p><p><mark><strong>POP</strong>(Post Office Protocol) 邮局协议</mark></p><p><strong><mark>PPP（Point-to-Point Protocol） 点对点协议</mark></strong></p><p><strong>PPPoE</strong>(Point-to-Point Protocol over Ethernet) 以太网上的点对点协议</p><p><strong>QAM</strong>(Quadrature Amplitude Modulation) 正交幅度调制</p><p><strong>QoS</strong>(Quality of Service)　服务质量</p><p><strong>QPSK</strong>(Quarternary Phase Shift Keying)正交相移键控</p><p><strong>RARP</strong>(Reverse Address Resolution Protocol)逆地址解析协议</p><p><strong>RFD</strong>(Reduced-Function Device)精简功能设备</p><p><strong>RG</strong>(Research Group)研究组</p><p><strong><mark>RIP(Routing Information Protocol)路由信息协议</mark></strong></p><p><strong>RIPE</strong>(法文表示的European IP Network)欧洲的IP 网络</p><p><strong>RTP</strong>(Real-Time Transfer Protocol)实时传送协议</p><p><strong>RTSP</strong>(Real-Time Streaming Protocol)实时流式协议</p><p><mark><strong>RTT</strong>(Round-Trip Time)往返时间</mark></p><p><strong>SA</strong>(Security Association)安全关联</p><p><strong>SACK</strong>(Selective ACK)选择确认</p><p><strong>SAP</strong>(Service Access Point)服务访问点</p><p><strong>SCTP</strong>(Stream Control Transmission Protocol)流控制传输协议</p><p><strong>SDH</strong>(Synchronous Digital Hierarchy)同步数字系列</p><p><strong>SMI</strong>(Structure of Management Information)管理信息结构</p><p><strong><mark>SMTP(Simple Mail Transfer Protocol)简单邮件传送协议</mark></strong></p><p><strong>SNA</strong>(System Network Architecture)系统网络体系结构</p><p><strong>SNMP</strong>(Simple Network Management Protocol)简单网络管理协议</p><p><strong>SOH</strong>(Start Of Header)首部开始</p><p><strong>SONET</strong>(Synchronous Optical Network)同步光纤网</p><p><strong>STDM</strong>(Statistic TDM)统计时分复用</p><p><strong>STM</strong>(Synchronous Transfer Module)同步传递模块</p><p><strong>STS</strong>(Synchronous Transport Signal)同步传送信号</p><p><strong>TAG</strong>(TAG Switching)标记交换</p><p><strong>TCB</strong>(Transmission Control Block)传输控制程序块</p><p><strong><mark>TCP(Transmission Control Protocol)传输控制协议</mark></strong></p><p><mark><strong>TDM</strong>(Time Division Multiplexing)时分复用</mark></p><p><strong>TELNET</strong>(TELetype NETwork)电传机网络，一种因特网的应用程序</p><p><strong>TFTP</strong>(Trivial File Transfer Protocol)简单文件传送协议</p><p><strong>TIA</strong>(Telecommunications Industries Association)电信行业协会</p><p><strong>TLD</strong>(Top Level Domain)顶级域名</p><p><strong>TLI</strong>(Transport Layer Interface)运输层接口</p><p><strong>TLS</strong>(Transport Layer Security)运输层安全协议</p><p><strong>TLV</strong>(Type-Length-Value)类型-长度-值</p><p><strong>TPDU</strong>(Transport Protocol Data Unit)运输协议数据单元</p><p><strong><mark>UDP(User Datagram Protocol)用户数据报协议</mark></strong></p><p><mark><strong>URL</strong>(Uniform Resource Locator)统一资源定位符</mark></p><p><strong>UTP</strong>(Unshield Twisted Pair)无屏蔽双绞线</p><p><strong>UWB</strong>(Ultra-Wide Band)超宽带</p><p><strong>VC</strong>(Virtual Circuit)虚电路</p><p><strong>VDSL</strong>(Very high speed DSL)甚高数字用户线</p><p><mark><strong>VLAN</strong>(Virtual LAN)虚拟局域网</mark></p><p><mark><strong>VPN</strong>(Virtual Private Network) 虚拟专用网</mark></p><p><mark><strong>WAN</strong>(Wide Area Network) 广域网</mark></p><p><strong>WDM</strong>(Wavelength Division Multiplexing) 波分复用</p><p><strong>WG</strong>(Working Group)　工作组</p><p><strong>Ｗi-Fi</strong>(Wireless-Fidelity) 无线保真度（无限局域网的同义词）</p><p><strong>WLAN</strong>(Wireless Local Area Network) 无线局域网</p><p><strong>WMAN</strong>(Wireless Metrpolitan Area Network) 无线个城域网</p><p><strong>WPAN</strong>(wireless Personal Area Network) 无线个人区域网</p><p><strong>WSN</strong>(Wireless Sensor Network)　无线传感器网络</p><p><mark><strong>WWW</strong>(World Wide Web) 万维网</mark></p>',737),s=[p];function g(n,o){return e(),i("div",null,s)}const m=a(r,[["render",g],["__file","network.html.vue"]]),d=JSON.parse('{"path":"/posts/kaoyan/network.html","title":"计算机网络","lang":"zh-CN","frontmatter":{"title":"计算机网络","date":"2023-10-26T21:04:32.000Z","categories":"考研","tags":["计算机网络"],"cover":"https://s2.loli.net/2024/06/09/oDMZ8ErVu49t5lv.webp","sticky":10000,"description":"计算机网络 1. 计算机网络概述 1.1 作用 计算机网络在信息时代中的作用：21世纪是以数字化、网络化、信息化为重要特征的信息时代，作为信息的最大载体和传输媒介，网络已成为这个信息时代的核心基础 1.2 定义与分类 1.2.1 定义 简单定义：硬件（独立和连接）+软件（协议）+目的（共享和通信） 计算机网络就是以传输信息为基本目的，用通信线路和通信设...","head":[["meta",{"property":"og:url","content":"https://caolib.pages.dev/posts/kaoyan/network.html"}],["meta",{"property":"og:title","content":"计算机网络"}],["meta",{"property":"og:description","content":"计算机网络 1. 计算机网络概述 1.1 作用 计算机网络在信息时代中的作用：21世纪是以数字化、网络化、信息化为重要特征的信息时代，作为信息的最大载体和传输媒介，网络已成为这个信息时代的核心基础 1.2 定义与分类 1.2.1 定义 简单定义：硬件（独立和连接）+软件（协议）+目的（共享和通信） 计算机网络就是以传输信息为基本目的，用通信线路和通信设..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s2.loli.net/2024/06/09/oDMZ8ErVu49t5lv.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T11:22:32.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://s2.loli.net/2024/06/09/oDMZ8ErVu49t5lv.webp"}],["meta",{"name":"twitter:image:alt","content":"计算机网络"}],["meta",{"property":"article:author","content":"caolibin"}],["meta",{"property":"article:tag","content":"计算机网络"}],["meta",{"property":"article:published_time","content":"2023-10-26T21:04:32.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T11:22:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"计算机网络\\",\\"image\\":[\\"https://clb.pages.dev/img/pics/image-20231024225354835.png\\",\\"https://clb.pages.dev/img/pics/CopyQ.hVntPh.png\\",\\"https://clb.pages.dev/img/pics/202310261920366.png\\",\\"https://clb.pages.dev/img/pics/CopyQ.uQqXEZ.png\\",\\"https://clb.pages.dev/img/pics/CopyQ.EvnJQE.png\\",\\"https://clb.pages.dev/img/pics/CopyQ.ZGZDeQ.png\\",\\"https://clb.pages.dev/img/pics/62913fa9e4b0c71a3a81421f.jpeg\\",\\"https://clb.pages.dev/img/pics/202310261924745.png\\",\\"https://clb.pages.dev/img/pics/202310261925145.png\\",\\"https://clb.pages.dev/img/pics/202310261930116.png\\",\\"https://clb.pages.dev/img/pics/image-20231228112913963.png\\",\\"https://clb.pages.dev/img/pics/202310262020595.png\\",\\"https://clb.pages.dev/img/pics/202310262040597.png\\",\\"https://clb.pages.dev/img/pics/202310262047837.png\\",\\"https://clb.pages.dev/img/pics/202310262054137.png\\",\\"https://clb.pages.dev/img/pics/202310262059898.png\\",\\"https://clb.pages.dev/img/pics/202310262102013.png\\",\\"https://clb.pages.dev/img/pics/202310262005937.png\\",\\"https://clb.pages.dev/img/pics/202310262014965.png\\",\\"https://clb.pages.dev/img/pics/202310261938546.png\\",\\"https://clb.pages.dev/img/pics/202310261942966.png\\",\\"https://clb.pages.dev/img/pics/202310261946552.png\\",\\"https://clb.pages.dev/img/pics/202310261954118.png\\",\\"https://clb.pages.dev/img/pics/202310281701023.png\\",\\"https://clb.pages.dev/img/pics/202310282020333.png\\",\\"https://clb.pages.dev/img/pics/202310282039043.png\\",\\"https://clb.pages.dev/img/pics/202310291347647.png\\",\\"https://clb.pages.dev/img/pics/image-20231029190744213.png\\",\\"https://clb.pages.dev/img/pics/image-20231029192326597.png\\",\\"https://clb.pages.dev/img/pics/image-20231101192256040.png\\",\\"https://clb.pages.dev/img/pics/image-20231101193502184.png\\",\\"https://clb.pages.dev/img/pics/image-20231101193959244.png\\",\\"https://clb.pages.dev/img/pics/image-20231101194313756.png\\",\\"https://clb.pages.dev/img/pics/image-20231101194720144.png\\",\\"https://clb.pages.dev/img/pics/image-20231101195208168.png\\",\\"https://clb.pages.dev/img/pics/image-20231101204223808.png\\",\\"https://clb.pages.dev/img/pics/image-20231101215803331.png\\",\\"https://clb.pages.dev/img/pics/image-20231101211215263.png\\",\\"https://clb.pages.dev/img/pics/image-20231101212500499.png\\",\\"https://clb.pages.dev/img/pics/image-20231101213541707.png\\",\\"https://clb.pages.dev/img/pics/image-20231101221019454.png\\",\\"https://clb.pages.dev/img/pics/image-20231103154439848.png\\",\\"https://clb.pages.dev/img/pics/image-20231101221315932.png\\",\\"https://clb.pages.dev/img/pics/image-20231103161532858.png\\",\\"https://clb.pages.dev/img/pics/image-20231103162311360.png\\",\\"https://clb.pages.dev/img/pics/image-20231103163826951.png\\",\\"https://clb.pages.dev/img/pics/image-20231103162720907.png\\",\\"https://clb.pages.dev/img/pics/image-20231103162936995.png\\",\\"https://clb.pages.dev/img/pics/image-20231103163318636.png\\",\\"https://clb.pages.dev/img/pics/image-20231103163952585.png\\",\\"https://clb.pages.dev/img/pics/202311062053040.png\\",\\"https://clb.pages.dev/img/pics/image-20231109211711863.png\\",\\"https://clb.pages.dev/img/pics/image-20231109212131157.png\\",\\"https://clb.pages.dev/img/pics/image-20231109213737953.png\\",\\"https://clb.pages.dev/img/pics/image-20231109214347270.png\\",\\"https://clb.pages.dev/img/pics/62942804e4b055af8b78ba06.jpeg\\",\\"https://clb.pages.dev/img/pics/image-20231109220004217.png\\",\\"https://clb.pages.dev/img/pics/image-20231109221003126.png\\",\\"https://clb.pages.dev/img/pics/image-20231109222104719.png\\",\\"https://clb.pages.dev/img/pics/image-20231109222736241.png\\",\\"https://clb.pages.dev/img/pics/image-20231111200010935.png\\",\\"https://clb.pages.dev/img/pics/image-20231111193532792.png\\",\\"https://clb.pages.dev/img/pics/image-20231112213851481.png\\",\\"https://clb.pages.dev/img/pics/image-20231112220730923.png\\",\\"https://clb.pages.dev/img/pics/image-20231112223308951.png\\",\\"https://clb.pages.dev/img/pics/image-20231113193113576.png\\",\\"https://clb.pages.dev/img/pics/010ac0446c7c01e405dd1b7baf38d50a.png\\",\\"https://clb.pages.dev/img/pics/image-20231118220443883.png\\",\\"https://clb.pages.dev/img/pics/image-20231118224728007.png\\",\\"https://clb.pages.dev/img/pics/image-20231118225157334.png\\",\\"https://clb.pages.dev/img/pics/image-20231119161128658.png\\",\\"https://clb.pages.dev/img/pics/image-20231119165547509.png\\",\\"https://clb.pages.dev/img/pics/image-20231119164911210.png\\",\\"https://clb.pages.dev/img/pics/image-20231119171554203.png\\",\\"https://clb.pages.dev/img/pics/image-20231119222854859.png\\",\\"https://clb.pages.dev/img/pics/image-20231120194840526.png\\",\\"https://clb.pages.dev/img/pics/image-20231120195049808.png\\",\\"https://clb.pages.dev/img/pics/image-20231120204244180.png\\",\\"https://clb.pages.dev/img/pics/image-20231120210441321.png\\",\\"https://clb.pages.dev/img/pics/image-20231120211722902.png\\",\\"https://clb.pages.dev/img/pics/image-20231124190055469.png\\",\\"https://clb.pages.dev/img/pics/image-20231124192346522.png\\",\\"https://clb.pages.dev/img/pics/image-20231124192909256.png\\",\\"https://clb.pages.dev/img/pics/image-20231124195001220.png\\",\\"https://clb.pages.dev/img/pics/image-20231124203621190.png\\",\\"https://clb.pages.dev/img/pics/image-20231124205122410.png\\",\\"https://clb.pages.dev/img/pics/image-20231124210146804.png\\",\\"https://clb.pages.dev/img/pics/image-20231124212653543.png\\",\\"https://clb.pages.dev/img/pics/image-20231124213905436.png\\",\\"https://clb.pages.dev/img/pics/image-20231124214535400.png\\",\\"https://clb.pages.dev/img/pics/image-20231124215953819.png\\",\\"https://clb.pages.dev/img/pics/image-20231125205520540.png\\",\\"https://clb.pages.dev/img/pics/image-20231125211946213.png\\",\\"https://clb.pages.dev/img/pics/image-20231125212210328.png\\",\\"https://clb.pages.dev/img/pics/image-20231125212838059.png\\",\\"https://clb.pages.dev/img/pics/image-20231125213341384.png\\",\\"https://clb.pages.dev/img/pics/image-20231125213649193.png\\",\\"https://clb.pages.dev/img/pics/image-20231126212908308.png\\",\\"https://clb.pages.dev/img/pics/image-20231126213314315.png\\",\\"https://clb.pages.dev/img/pics/image-20231126213800870.png\\",\\"https://clb.pages.dev/img/pics/image-20231126214833403.png\\",\\"https://clb.pages.dev/img/pics/image-20231203192027726.png\\",\\"https://clb.pages.dev/img/pics/image-20231203192339624.png\\",\\"https://clb.pages.dev/img/pics/image-20231203193842118.png\\",\\"https://clb.pages.dev/img/pics/image-20231203194753830.png\\",\\"https://clb.pages.dev/img/pics/image-20231203195725711.png\\",\\"https://clb.pages.dev/img/pics/image-20231203200428799.png\\",\\"https://clb.pages.dev/img/pics/image-20231203201004403.png\\",\\"https://clb.pages.dev/img/pics/image-20231203210526922.png\\",\\"https://clb.pages.dev/img/pics/image-20231203210406504.png\\",\\"https://clb.pages.dev/img/pics/image-20231203210957388.png\\",\\"https://clb.pages.dev/img/pics/image-20231203210908603.png\\",\\"https://clb.pages.dev/img/pics/image-20231203212822735.png\\",\\"https://clb.pages.dev/img/pics/image-20231203213528827.png\\",\\"https://clb.pages.dev/img/pics/image-20231204215706663.png\\",\\"https://clb.pages.dev/img/pics/image-20231204215946064.png\\",\\"https://clb.pages.dev/img/pics/image-20231204220316573.png\\",\\"https://clb.pages.dev/img/pics/image-20231204220844413.png\\",\\"https://clb.pages.dev/img/pics/image-20231204221139510.png\\",\\"https://clb.pages.dev/img/pics/image-20231204221502337.png\\",\\"https://clb.pages.dev/img/pics/image-20231204221840693.png\\",\\"https://clb.pages.dev/img/pics/image-20231204222346748.png\\",\\"https://clb.pages.dev/img/pics/image-20231204222807218.png\\",\\"https://clb.pages.dev/img/pics/image-20231204222817296.png\\",\\"https://clb.pages.dev/img/pics/image-20231204223526085.png\\",\\"https://clb.pages.dev/img/pics/image-20231204224108197.png\\",\\"https://clb.pages.dev/img/pics/image-20231204224211222.png\\",\\"https://clb.pages.dev/img/pics/image-20231205090041032.png\\",\\"https://clb.pages.dev/img/pics/image-20231205090359331.png\\",\\"https://clb.pages.dev/img/pics/image-20231205090654917.png\\",\\"https://clb.pages.dev/img/pics/image-20231205091401858.png\\",\\"https://clb.pages.dev/img/pics/image-20231205091646693.png\\",\\"https://clb.pages.dev/img/pics/image-20231205091958949.png\\",\\"https://clb.pages.dev/img/pics/image-20231205092205673.png\\",\\"https://clb.pages.dev/img/pics/image-20231205092629754.png\\",\\"https://clb.pages.dev/img/pics/image-20231205093140031.png\\",\\"https://clb.pages.dev/img/pics/image-20231205094301978.png\\",\\"https://clb.pages.dev/img/pics/image-20231205094813054.png\\",\\"https://clb.pages.dev/img/pics/image-20231205095412658.png\\",\\"https://clb.pages.dev/img/pics/image-20231205095830137.png\\",\\"https://clb.pages.dev/img/pics/image-20231205100113338.png\\",\\"https://clb.pages.dev/img/pics/image-20231205103323858.png\\",\\"https://clb.pages.dev/img/pics/image-20231205103638305.png\\"],\\"datePublished\\":\\"2023-10-26T21:04:32.000Z\\",\\"dateModified\\":\\"2024-09-11T11:22:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"caolibin\\",\\"url\\":\\"https://github.com/caolib\\",\\"email\\":\\"1265501579@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 计算机网络概述","slug":"_1-计算机网络概述","link":"#_1-计算机网络概述","children":[{"level":3,"title":"1.1 作用","slug":"_1-1-作用","link":"#_1-1-作用","children":[]},{"level":3,"title":"1.2 定义与分类","slug":"_1-2-定义与分类","link":"#_1-2-定义与分类","children":[]},{"level":3,"title":"1.3 互联网概述","slug":"_1-3-互联网概述","link":"#_1-3-互联网概述","children":[]},{"level":3,"title":"1.4 电路交换和分组交换","slug":"_1-4-电路交换和分组交换","link":"#_1-4-电路交换和分组交换","children":[]},{"level":3,"title":"1.5 计算机网络的主要性能指标","slug":"_1-5-计算机网络的主要性能指标","link":"#_1-5-计算机网络的主要性能指标","children":[]},{"level":3,"title":"1.6 计算机网络体系结构","slug":"_1-6-计算机网络体系结构","link":"#_1-6-计算机网络体系结构","children":[]},{"level":3,"title":"1.7 相关习题","slug":"_1-7-相关习题","link":"#_1-7-相关习题","children":[]},{"level":3,"title":"1.8 思维导图和习题","slug":"_1-8-思维导图和习题","link":"#_1-8-思维导图和习题","children":[]}]},{"level":2,"title":"2. 物理层","slug":"_2-物理层","link":"#_2-物理层","children":[{"level":3,"title":"2.1 物理层的基本概念","slug":"_2-1-物理层的基本概念","link":"#_2-1-物理层的基本概念","children":[]},{"level":3,"title":"2.2 数据通信的基础知识","slug":"_2-2-数据通信的基础知识","link":"#_2-2-数据通信的基础知识","children":[]},{"level":3,"title":"2.3 物理层下的传输媒体（了解即可）","slug":"_2-3-物理层下的传输媒体-了解即可","link":"#_2-3-物理层下的传输媒体-了解即可","children":[]},{"level":3,"title":"2.4 信道复用技术","slug":"_2-4-信道复用技术","link":"#_2-4-信道复用技术","children":[]},{"level":3,"title":"2.5 相关习题和资料","slug":"_2-5-相关习题和资料","link":"#_2-5-相关习题和资料","children":[]}]},{"level":2,"title":"3. 数据链路层","slug":"_3-数据链路层","link":"#_3-数据链路层","children":[{"level":3,"title":"3.1 数据链路和帧","slug":"_3-1-数据链路和帧","link":"#_3-1-数据链路和帧","children":[]},{"level":3,"title":"3.2 封装成帧和透明传输","slug":"_3-2-封装成帧和透明传输","link":"#_3-2-封装成帧和透明传输","children":[]},{"level":3,"title":"3.3 差错检测","slug":"_3-3-差错检测","link":"#_3-3-差错检测","children":[]},{"level":3,"title":"3.4 可靠传输","slug":"_3-4-可靠传输","link":"#_3-4-可靠传输","children":[]},{"level":3,"title":"3.5 可靠传输的实现机制","slug":"_3-5-可靠传输的实现机制","link":"#_3-5-可靠传输的实现机制","children":[]},{"level":3,"title":"3.6 点对点协议(PPP)","slug":"_3-6-点对点协议-ppp","link":"#_3-6-点对点协议-ppp","children":[]},{"level":3,"title":"3.7 媒体接入控制问题","slug":"_3-7-媒体接入控制问题","link":"#_3-7-媒体接入控制问题","children":[]},{"level":3,"title":"3.8 MAC、IP地址、ARP协议","slug":"_3-8-mac、ip地址、arp协议","link":"#_3-8-mac、ip地址、arp协议","children":[]},{"level":3,"title":"3.9 集线器和交换机的区别","slug":"_3-9-集线器和交换机的区别","link":"#_3-9-集线器和交换机的区别","children":[]},{"level":3,"title":"3.10 透明网桥的生成树协议STP","slug":"_3-10-透明网桥的生成树协议stp","link":"#_3-10-透明网桥的生成树协议stp","children":[]},{"level":3,"title":"3.11 虚拟局域网VLAN","slug":"_3-11-虚拟局域网vlan","link":"#_3-11-虚拟局域网vlan","children":[]},{"level":3,"title":"4. 思维导图和习题","slug":"_4-思维导图和习题","link":"#_4-思维导图和习题","children":[]}]},{"level":2,"title":"4. 网络层","slug":"_4-网络层","link":"#_4-网络层","children":[{"level":3,"title":"4.1 概述","slug":"_4-1-概述","link":"#_4-1-概述","children":[]},{"level":3,"title":"4.2 网络层提供的两种服务","slug":"_4-2-网络层提供的两种服务","link":"#_4-2-网络层提供的两种服务","children":[]},{"level":3,"title":"4.3 IP数据报的发送和转发过程","slug":"_4-3-ip数据报的发送和转发过程","link":"#_4-3-ip数据报的发送和转发过程","children":[]},{"level":3,"title":"4.4 静态路由配置","slug":"_4-4-静态路由配置","link":"#_4-4-静态路由配置","children":[]},{"level":3,"title":"4.5 路由选择协议","slug":"_4-5-路由选择协议","link":"#_4-5-路由选择协议","children":[]},{"level":3,"title":"4.6 RIP","slug":"_4-6-rip","link":"#_4-6-rip","children":[]},{"level":3,"title":"4.7 OSPF","slug":"_4-7-ospf","link":"#_4-7-ospf","children":[]},{"level":3,"title":"4.8  BGP","slug":"_4-8-bgp","link":"#_4-8-bgp","children":[]},{"level":3,"title":"4.9 IPv4数据报的首部格式","slug":"_4-9-ipv4数据报的首部格式","link":"#_4-9-ipv4数据报的首部格式","children":[]},{"level":3,"title":"4.10 ICMP","slug":"_4-10-icmp","link":"#_4-10-icmp","children":[]},{"level":3,"title":"4.11 VPN","slug":"_4-11-vpn","link":"#_4-11-vpn","children":[]},{"level":3,"title":"4.12 NAT","slug":"_4-12-nat","link":"#_4-12-nat","children":[]},{"level":3,"title":"5. 思维导图和习题","slug":"_5-思维导图和习题","link":"#_5-思维导图和习题","children":[]}]},{"level":2,"title":"5. 运输层","slug":"_5-运输层","link":"#_5-运输层","children":[{"level":3,"title":"1. 概述","slug":"_1-概述-1","link":"#_1-概述-1","children":[]},{"level":3,"title":"2. 端口号，复用和分用","slug":"_2-端口号-复用和分用","link":"#_2-端口号-复用和分用","children":[]},{"level":3,"title":"3.  TCP和UDP的对比","slug":"_3-tcp和udp的对比","link":"#_3-tcp和udp的对比","children":[]},{"level":3,"title":"4. TCP的流量控制","slug":"_4-tcp的流量控制","link":"#_4-tcp的流量控制","children":[]},{"level":3,"title":"5. TCP的拥塞(se)控制","slug":"_5-tcp的拥塞-se-控制","link":"#_5-tcp的拥塞-se-控制","children":[]},{"level":3,"title":"6. TCP超时重传时间的选择","slug":"_6-tcp超时重传时间的选择","link":"#_6-tcp超时重传时间的选择","children":[]},{"level":3,"title":"7.TCP可靠传输的实现","slug":"_7-tcp可靠传输的实现","link":"#_7-tcp可靠传输的实现","children":[]},{"level":3,"title":"8. TCP的运输连接管理","slug":"_8-tcp的运输连接管理","link":"#_8-tcp的运输连接管理","children":[]},{"level":3,"title":"9. TCP报文段首部格式","slug":"_9-tcp报文段首部格式","link":"#_9-tcp报文段首部格式","children":[]},{"level":3,"title":"10. 思维导图和习题","slug":"_10-思维导图和习题","link":"#_10-思维导图和习题","children":[]}]},{"level":2,"title":"6. 应用层","slug":"_6-应用层","link":"#_6-应用层","children":[{"level":3,"title":"1. 概述","slug":"_1-概述-3","link":"#_1-概述-3","children":[]},{"level":3,"title":"2. 客户服务器和对等方式","slug":"_2-客户服务器和对等方式","link":"#_2-客户服务器和对等方式","children":[]},{"level":3,"title":"3. DHCP","slug":"_3-dhcp","link":"#_3-dhcp","children":[]},{"level":3,"title":"4. DNS","slug":"_4-dns","link":"#_4-dns","children":[]},{"level":3,"title":"5. FTP","slug":"_5-ftp","link":"#_5-ftp","children":[]},{"level":3,"title":"6. 电子邮件","slug":"_6-电子邮件","link":"#_6-电子邮件","children":[]},{"level":3,"title":"7. 万维网","slug":"_7-万维网","link":"#_7-万维网","children":[]}]},{"level":2,"title":"7.计算机网络相关术语","slug":"_7-计算机网络相关术语","link":"#_7-计算机网络相关术语","children":[]}],"git":{"createdTime":1717920495000,"updatedTime":1726053752000,"contributors":[{"name":"caolibin","email":"1265501579@qq.com","commits":4},{"name":"libin","email":"1265501579@qq.com","commits":2}]},"readingTime":{"minutes":58.7,"words":17610},"filePathRelative":"posts/kaoyan/network.md","localizedDate":"2023年10月27日","excerpt":"\\n<h2>1. 计算机网络概述</h2>\\n<h3>1.1 作用</h3>\\n<blockquote>\\n<p>计算机网络在信息时代中的作用：21世纪是以数字化、网络化、信息化为重要特征的信息时代，作为信息的最大载体和传输媒介，网络已成为这个信息时代的核心基础</p>\\n</blockquote>\\n<h3>1.2 定义与分类</h3>\\n<h4>1.2.1 定义</h4>\\n<p>简单定义：<mark>硬件</mark>（独立和连接）+<mark>软件</mark>（协议）+<mark>目的</mark>（共享和通信）</p>\\n<blockquote>\\n<p><strong>计算机网络就是以传输信息为基本目的，用通信线路和通信设备将多个计算机连接起来的计算机系统的集合</strong></p>\\n</blockquote>","autoDesc":true}');export{m as comp,d as data};
